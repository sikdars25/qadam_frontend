{"ast":null,"code":"var _jsxFileName = \"D:\\\\AI\\\\_Programs\\\\CBSE\\\\aqnamic\\\\frontend\\\\src\\\\components\\\\SingleQuestionUpload.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './SingleQuestionUpload.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SingleQuestionUpload = ({\n  onClose,\n  onQuestionParsed\n}) => {\n  _s();\n  const [inputMethod, setInputMethod] = useState('text'); // 'text', 'paste'\n  const [questionText, setQuestionText] = useState('');\n  const [pastedImage, setPastedImage] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [parsedQuestion, setParsedQuestion] = useState(null);\n  const handlePaste = async e => {\n    var _e$clipboardData;\n    const items = (_e$clipboardData = e.clipboardData) === null || _e$clipboardData === void 0 ? void 0 : _e$clipboardData.items;\n    if (!items) return;\n    for (let i = 0; i < items.length; i++) {\n      const item = items[i];\n      if (item.type.indexOf('image') !== -1) {\n        const blob = item.getAsFile();\n        if (blob) {\n          setPastedImage(blob);\n          setError('');\n\n          // Create preview URL\n          const reader = new FileReader();\n          reader.onload = event => {\n            // Store the data URL for preview\n            setPastedImage({\n              blob: blob,\n              preview: event.target.result,\n              name: `pasted-image-${Date.now()}.png`,\n              size: blob.size\n            });\n          };\n          reader.readAsDataURL(blob);\n          console.log('Image pasted from clipboard');\n          break;\n        }\n      }\n    }\n  };\n  const handleClearPastedImage = () => {\n    setPastedImage(null);\n  };\n  const handleSubmit = async () => {\n    if (inputMethod === 'text' && !questionText.trim()) {\n      setError('Please enter question text');\n      return;\n    }\n    if (inputMethod === 'file' && !selectedFile) {\n      setError('Please select a file');\n      return;\n    }\n    if (inputMethod === 'paste' && !pastedImage) {\n      setError('Please paste an image (Ctrl+V or Cmd+V)');\n      return;\n    }\n    setLoading(true);\n    setError('');\n    try {\n      const formData = new FormData();\n      if (inputMethod === 'text') {\n        formData.append('question_text', questionText);\n        formData.append('input_type', 'text');\n      } else if (inputMethod === 'paste') {\n        formData.append('file', pastedImage.blob, pastedImage.name);\n        formData.append('input_type', 'file');\n        formData.append('file_type', 'png');\n      } else {\n        formData.append('file', selectedFile);\n        formData.append('input_type', 'file');\n        formData.append('file_type', fileType);\n      }\n      const response = await fetch('http://localhost:5000/api/parse-single-question', {\n        method: 'POST',\n        body: formData\n      });\n      const data = await response.json();\n      if (data.success) {\n        setParsedQuestion(data.question);\n        if (onQuestionParsed) {\n          onQuestionParsed(data.question);\n        }\n      } else {\n        setError(data.error || 'Failed to parse question');\n      }\n    } catch (err) {\n      setError('Error: ' + err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleReset = () => {\n    setQuestionText('');\n    setSelectedFile(null);\n    setPastedImage(null);\n    setFileType('');\n    setParsedQuestion(null);\n    setError('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"single-question-modal\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"single-question-modal-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"single-question-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\uD83D\\uDCDD Upload Single Question\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-btn\",\n          onClick: onClose,\n          children: \"\\u2715\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), !parsedQuestion ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-method-selector\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: `method-btn ${inputMethod === 'text' ? 'active' : ''}`,\n            onClick: () => setInputMethod('text'),\n            children: \"\\u270D\\uFE0F Text Input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `method-btn ${inputMethod === 'file' ? 'active' : ''}`,\n            onClick: () => setInputMethod('file'),\n            children: \"\\uD83D\\uDCC1 File Upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `method-btn ${inputMethod === 'paste' ? 'active' : ''}`,\n            onClick: () => setInputMethod('paste'),\n            children: \"\\uD83D\\uDCCB Paste Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this), inputMethod === 'text' ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-input-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Enter Question Text:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: questionText,\n            onChange: e => setQuestionText(e.target.value),\n            placeholder: \"Type or paste your question here... Example:\\n1. What is the capital of France?\\n(A) London\\n(B) Paris\\n(C) Berlin\\n(D) Madrid\",\n            rows: 12,\n            className: \"question-textarea\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"char-count\",\n            children: [questionText.length, \" characters\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 15\n        }, this) : inputMethod === 'paste' ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"paste-input-section\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"paste-area\",\n            onPaste: handlePaste,\n            tabIndex: 0,\n            children: !pastedImage ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"paste-icon\",\n                children: \"\\uD83D\\uDCCB\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"paste-instruction\",\n                children: [\"Press \", /*#__PURE__*/_jsxDEV(\"kbd\", {\n                  children: \"Ctrl+V\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 31\n                }, this), \" (or \", /*#__PURE__*/_jsxDEV(\"kbd\", {\n                  children: \"Cmd+V\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 53\n                }, this), \" on Mac) to paste an image\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"paste-hint\",\n                children: \"Take a screenshot or copy an image, then paste it here\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"pasted-image-preview\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: pastedImage.preview,\n                alt: \"Pasted question\",\n                className: \"preview-image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"pasted-image-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"pasted-image-name\",\n                  children: [\"\\uD83D\\uDCF7 \", pastedImage.name]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 185,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"pasted-image-size\",\n                  children: [(pastedImage.size / 1024).toFixed(2), \" KB\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 186,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"clear-pasted-btn\",\n                onClick: handleClearPastedImage,\n                children: \"\\u2715 Clear Image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"file-input-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"file-upload-area\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              id: \"question-file\",\n              accept: \".jpg,.jpeg,.png,.pdf,.docx,.txt\",\n              onChange: handleFileSelect,\n              className: \"file-input-hidden\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"question-file\",\n              className: \"file-upload-label\",\n              children: selectedFile ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"file-icon\",\n                  children: \"\\uD83D\\uDCC4\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 213,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"file-name\",\n                  children: selectedFile.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"file-size\",\n                  children: [(selectedFile.size / 1024).toFixed(2), \" KB\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 215,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"file-type-badge\",\n                  children: fileType.toUpperCase()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 218,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"upload-icon\",\n                  children: \"\\uD83D\\uDCE4\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 222,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"upload-text\",\n                  children: \"Click to upload or drag & drop\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 223,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"upload-formats\",\n                  children: \"JPG, PNG, PDF, DOCX, or TXT\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 226,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 17\n          }, this), selectedFile && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"change-file-btn\",\n            onClick: () => {\n              setSelectedFile(null);\n              setFileType('');\n            },\n            children: \"Change File\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 15\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: [\"\\u26A0\\uFE0F \", error]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"action-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"submit-btn\",\n            onClick: handleSubmit,\n            disabled: loading || inputMethod === 'text' && !questionText.trim() || inputMethod === 'file' && !selectedFile || inputMethod === 'paste' && !pastedImage,\n            children: loading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"spinner\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 21\n              }, this), \"Parsing...\"]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: \"\\uD83D\\uDE80 Parse Question\"\n            }, void 0, false)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"cancel-btn\",\n            onClick: onClose,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"parsed-result\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"result-header\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"\\u2705 Question Parsed Successfully!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"parsed-question-display\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"parsed-field\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Question Number:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"field-value\",\n              children: parsedQuestion.question_number || 'N/A'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"parsed-field\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Question Type:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `type-badge ${parsedQuestion.question_type}`,\n              children: parsedQuestion.question_type || 'unknown'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"parsed-field full-width\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Question Text:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"question-text-box\",\n              children: parsedQuestion.question_text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 15\n          }, this), parsedQuestion.sub_parts && parsedQuestion.sub_parts.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"parsed-field full-width\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Sub-parts:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"sub-parts-list\",\n              children: parsedQuestion.sub_parts.map((part, idx) => /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"sub-part-badge\",\n                children: part\n              }, idx, false, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 17\n          }, this), parsedQuestion.marks && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"parsed-field\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Marks:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"marks-value\",\n              children: parsedQuestion.marks\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 17\n          }, this), parsedQuestion.has_diagram && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"parsed-field\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Has Diagram:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"diagram-indicator\",\n              children: \"\\uD83D\\uDCCA Yes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"result-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"parse-another-btn\",\n            onClick: handleReset,\n            children: \"\\uD83D\\uDCDD Parse Another Question\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"close-result-btn\",\n            onClick: onClose,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n};\n_s(SingleQuestionUpload, \"StfV9mBDYp2Wr5Pv+SjNcOr4wGA=\");\n_c = SingleQuestionUpload;\nexport default SingleQuestionUpload;\nvar _c;\n$RefreshReg$(_c, \"SingleQuestionUpload\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","SingleQuestionUpload","onClose","onQuestionParsed","_s","inputMethod","setInputMethod","questionText","setQuestionText","pastedImage","setPastedImage","loading","setLoading","error","setError","parsedQuestion","setParsedQuestion","handlePaste","e","_e$clipboardData","items","clipboardData","i","length","item","type","indexOf","blob","getAsFile","reader","FileReader","onload","event","preview","target","result","name","Date","now","size","readAsDataURL","console","log","handleClearPastedImage","handleSubmit","trim","selectedFile","formData","FormData","append","fileType","response","fetch","method","body","data","json","success","question","err","message","handleReset","setSelectedFile","setFileType","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","value","onChange","placeholder","rows","onPaste","tabIndex","src","alt","toFixed","id","accept","handleFileSelect","htmlFor","toUpperCase","disabled","question_number","question_type","question_text","sub_parts","map","part","idx","marks","has_diagram","_c","$RefreshReg$"],"sources":["D:/AI/_Programs/CBSE/aqnamic/frontend/src/components/SingleQuestionUpload.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './SingleQuestionUpload.css';\n\nconst SingleQuestionUpload = ({ onClose, onQuestionParsed }) => {\n  const [inputMethod, setInputMethod] = useState('text'); // 'text', 'paste'\n  const [questionText, setQuestionText] = useState('');\n  const [pastedImage, setPastedImage] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [parsedQuestion, setParsedQuestion] = useState(null);\n\n  const handlePaste = async (e) => {\n    const items = e.clipboardData?.items;\n    if (!items) return;\n\n    for (let i = 0; i < items.length; i++) {\n      const item = items[i];\n      \n      if (item.type.indexOf('image') !== -1) {\n        const blob = item.getAsFile();\n        if (blob) {\n          setPastedImage(blob);\n          setError('');\n          \n          // Create preview URL\n          const reader = new FileReader();\n          reader.onload = (event) => {\n            // Store the data URL for preview\n            setPastedImage({\n              blob: blob,\n              preview: event.target.result,\n              name: `pasted-image-${Date.now()}.png`,\n              size: blob.size\n            });\n          };\n          reader.readAsDataURL(blob);\n          \n          console.log('Image pasted from clipboard');\n          break;\n        }\n      }\n    }\n  };\n\n  const handleClearPastedImage = () => {\n    setPastedImage(null);\n  };\n\n  const handleSubmit = async () => {\n    if (inputMethod === 'text' && !questionText.trim()) {\n      setError('Please enter question text');\n      return;\n    }\n\n    if (inputMethod === 'file' && !selectedFile) {\n      setError('Please select a file');\n      return;\n    }\n\n    if (inputMethod === 'paste' && !pastedImage) {\n      setError('Please paste an image (Ctrl+V or Cmd+V)');\n      return;\n    }\n\n    setLoading(true);\n    setError('');\n\n    try {\n      const formData = new FormData();\n      \n      if (inputMethod === 'text') {\n        formData.append('question_text', questionText);\n        formData.append('input_type', 'text');\n      } else if (inputMethod === 'paste') {\n        formData.append('file', pastedImage.blob, pastedImage.name);\n        formData.append('input_type', 'file');\n        formData.append('file_type', 'png');\n      } else {\n        formData.append('file', selectedFile);\n        formData.append('input_type', 'file');\n        formData.append('file_type', fileType);\n      }\n\n      const response = await fetch('http://localhost:5000/api/parse-single-question', {\n        method: 'POST',\n        body: formData\n      });\n\n      const data = await response.json();\n\n      if (data.success) {\n        setParsedQuestion(data.question);\n        if (onQuestionParsed) {\n          onQuestionParsed(data.question);\n        }\n      } else {\n        setError(data.error || 'Failed to parse question');\n      }\n    } catch (err) {\n      setError('Error: ' + err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleReset = () => {\n    setQuestionText('');\n    setSelectedFile(null);\n    setPastedImage(null);\n    setFileType('');\n    setParsedQuestion(null);\n    setError('');\n  };\n\n  return (\n    <div className=\"single-question-modal\">\n      <div className=\"single-question-modal-content\">\n        <div className=\"single-question-header\">\n          <h2>📝 Upload Single Question</h2>\n          <button className=\"close-btn\" onClick={onClose}>✕</button>\n        </div>\n\n        {!parsedQuestion ? (\n          <>\n            <div className=\"input-method-selector\">\n              <button\n                className={`method-btn ${inputMethod === 'text' ? 'active' : ''}`}\n                onClick={() => setInputMethod('text')}\n              >\n                ✍️ Text Input\n              </button>\n              <button\n                className={`method-btn ${inputMethod === 'file' ? 'active' : ''}`}\n                onClick={() => setInputMethod('file')}\n              >\n                📁 File Upload\n              </button>\n              <button\n                className={`method-btn ${inputMethod === 'paste' ? 'active' : ''}`}\n                onClick={() => setInputMethod('paste')}\n              >\n                📋 Paste Image\n              </button>\n            </div>\n\n            {inputMethod === 'text' ? (\n              <div className=\"text-input-section\">\n                <label>Enter Question Text:</label>\n                <textarea\n                  value={questionText}\n                  onChange={(e) => setQuestionText(e.target.value)}\n                  placeholder=\"Type or paste your question here...&#10;&#10;Example:&#10;1. What is the capital of France?&#10;(A) London&#10;(B) Paris&#10;(C) Berlin&#10;(D) Madrid\"\n                  rows={12}\n                  className=\"question-textarea\"\n                />\n                <div className=\"char-count\">\n                  {questionText.length} characters\n                </div>\n              </div>\n            ) : inputMethod === 'paste' ? (\n              <div className=\"paste-input-section\">\n                <div \n                  className=\"paste-area\"\n                  onPaste={handlePaste}\n                  tabIndex={0}\n                >\n                  {!pastedImage ? (\n                    <>\n                      <div className=\"paste-icon\">📋</div>\n                      <div className=\"paste-instruction\">\n                        Press <kbd>Ctrl+V</kbd> (or <kbd>Cmd+V</kbd> on Mac) to paste an image\n                      </div>\n                      <div className=\"paste-hint\">\n                        Take a screenshot or copy an image, then paste it here\n                      </div>\n                    </>\n                  ) : (\n                    <div className=\"pasted-image-preview\">\n                      <img \n                        src={pastedImage.preview} \n                        alt=\"Pasted question\" \n                        className=\"preview-image\"\n                      />\n                      <div className=\"pasted-image-info\">\n                        <div className=\"pasted-image-name\">📷 {pastedImage.name}</div>\n                        <div className=\"pasted-image-size\">\n                          {(pastedImage.size / 1024).toFixed(2)} KB\n                        </div>\n                      </div>\n                      <button \n                        className=\"clear-pasted-btn\"\n                        onClick={handleClearPastedImage}\n                      >\n                        ✕ Clear Image\n                      </button>\n                    </div>\n                  )}\n                </div>\n              </div>\n            ) : (\n              <div className=\"file-input-section\">\n                <div className=\"file-upload-area\">\n                  <input\n                    type=\"file\"\n                    id=\"question-file\"\n                    accept=\".jpg,.jpeg,.png,.pdf,.docx,.txt\"\n                    onChange={handleFileSelect}\n                    className=\"file-input-hidden\"\n                  />\n                  <label htmlFor=\"question-file\" className=\"file-upload-label\">\n                    {selectedFile ? (\n                      <>\n                        <div className=\"file-icon\">📄</div>\n                        <div className=\"file-name\">{selectedFile.name}</div>\n                        <div className=\"file-size\">\n                          {(selectedFile.size / 1024).toFixed(2)} KB\n                        </div>\n                        <div className=\"file-type-badge\">{fileType.toUpperCase()}</div>\n                      </>\n                    ) : (\n                      <>\n                        <div className=\"upload-icon\">📤</div>\n                        <div className=\"upload-text\">\n                          Click to upload or drag & drop\n                        </div>\n                        <div className=\"upload-formats\">\n                          JPG, PNG, PDF, DOCX, or TXT\n                        </div>\n                      </>\n                    )}\n                  </label>\n                </div>\n\n                {selectedFile && (\n                  <button className=\"change-file-btn\" onClick={() => {\n                    setSelectedFile(null);\n                    setFileType('');\n                  }}>\n                    Change File\n                  </button>\n                )}\n              </div>\n            )}\n\n            {error && (\n              <div className=\"error-message\">\n                ⚠️ {error}\n              </div>\n            )}\n\n            <div className=\"action-buttons\">\n              <button\n                className=\"submit-btn\"\n                onClick={handleSubmit}\n                disabled={loading || (inputMethod === 'text' && !questionText.trim()) || (inputMethod === 'file' && !selectedFile) || (inputMethod === 'paste' && !pastedImage)}\n              >\n                {loading ? (\n                  <>\n                    <span className=\"spinner\"></span>\n                    Parsing...\n                  </>\n                ) : (\n                  <>\n                    🚀 Parse Question\n                  </>\n                )}\n              </button>\n              <button className=\"cancel-btn\" onClick={onClose}>\n                Cancel\n              </button>\n            </div>\n          </>\n        ) : (\n          <div className=\"parsed-result\">\n            <div className=\"result-header\">\n              <h3>✅ Question Parsed Successfully!</h3>\n            </div>\n\n            <div className=\"parsed-question-display\">\n              <div className=\"parsed-field\">\n                <strong>Question Number:</strong>\n                <span className=\"field-value\">{parsedQuestion.question_number || 'N/A'}</span>\n              </div>\n\n              <div className=\"parsed-field\">\n                <strong>Question Type:</strong>\n                <span className={`type-badge ${parsedQuestion.question_type}`}>\n                  {parsedQuestion.question_type || 'unknown'}\n                </span>\n              </div>\n\n              <div className=\"parsed-field full-width\">\n                <strong>Question Text:</strong>\n                <div className=\"question-text-box\">\n                  {parsedQuestion.question_text}\n                </div>\n              </div>\n\n              {parsedQuestion.sub_parts && parsedQuestion.sub_parts.length > 0 && (\n                <div className=\"parsed-field full-width\">\n                  <strong>Sub-parts:</strong>\n                  <div className=\"sub-parts-list\">\n                    {parsedQuestion.sub_parts.map((part, idx) => (\n                      <span key={idx} className=\"sub-part-badge\">{part}</span>\n                    ))}\n                  </div>\n                </div>\n              )}\n\n              {parsedQuestion.marks && (\n                <div className=\"parsed-field\">\n                  <strong>Marks:</strong>\n                  <span className=\"marks-value\">{parsedQuestion.marks}</span>\n                </div>\n              )}\n\n              {parsedQuestion.has_diagram && (\n                <div className=\"parsed-field\">\n                  <strong>Has Diagram:</strong>\n                  <span className=\"diagram-indicator\">📊 Yes</span>\n                </div>\n              )}\n            </div>\n\n            <div className=\"result-actions\">\n              <button className=\"parse-another-btn\" onClick={handleReset}>\n                📝 Parse Another Question\n              </button>\n              <button className=\"close-result-btn\" onClick={onClose}>\n                Close\n              </button>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default SingleQuestionUpload;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}