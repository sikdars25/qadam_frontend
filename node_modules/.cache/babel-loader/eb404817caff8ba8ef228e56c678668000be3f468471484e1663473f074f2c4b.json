{"ast":null,"code":"var _jsxFileName = \"D:\\\\AI\\\\_Programs\\\\CBSE\\\\aqnamic\\\\frontend\\\\src\\\\components\\\\UploadPapers.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './UploadPapers.css';\nimport ParsedQuestionsView from './ParsedQuestionsView';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadPapers = ({\n  user\n}) => {\n  _s();\n  // Question Papers State\n  const [title, setTitle] = useState('');\n  const [subject, setSubject] = useState('');\n  const [file, setFile] = useState(null);\n  const [uploadedPapers, setUploadedPapers] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState({\n    type: '',\n    text: ''\n  });\n\n  // Textbooks State\n  const [textbookTitle, setTextbookTitle] = useState('');\n  const [textbookSubject, setTextbookSubject] = useState('');\n  const [textbookAuthor, setTextbookAuthor] = useState('');\n  const [textbookFile, setTextbookFile] = useState(null);\n  const [uploadedTextbooks, setUploadedTextbooks] = useState([]);\n  const [textbookLoading, setTextbookLoading] = useState(false);\n  const [textbookMessage, setTextbookMessage] = useState({\n    type: '',\n    text: ''\n  });\n\n  // Question Parsing State\n  const [parsingPaper, setParsingPaper] = useState(null);\n  const [parsedQuestions, setParsedQuestions] = useState([]);\n  const [showParsedQuestions, setShowParsedQuestions] = useState(false);\n  const [parsingLoading, setParsingLoading] = useState(false);\n  const [parsingMessage, setParsingMessage] = useState({\n    type: '',\n    text: ''\n  });\n  useEffect(() => {\n    fetchUploadedPapers();\n    fetchUploadedTextbooks();\n    fetchParsedQuestions();\n  }, []);\n  const fetchUploadedPapers = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/uploaded-papers');\n      setUploadedPapers(response.data);\n    } catch (err) {\n      console.error('Error fetching papers:', err);\n    }\n  };\n  const fetchUploadedTextbooks = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/textbooks');\n      setUploadedTextbooks(response.data);\n    } catch (err) {\n      console.error('Error fetching textbooks:', err);\n    }\n  };\n  const fetchParsedQuestions = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/parsed-questions');\n      setParsedQuestions(response.data);\n    } catch (err) {\n      console.error('Error fetching parsed questions:', err);\n    }\n  };\n  const handleParseQuestions = async paperId => {\n    setParsingLoading(true);\n    setParsingMessage({\n      type: '',\n      text: ''\n    });\n    setParsingPaper(paperId);\n    try {\n      const response = await axios.post(`http://localhost:5000/api/parse-questions/${paperId}`);\n      if (response.data.success) {\n        setParsingMessage({\n          type: 'success',\n          text: `Successfully parsed ${response.data.total_questions} questions!`\n        });\n        fetchParsedQuestions();\n        setTimeout(() => setShowParsedQuestions(true), 1000);\n      }\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setParsingMessage({\n        type: 'error',\n        text: ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || 'Parsing failed. Please try again.'\n      });\n    } finally {\n      setParsingLoading(false);\n      setParsingPaper(null);\n    }\n  };\n  const handleCleanDuplicates = async () => {\n    if (!window.confirm('Remove all duplicate questions from database?')) {\n      return;\n    }\n    setParsingLoading(true);\n    setParsingMessage({\n      type: '',\n      text: ''\n    });\n    try {\n      const response = await axios.post('http://localhost:5000/api/clean-duplicates');\n      if (response.data.success) {\n        setParsingMessage({\n          type: 'success',\n          text: response.data.message\n        });\n        fetchParsedQuestions();\n      }\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      setParsingMessage({\n        type: 'error',\n        text: ((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.error) || 'Cleanup failed.'\n      });\n    } finally {\n      setParsingLoading(false);\n    }\n  };\n  const handleDeletePaper = async (paperId, paperTitle) => {\n    if (!window.confirm(`Are you sure you want to delete \"${paperTitle}\"?\\n\\nThis will also delete all parsed questions associated with this paper.`)) {\n      return;\n    }\n    setLoading(true);\n    setMessage({\n      type: '',\n      text: ''\n    });\n    try {\n      const response = await axios.delete(`http://localhost:5000/api/delete-paper/${paperId}`);\n      if (response.data.success) {\n        setMessage({\n          type: 'success',\n          text: 'Paper deleted successfully!'\n        });\n        fetchUploadedPapers();\n        fetchParsedQuestions();\n      }\n    } catch (err) {\n      var _err$response3, _err$response3$data;\n      setMessage({\n        type: 'error',\n        text: ((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : (_err$response3$data = _err$response3.data) === null || _err$response3$data === void 0 ? void 0 : _err$response3$data.error) || 'Delete failed. Please try again.'\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleDeleteTextbook = async (textbookId, textbookTitle) => {\n    if (!window.confirm(`Are you sure you want to delete \"${textbookTitle}\"?`)) {\n      return;\n    }\n    setTextbookLoading(true);\n    setTextbookMessage({\n      type: '',\n      text: ''\n    });\n    try {\n      const response = await axios.delete(`http://localhost:5000/api/delete-textbook/${textbookId}`);\n      if (response.data.success) {\n        setTextbookMessage({\n          type: 'success',\n          text: 'Textbook deleted successfully!'\n        });\n        fetchUploadedTextbooks();\n      }\n    } catch (err) {\n      var _err$response4, _err$response4$data;\n      setTextbookMessage({\n        type: 'error',\n        text: ((_err$response4 = err.response) === null || _err$response4 === void 0 ? void 0 : (_err$response4$data = _err$response4.data) === null || _err$response4$data === void 0 ? void 0 : _err$response4$data.error) || 'Delete failed. Please try again.'\n      });\n    } finally {\n      setTextbookLoading(false);\n    }\n  };\n  const handleFileChange = e => {\n    const selectedFile = e.target.files[0];\n    if (selectedFile) {\n      setFile(selectedFile);\n\n      // Auto-populate title with filename (without extension)\n      const fileName = selectedFile.name;\n      const fileNameWithoutExt = fileName.substring(0, fileName.lastIndexOf('.')) || fileName;\n\n      // Only set title if it's empty\n      if (!title) {\n        setTitle(fileNameWithoutExt);\n      }\n    }\n  };\n  const handleTextbookFileChange = e => {\n    const selectedFile = e.target.files[0];\n    if (selectedFile) {\n      setTextbookFile(selectedFile);\n\n      // Auto-populate title with filename (without extension)\n      const fileName = selectedFile.name;\n      const fileNameWithoutExt = fileName.substring(0, fileName.lastIndexOf('.')) || fileName;\n\n      // Only set title if it's empty\n      if (!textbookTitle) {\n        setTextbookTitle(fileNameWithoutExt);\n      }\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!title || !subject || !file) {\n      setMessage({\n        type: 'error',\n        text: 'Please fill all fields and select a file'\n      });\n      return;\n    }\n    setLoading(true);\n    setMessage({\n      type: '',\n      text: ''\n    });\n    const formData = new FormData();\n    formData.append('file', file);\n    formData.append('title', title);\n    formData.append('subject', subject);\n    formData.append('user_id', user.id);\n    try {\n      const response = await axios.post('http://localhost:5000/api/upload-paper', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      if (response.data.success) {\n        setMessage({\n          type: 'success',\n          text: 'Paper uploaded successfully!'\n        });\n        setTitle('');\n        setSubject('');\n        setFile(null);\n        document.getElementById('file-input').value = '';\n        fetchUploadedPapers();\n      }\n    } catch (err) {\n      var _err$response5, _err$response5$data;\n      setMessage({\n        type: 'error',\n        text: ((_err$response5 = err.response) === null || _err$response5 === void 0 ? void 0 : (_err$response5$data = _err$response5.data) === null || _err$response5$data === void 0 ? void 0 : _err$response5$data.error) || 'Upload failed. Please try again.'\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleTextbookSubmit = async e => {\n    e.preventDefault();\n    if (!textbookTitle || !textbookSubject || !textbookFile) {\n      setTextbookMessage({\n        type: 'error',\n        text: 'Please fill all required fields and select a file'\n      });\n      return;\n    }\n    setTextbookLoading(true);\n    setTextbookMessage({\n      type: '',\n      text: ''\n    });\n    const formData = new FormData();\n    formData.append('file', textbookFile);\n    formData.append('title', textbookTitle);\n    formData.append('subject', textbookSubject);\n    formData.append('author', textbookAuthor);\n    formData.append('user_id', user.id);\n    try {\n      const response = await axios.post('http://localhost:5000/api/upload-textbook', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      if (response.data.success) {\n        setTextbookMessage({\n          type: 'success',\n          text: 'Textbook uploaded successfully!'\n        });\n        setTextbookTitle('');\n        setTextbookSubject('');\n        setTextbookAuthor('');\n        setTextbookFile(null);\n        document.getElementById('textbook-file-input').value = '';\n        fetchUploadedTextbooks();\n      }\n    } catch (err) {\n      var _err$response6, _err$response6$data;\n      setTextbookMessage({\n        type: 'error',\n        text: ((_err$response6 = err.response) === null || _err$response6 === void 0 ? void 0 : (_err$response6$data = _err$response6.data) === null || _err$response6$data === void 0 ? void 0 : _err$response6$data.error) || 'Upload failed. Please try again.'\n      });\n    } finally {\n      setTextbookLoading(false);\n    }\n  };\n  const formatDate = dateString => {\n    const date = new Date(dateString);\n    return date.toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"upload-papers\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uD83D\\uDCE4 Upload Materials\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Share textbooks, study materials, and past papers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-section compact\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"section-title\",\n        children: \"\\uD83D\\uDCDA Upload Textbooks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"compact-form-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleTextbookSubmit,\n          className: \"compact-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: textbookTitle,\n            onChange: e => setTextbookTitle(e.target.value),\n            placeholder: \"Title (auto-filled)\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: textbookSubject,\n            onChange: e => setTextbookSubject(e.target.value),\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Subject\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Mathematics\",\n              children: \"Mathematics\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Physics\",\n              children: \"Physics\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Chemistry\",\n              children: \"Chemistry\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Biology\",\n              children: \"Biology\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"English\",\n              children: \"English\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Computer Science\",\n              children: \"Computer Science\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Social Science\",\n              children: \"Social Science\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: textbookAuthor,\n            onChange: e => setTextbookAuthor(e.target.value),\n            placeholder: \"Author (optional)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            id: \"textbook-file-input\",\n            onChange: handleTextbookFileChange,\n            accept: \".pdf,.doc,.docx,.txt\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"compact-upload-btn\",\n            disabled: textbookLoading,\n            children: textbookLoading ? '⏳' : '📚 Upload'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 11\n        }, this), textbookMessage.text && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `compact-message ${textbookMessage.type}`,\n          children: textbookMessage.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 9\n      }, this), uploadedTextbooks.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table-container\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"documents-table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 367,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Subject\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 368,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Author\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 369,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Uploaded By\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 370,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 371,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 372,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: uploadedTextbooks.map(textbook => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"title-cell\",\n                children: [\"\\uD83D\\uDCDA \", textbook.title]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 378,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"subject-badge\",\n                  children: textbook.subject\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 379,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 379,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: textbook.author || '-'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 380,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: textbook.uploaded_by_name || 'Unknown'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 381,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"date-cell\",\n                children: formatDate(textbook.uploaded_at)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 382,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"table-delete-btn\",\n                  onClick: () => handleDeleteTextbook(textbook.id, textbook.title),\n                  disabled: textbookLoading,\n                  title: \"Delete\",\n                  children: \"\\uD83D\\uDDD1\\uFE0F\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 384,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 383,\n                columnNumber: 21\n              }, this)]\n            }, textbook.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 377,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-section compact\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section-header-compact\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"section-title\",\n          children: \"\\uD83D\\uDCDD Upload Question Papers\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-actions-compact\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"compact-action-btn\",\n            onClick: () => setShowParsedQuestions(true),\n            children: \"\\uD83D\\uDCCB View Parsed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 406,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"compact-action-btn\",\n            onClick: handleCleanDuplicates,\n            disabled: parsingLoading,\n            children: \"\\uD83E\\uDDF9 Clean\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"compact-form-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          className: \"compact-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: title,\n            onChange: e => setTitle(e.target.value),\n            placeholder: \"Paper Title (auto-filled)\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 424,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: subject,\n            onChange: e => setSubject(e.target.value),\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Subject\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 436,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Mathematics\",\n              children: \"Mathematics\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 437,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Physics\",\n              children: \"Physics\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 438,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Chemistry\",\n              children: \"Chemistry\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 439,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Biology\",\n              children: \"Biology\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 440,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"English\",\n              children: \"English\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 441,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Computer Science\",\n              children: \"Computer Science\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 442,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Social Science\",\n              children: \"Social Science\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 443,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 431,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            id: \"file-input\",\n            onChange: handleFileChange,\n            accept: \".pdf,.doc,.docx,.txt\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 445,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"compact-upload-btn\",\n            disabled: loading,\n            children: loading ? '⏳' : '📤 Upload'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 452,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 11\n        }, this), message.text && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `compact-message ${message.type}`,\n          children: message.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 9\n      }, this), uploadedPapers.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"documents-table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 468,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Subject\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 469,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Uploaded By\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 470,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 471,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 472,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 467,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 466,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: uploadedPapers.map(paper => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"title-cell\",\n                children: [\"\\uD83D\\uDCC4 \", paper.title]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 478,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"subject-badge\",\n                  children: paper.subject\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 479,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 479,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: paper.uploaded_by_name || 'Unknown'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 480,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"date-cell\",\n                children: formatDate(paper.uploaded_at)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 481,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"table-action-btn parse\",\n                  onClick: () => handleParseQuestions(paper.id),\n                  disabled: parsingPaper === paper.id,\n                  title: \"Parse Questions\",\n                  children: parsingPaper === paper.id ? '⏳' : '🔍'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 483,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"table-delete-btn\",\n                  onClick: () => handleDeletePaper(paper.id, paper.title),\n                  disabled: loading,\n                  title: \"Delete\",\n                  children: \"\\uD83D\\uDDD1\\uFE0F\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 491,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 482,\n                columnNumber: 21\n              }, this)]\n            }, paper.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 477,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 475,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 13\n        }, this), parsingMessage.text && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `compact-message ${parsingMessage.type}`,\n          children: parsingMessage.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 505,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 7\n    }, this), showParsedQuestions && /*#__PURE__*/_jsxDEV(ParsedQuestionsView, {\n      onClose: () => setShowParsedQuestions(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 515,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 306,\n    columnNumber: 5\n  }, this);\n};\n_s(UploadPapers, \"NolNIieT4HvhqhnOtn3FWe43ul8=\");\n_c = UploadPapers;\nexport default UploadPapers;\nvar _c;\n$RefreshReg$(_c, \"UploadPapers\");","map":{"version":3,"names":["React","useState","useEffect","axios","ParsedQuestionsView","jsxDEV","_jsxDEV","UploadPapers","user","_s","title","setTitle","subject","setSubject","file","setFile","uploadedPapers","setUploadedPapers","loading","setLoading","message","setMessage","type","text","textbookTitle","setTextbookTitle","textbookSubject","setTextbookSubject","textbookAuthor","setTextbookAuthor","textbookFile","setTextbookFile","uploadedTextbooks","setUploadedTextbooks","textbookLoading","setTextbookLoading","textbookMessage","setTextbookMessage","parsingPaper","setParsingPaper","parsedQuestions","setParsedQuestions","showParsedQuestions","setShowParsedQuestions","parsingLoading","setParsingLoading","parsingMessage","setParsingMessage","fetchUploadedPapers","fetchUploadedTextbooks","fetchParsedQuestions","response","get","data","err","console","error","handleParseQuestions","paperId","post","success","total_questions","setTimeout","_err$response","_err$response$data","handleCleanDuplicates","window","confirm","_err$response2","_err$response2$data","handleDeletePaper","paperTitle","delete","_err$response3","_err$response3$data","handleDeleteTextbook","textbookId","_err$response4","_err$response4$data","handleFileChange","e","selectedFile","target","files","fileName","name","fileNameWithoutExt","substring","lastIndexOf","handleTextbookFileChange","handleSubmit","preventDefault","formData","FormData","append","id","headers","document","getElementById","value","_err$response5","_err$response5$data","handleTextbookSubmit","_err$response6","_err$response6$data","formatDate","dateString","date","Date","toLocaleDateString","year","month","day","hour","minute","className","children","_jsxFileName","lineNumber","columnNumber","onSubmit","onChange","placeholder","required","accept","disabled","length","map","textbook","author","uploaded_by_name","uploaded_at","onClick","paper","onClose","_c","$RefreshReg$"],"sources":["D:/AI/_Programs/CBSE/aqnamic/frontend/src/components/UploadPapers.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './UploadPapers.css';\nimport ParsedQuestionsView from './ParsedQuestionsView';\n\nconst UploadPapers = ({ user }) => {\n  // Question Papers State\n  const [title, setTitle] = useState('');\n  const [subject, setSubject] = useState('');\n  const [file, setFile] = useState(null);\n  const [uploadedPapers, setUploadedPapers] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState({ type: '', text: '' });\n\n  // Textbooks State\n  const [textbookTitle, setTextbookTitle] = useState('');\n  const [textbookSubject, setTextbookSubject] = useState('');\n  const [textbookAuthor, setTextbookAuthor] = useState('');\n  const [textbookFile, setTextbookFile] = useState(null);\n  const [uploadedTextbooks, setUploadedTextbooks] = useState([]);\n  const [textbookLoading, setTextbookLoading] = useState(false);\n  const [textbookMessage, setTextbookMessage] = useState({ type: '', text: '' });\n\n  // Question Parsing State\n  const [parsingPaper, setParsingPaper] = useState(null);\n  const [parsedQuestions, setParsedQuestions] = useState([]);\n  const [showParsedQuestions, setShowParsedQuestions] = useState(false);\n  const [parsingLoading, setParsingLoading] = useState(false);\n  const [parsingMessage, setParsingMessage] = useState({ type: '', text: '' });\n\n  useEffect(() => {\n    fetchUploadedPapers();\n    fetchUploadedTextbooks();\n    fetchParsedQuestions();\n  }, []);\n\n  const fetchUploadedPapers = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/uploaded-papers');\n      setUploadedPapers(response.data);\n    } catch (err) {\n      console.error('Error fetching papers:', err);\n    }\n  };\n\n  const fetchUploadedTextbooks = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/textbooks');\n      setUploadedTextbooks(response.data);\n    } catch (err) {\n      console.error('Error fetching textbooks:', err);\n    }\n  };\n\n  const fetchParsedQuestions = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/parsed-questions');\n      setParsedQuestions(response.data);\n    } catch (err) {\n      console.error('Error fetching parsed questions:', err);\n    }\n  };\n\n  const handleParseQuestions = async (paperId) => {\n    setParsingLoading(true);\n    setParsingMessage({ type: '', text: '' });\n    setParsingPaper(paperId);\n\n    try {\n      const response = await axios.post(`http://localhost:5000/api/parse-questions/${paperId}`);\n      \n      if (response.data.success) {\n        setParsingMessage({ \n          type: 'success', \n          text: `Successfully parsed ${response.data.total_questions} questions!` \n        });\n        fetchParsedQuestions();\n        setTimeout(() => setShowParsedQuestions(true), 1000);\n      }\n    } catch (err) {\n      setParsingMessage({ \n        type: 'error', \n        text: err.response?.data?.error || 'Parsing failed. Please try again.' \n      });\n    } finally {\n      setParsingLoading(false);\n      setParsingPaper(null);\n    }\n  };\n\n  const handleCleanDuplicates = async () => {\n    if (!window.confirm('Remove all duplicate questions from database?')) {\n      return;\n    }\n\n    setParsingLoading(true);\n    setParsingMessage({ type: '', text: '' });\n\n    try {\n      const response = await axios.post('http://localhost:5000/api/clean-duplicates');\n      \n      if (response.data.success) {\n        setParsingMessage({ \n          type: 'success', \n          text: response.data.message \n        });\n        fetchParsedQuestions();\n      }\n    } catch (err) {\n      setParsingMessage({ \n        type: 'error', \n        text: err.response?.data?.error || 'Cleanup failed.' \n      });\n    } finally {\n      setParsingLoading(false);\n    }\n  };\n\n  const handleDeletePaper = async (paperId, paperTitle) => {\n    if (!window.confirm(`Are you sure you want to delete \"${paperTitle}\"?\\n\\nThis will also delete all parsed questions associated with this paper.`)) {\n      return;\n    }\n\n    setLoading(true);\n    setMessage({ type: '', text: '' });\n\n    try {\n      const response = await axios.delete(`http://localhost:5000/api/delete-paper/${paperId}`);\n      \n      if (response.data.success) {\n        setMessage({ \n          type: 'success', \n          text: 'Paper deleted successfully!' \n        });\n        fetchUploadedPapers();\n        fetchParsedQuestions();\n      }\n    } catch (err) {\n      setMessage({ \n        type: 'error', \n        text: err.response?.data?.error || 'Delete failed. Please try again.' \n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleDeleteTextbook = async (textbookId, textbookTitle) => {\n    if (!window.confirm(`Are you sure you want to delete \"${textbookTitle}\"?`)) {\n      return;\n    }\n\n    setTextbookLoading(true);\n    setTextbookMessage({ type: '', text: '' });\n\n    try {\n      const response = await axios.delete(`http://localhost:5000/api/delete-textbook/${textbookId}`);\n      \n      if (response.data.success) {\n        setTextbookMessage({ \n          type: 'success', \n          text: 'Textbook deleted successfully!' \n        });\n        fetchUploadedTextbooks();\n      }\n    } catch (err) {\n      setTextbookMessage({ \n        type: 'error', \n        text: err.response?.data?.error || 'Delete failed. Please try again.' \n      });\n    } finally {\n      setTextbookLoading(false);\n    }\n  };\n\n  const handleFileChange = (e) => {\n    const selectedFile = e.target.files[0];\n    if (selectedFile) {\n      setFile(selectedFile);\n      \n      // Auto-populate title with filename (without extension)\n      const fileName = selectedFile.name;\n      const fileNameWithoutExt = fileName.substring(0, fileName.lastIndexOf('.')) || fileName;\n      \n      // Only set title if it's empty\n      if (!title) {\n        setTitle(fileNameWithoutExt);\n      }\n    }\n  };\n\n  const handleTextbookFileChange = (e) => {\n    const selectedFile = e.target.files[0];\n    if (selectedFile) {\n      setTextbookFile(selectedFile);\n      \n      // Auto-populate title with filename (without extension)\n      const fileName = selectedFile.name;\n      const fileNameWithoutExt = fileName.substring(0, fileName.lastIndexOf('.')) || fileName;\n      \n      // Only set title if it's empty\n      if (!textbookTitle) {\n        setTextbookTitle(fileNameWithoutExt);\n      }\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    if (!title || !subject || !file) {\n      setMessage({ type: 'error', text: 'Please fill all fields and select a file' });\n      return;\n    }\n\n    setLoading(true);\n    setMessage({ type: '', text: '' });\n\n    const formData = new FormData();\n    formData.append('file', file);\n    formData.append('title', title);\n    formData.append('subject', subject);\n    formData.append('user_id', user.id);\n\n    try {\n      const response = await axios.post('http://localhost:5000/api/upload-paper', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n\n      if (response.data.success) {\n        setMessage({ type: 'success', text: 'Paper uploaded successfully!' });\n        setTitle('');\n        setSubject('');\n        setFile(null);\n        document.getElementById('file-input').value = '';\n        fetchUploadedPapers();\n      }\n    } catch (err) {\n      setMessage({ \n        type: 'error', \n        text: err.response?.data?.error || 'Upload failed. Please try again.' \n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleTextbookSubmit = async (e) => {\n    e.preventDefault();\n    \n    if (!textbookTitle || !textbookSubject || !textbookFile) {\n      setTextbookMessage({ type: 'error', text: 'Please fill all required fields and select a file' });\n      return;\n    }\n\n    setTextbookLoading(true);\n    setTextbookMessage({ type: '', text: '' });\n\n    const formData = new FormData();\n    formData.append('file', textbookFile);\n    formData.append('title', textbookTitle);\n    formData.append('subject', textbookSubject);\n    formData.append('author', textbookAuthor);\n    formData.append('user_id', user.id);\n\n    try {\n      const response = await axios.post('http://localhost:5000/api/upload-textbook', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n\n      if (response.data.success) {\n        setTextbookMessage({ type: 'success', text: 'Textbook uploaded successfully!' });\n        setTextbookTitle('');\n        setTextbookSubject('');\n        setTextbookAuthor('');\n        setTextbookFile(null);\n        document.getElementById('textbook-file-input').value = '';\n        fetchUploadedTextbooks();\n      }\n    } catch (err) {\n      setTextbookMessage({ \n        type: 'error', \n        text: err.response?.data?.error || 'Upload failed. Please try again.' \n      });\n    } finally {\n      setTextbookLoading(false);\n    }\n  };\n\n  const formatDate = (dateString) => {\n    const date = new Date(dateString);\n    return date.toLocaleDateString('en-US', { \n      year: 'numeric', \n      month: 'short', \n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n\n  return (\n    <div className=\"upload-papers\">\n      <div className=\"upload-header\">\n        <h2>📤 Upload Materials</h2>\n        <p>Share textbooks, study materials, and past papers</p>\n      </div>\n\n      {/* Textbook Upload Section */}\n      <div className=\"upload-section compact\">\n        <h3 className=\"section-title\">📚 Upload Textbooks</h3>\n        <div className=\"compact-form-container\">\n          <form onSubmit={handleTextbookSubmit} className=\"compact-form\">\n            <input\n              type=\"text\"\n              value={textbookTitle}\n              onChange={(e) => setTextbookTitle(e.target.value)}\n              placeholder=\"Title (auto-filled)\"\n              required\n            />\n            <select\n              value={textbookSubject}\n              onChange={(e) => setTextbookSubject(e.target.value)}\n              required\n            >\n              <option value=\"\">Subject</option>\n              <option value=\"Mathematics\">Mathematics</option>\n              <option value=\"Physics\">Physics</option>\n              <option value=\"Chemistry\">Chemistry</option>\n              <option value=\"Biology\">Biology</option>\n              <option value=\"English\">English</option>\n              <option value=\"Computer Science\">Computer Science</option>\n              <option value=\"Social Science\">Social Science</option>\n            </select>\n            <input\n              type=\"text\"\n              value={textbookAuthor}\n              onChange={(e) => setTextbookAuthor(e.target.value)}\n              placeholder=\"Author (optional)\"\n            />\n            <input\n              type=\"file\"\n              id=\"textbook-file-input\"\n              onChange={handleTextbookFileChange}\n              accept=\".pdf,.doc,.docx,.txt\"\n              required\n            />\n            <button type=\"submit\" className=\"compact-upload-btn\" disabled={textbookLoading}>\n              {textbookLoading ? '⏳' : '📚 Upload'}\n            </button>\n          </form>\n          {textbookMessage.text && (\n            <div className={`compact-message ${textbookMessage.type}`}>\n              {textbookMessage.text}\n            </div>\n          )}\n        </div>\n\n        {uploadedTextbooks.length > 0 && (\n          <div className=\"table-container\">\n            <table className=\"documents-table\">\n              <thead>\n                <tr>\n                  <th>Title</th>\n                  <th>Subject</th>\n                  <th>Author</th>\n                  <th>Uploaded By</th>\n                  <th>Date</th>\n                  <th>Actions</th>\n                </tr>\n              </thead>\n              <tbody>\n                {uploadedTextbooks.map((textbook) => (\n                  <tr key={textbook.id}>\n                    <td className=\"title-cell\">📚 {textbook.title}</td>\n                    <td><span className=\"subject-badge\">{textbook.subject}</span></td>\n                    <td>{textbook.author || '-'}</td>\n                    <td>{textbook.uploaded_by_name || 'Unknown'}</td>\n                    <td className=\"date-cell\">{formatDate(textbook.uploaded_at)}</td>\n                    <td>\n                      <button \n                        className=\"table-delete-btn\"\n                        onClick={() => handleDeleteTextbook(textbook.id, textbook.title)}\n                        disabled={textbookLoading}\n                        title=\"Delete\"\n                      >\n                        🗑️\n                      </button>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        )}\n      </div>\n\n      {/* Question Papers Upload Section */}\n      <div className=\"upload-section compact\">\n        <div className=\"section-header-compact\">\n          <h3 className=\"section-title\">📝 Upload Question Papers</h3>\n          <div className=\"header-actions-compact\">\n            <button \n              className=\"compact-action-btn\"\n              onClick={() => setShowParsedQuestions(true)}\n            >\n              📋 View Parsed\n            </button>\n            <button \n              className=\"compact-action-btn\"\n              onClick={handleCleanDuplicates}\n              disabled={parsingLoading}\n            >\n              🧹 Clean\n            </button>\n          </div>\n        </div>\n\n        <div className=\"compact-form-container\">\n          <form onSubmit={handleSubmit} className=\"compact-form\">\n            <input\n              type=\"text\"\n              value={title}\n              onChange={(e) => setTitle(e.target.value)}\n              placeholder=\"Paper Title (auto-filled)\"\n              required\n            />\n            <select\n              value={subject}\n              onChange={(e) => setSubject(e.target.value)}\n              required\n            >\n              <option value=\"\">Subject</option>\n              <option value=\"Mathematics\">Mathematics</option>\n              <option value=\"Physics\">Physics</option>\n              <option value=\"Chemistry\">Chemistry</option>\n              <option value=\"Biology\">Biology</option>\n              <option value=\"English\">English</option>\n              <option value=\"Computer Science\">Computer Science</option>\n              <option value=\"Social Science\">Social Science</option>\n            </select>\n            <input\n              type=\"file\"\n              id=\"file-input\"\n              onChange={handleFileChange}\n              accept=\".pdf,.doc,.docx,.txt\"\n              required\n            />\n            <button type=\"submit\" className=\"compact-upload-btn\" disabled={loading}>\n              {loading ? '⏳' : '📤 Upload'}\n            </button>\n          </form>\n          {message.text && (\n            <div className={`compact-message ${message.type}`}>\n              {message.text}\n            </div>\n          )}\n        </div>\n\n        {uploadedPapers.length > 0 && (\n          <div className=\"table-container\">\n            <table className=\"documents-table\">\n              <thead>\n                <tr>\n                  <th>Title</th>\n                  <th>Subject</th>\n                  <th>Uploaded By</th>\n                  <th>Date</th>\n                  <th>Actions</th>\n                </tr>\n              </thead>\n              <tbody>\n                {uploadedPapers.map((paper) => (\n                  <tr key={paper.id}>\n                    <td className=\"title-cell\">📄 {paper.title}</td>\n                    <td><span className=\"subject-badge\">{paper.subject}</span></td>\n                    <td>{paper.uploaded_by_name || 'Unknown'}</td>\n                    <td className=\"date-cell\">{formatDate(paper.uploaded_at)}</td>\n                    <td>\n                      <button \n                        className=\"table-action-btn parse\"\n                        onClick={() => handleParseQuestions(paper.id)}\n                        disabled={parsingPaper === paper.id}\n                        title=\"Parse Questions\"\n                      >\n                        {parsingPaper === paper.id ? '⏳' : '🔍'}\n                      </button>\n                      <button \n                        className=\"table-delete-btn\"\n                        onClick={() => handleDeletePaper(paper.id, paper.title)}\n                        disabled={loading}\n                        title=\"Delete\"\n                      >\n                        🗑️\n                      </button>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n            {parsingMessage.text && (\n              <div className={`compact-message ${parsingMessage.type}`}>\n                {parsingMessage.text}\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n\n      {/* Parsed Questions Modal */}\n      {showParsedQuestions && (\n        <ParsedQuestionsView \n          onClose={() => setShowParsedQuestions(false)}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default UploadPapers;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}