{"ast":null,"code":"var _jsxFileName = \"D:\\\\AI\\\\_Programs\\\\CBSE\\\\aqnamic\\\\frontend\\\\src\\\\components\\\\SingleQuestionUpload.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './SingleQuestionUpload.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SingleQuestionUpload = ({\n  onClose,\n  onQuestionParsed\n}) => {\n  _s();\n  const [inputMethod, setInputMethod] = useState('text'); // 'text', 'file', 'paste'\n  const [questionText, setQuestionText] = useState('');\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [pastedImage, setPastedImage] = useState(null);\n  const [fileType, setFileType] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [parsedQuestion, setParsedQuestion] = useState(null);\n  const handleFileSelect = e => {\n    const file = e.target.files[0];\n    if (file) {\n      const extension = file.name.split('.').pop().toLowerCase();\n      const allowedTypes = ['jpg', 'jpeg', 'png', 'pdf', 'docx', 'txt'];\n      if (allowedTypes.includes(extension)) {\n        setSelectedFile(file);\n        setFileType(extension);\n        setError('');\n      } else {\n        setError('Unsupported file type. Please upload JPG, PNG, PDF, DOCX, or TXT files.');\n        setSelectedFile(null);\n      }\n    }\n  };\n  const handleSubmit = async () => {\n    if (inputMethod === 'text' && !questionText.trim()) {\n      setError('Please enter question text');\n      return;\n    }\n    if (inputMethod === 'file' && !selectedFile) {\n      setError('Please select a file');\n      return;\n    }\n    setLoading(true);\n    setError('');\n    try {\n      const formData = new FormData();\n      if (inputMethod === 'text') {\n        formData.append('question_text', questionText);\n        formData.append('input_type', 'text');\n      } else {\n        formData.append('file', selectedFile);\n        formData.append('input_type', 'file');\n        formData.append('file_type', fileType);\n      }\n      const response = await fetch('http://localhost:5000/api/parse-single-question', {\n        method: 'POST',\n        body: formData\n      });\n      const data = await response.json();\n      if (data.success) {\n        setParsedQuestion(data.question);\n        if (onQuestionParsed) {\n          onQuestionParsed(data.question);\n        }\n      } else {\n        setError(data.error || 'Failed to parse question');\n      }\n    } catch (err) {\n      setError('Error: ' + err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleReset = () => {\n    setQuestionText('');\n    setSelectedFile(null);\n    setFileType('');\n    setParsedQuestion(null);\n    setError('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"single-question-modal\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"single-question-modal-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"single-question-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\uD83D\\uDCDD Upload Single Question\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-btn\",\n          onClick: onClose,\n          children: \"\\u2715\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), !parsedQuestion ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-method-selector\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: `method-btn ${inputMethod === 'text' ? 'active' : ''}`,\n            onClick: () => setInputMethod('text'),\n            children: \"\\u270D\\uFE0F Text Input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `method-btn ${inputMethod === 'file' ? 'active' : ''}`,\n            onClick: () => setInputMethod('file'),\n            children: \"\\uD83D\\uDCC1 File Upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this), inputMethod === 'text' ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-input-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Enter Question Text:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: questionText,\n            onChange: e => setQuestionText(e.target.value),\n            placeholder: \"Type or paste your question here... Example:\\n1. What is the capital of France?\\n(A) London\\n(B) Paris\\n(C) Berlin\\n(D) Madrid\",\n            rows: 12,\n            className: \"question-textarea\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"char-count\",\n            children: [questionText.length, \" characters\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"file-input-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"file-upload-area\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              id: \"question-file\",\n              accept: \".jpg,.jpeg,.png,.pdf,.docx,.txt\",\n              onChange: handleFileSelect,\n              className: \"file-input-hidden\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"question-file\",\n              className: \"file-upload-label\",\n              children: selectedFile ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"file-icon\",\n                  children: \"\\uD83D\\uDCC4\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 139,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"file-name\",\n                  children: selectedFile.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 140,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"file-size\",\n                  children: [(selectedFile.size / 1024).toFixed(2), \" KB\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 141,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"file-type-badge\",\n                  children: fileType.toUpperCase()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 144,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"upload-icon\",\n                  children: \"\\uD83D\\uDCE4\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"upload-text\",\n                  children: \"Click to upload or drag & drop\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"upload-formats\",\n                  children: \"JPG, PNG, PDF, DOCX, or TXT\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 152,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 17\n          }, this), selectedFile && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"change-file-btn\",\n            onClick: () => {\n              setSelectedFile(null);\n              setFileType('');\n            },\n            children: \"Change File\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 15\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: [\"\\u26A0\\uFE0F \", error]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"action-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"submit-btn\",\n            onClick: handleSubmit,\n            disabled: loading || inputMethod === 'text' && !questionText.trim() || inputMethod === 'file' && !selectedFile,\n            children: loading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"spinner\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 21\n              }, this), \"Parsing...\"]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: \"\\uD83D\\uDE80 Parse Question\"\n            }, void 0, false)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"cancel-btn\",\n            onClick: onClose,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"parsed-result\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"result-header\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"\\u2705 Question Parsed Successfully!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"parsed-question-display\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"parsed-field\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Question Number:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"field-value\",\n              children: parsedQuestion.question_number || 'N/A'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"parsed-field\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Question Type:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `type-badge ${parsedQuestion.question_type}`,\n              children: parsedQuestion.question_type || 'unknown'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"parsed-field full-width\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Question Text:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"question-text-box\",\n              children: parsedQuestion.question_text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 15\n          }, this), parsedQuestion.sub_parts && parsedQuestion.sub_parts.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"parsed-field full-width\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Sub-parts:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"sub-parts-list\",\n              children: parsedQuestion.sub_parts.map((part, idx) => /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"sub-part-badge\",\n                children: part\n              }, idx, false, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 17\n          }, this), parsedQuestion.marks && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"parsed-field\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Marks:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"marks-value\",\n              children: parsedQuestion.marks\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 17\n          }, this), parsedQuestion.has_diagram && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"parsed-field\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Has Diagram:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"diagram-indicator\",\n              children: \"\\uD83D\\uDCCA Yes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"result-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"parse-another-btn\",\n            onClick: handleReset,\n            children: \"\\uD83D\\uDCDD Parse Another Question\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"close-result-btn\",\n            onClick: onClose,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n_s(SingleQuestionUpload, \"+CWk0SfV/6ULTkY6kjzK0MJ4SBY=\");\n_c = SingleQuestionUpload;\nexport default SingleQuestionUpload;\nvar _c;\n$RefreshReg$(_c, \"SingleQuestionUpload\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","SingleQuestionUpload","onClose","onQuestionParsed","_s","inputMethod","setInputMethod","questionText","setQuestionText","selectedFile","setSelectedFile","pastedImage","setPastedImage","fileType","setFileType","loading","setLoading","error","setError","parsedQuestion","setParsedQuestion","handleFileSelect","e","file","target","files","extension","name","split","pop","toLowerCase","allowedTypes","includes","handleSubmit","trim","formData","FormData","append","response","fetch","method","body","data","json","success","question","err","message","handleReset","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","value","onChange","placeholder","rows","length","type","id","accept","htmlFor","size","toFixed","toUpperCase","disabled","question_number","question_type","question_text","sub_parts","map","part","idx","marks","has_diagram","_c","$RefreshReg$"],"sources":["D:/AI/_Programs/CBSE/aqnamic/frontend/src/components/SingleQuestionUpload.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './SingleQuestionUpload.css';\n\nconst SingleQuestionUpload = ({ onClose, onQuestionParsed }) => {\n  const [inputMethod, setInputMethod] = useState('text'); // 'text', 'file', 'paste'\n  const [questionText, setQuestionText] = useState('');\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [pastedImage, setPastedImage] = useState(null);\n  const [fileType, setFileType] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [parsedQuestion, setParsedQuestion] = useState(null);\n\n  const handleFileSelect = (e) => {\n    const file = e.target.files[0];\n    if (file) {\n      const extension = file.name.split('.').pop().toLowerCase();\n      const allowedTypes = ['jpg', 'jpeg', 'png', 'pdf', 'docx', 'txt'];\n      \n      if (allowedTypes.includes(extension)) {\n        setSelectedFile(file);\n        setFileType(extension);\n        setError('');\n      } else {\n        setError('Unsupported file type. Please upload JPG, PNG, PDF, DOCX, or TXT files.');\n        setSelectedFile(null);\n      }\n    }\n  };\n\n  const handleSubmit = async () => {\n    if (inputMethod === 'text' && !questionText.trim()) {\n      setError('Please enter question text');\n      return;\n    }\n\n    if (inputMethod === 'file' && !selectedFile) {\n      setError('Please select a file');\n      return;\n    }\n\n    setLoading(true);\n    setError('');\n\n    try {\n      const formData = new FormData();\n      \n      if (inputMethod === 'text') {\n        formData.append('question_text', questionText);\n        formData.append('input_type', 'text');\n      } else {\n        formData.append('file', selectedFile);\n        formData.append('input_type', 'file');\n        formData.append('file_type', fileType);\n      }\n\n      const response = await fetch('http://localhost:5000/api/parse-single-question', {\n        method: 'POST',\n        body: formData\n      });\n\n      const data = await response.json();\n\n      if (data.success) {\n        setParsedQuestion(data.question);\n        if (onQuestionParsed) {\n          onQuestionParsed(data.question);\n        }\n      } else {\n        setError(data.error || 'Failed to parse question');\n      }\n    } catch (err) {\n      setError('Error: ' + err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleReset = () => {\n    setQuestionText('');\n    setSelectedFile(null);\n    setFileType('');\n    setParsedQuestion(null);\n    setError('');\n  };\n\n  return (\n    <div className=\"single-question-modal\">\n      <div className=\"single-question-modal-content\">\n        <div className=\"single-question-header\">\n          <h2>📝 Upload Single Question</h2>\n          <button className=\"close-btn\" onClick={onClose}>✕</button>\n        </div>\n\n        {!parsedQuestion ? (\n          <>\n            <div className=\"input-method-selector\">\n              <button\n                className={`method-btn ${inputMethod === 'text' ? 'active' : ''}`}\n                onClick={() => setInputMethod('text')}\n              >\n                ✍️ Text Input\n              </button>\n              <button\n                className={`method-btn ${inputMethod === 'file' ? 'active' : ''}`}\n                onClick={() => setInputMethod('file')}\n              >\n                📁 File Upload\n              </button>\n            </div>\n\n            {inputMethod === 'text' ? (\n              <div className=\"text-input-section\">\n                <label>Enter Question Text:</label>\n                <textarea\n                  value={questionText}\n                  onChange={(e) => setQuestionText(e.target.value)}\n                  placeholder=\"Type or paste your question here...&#10;&#10;Example:&#10;1. What is the capital of France?&#10;(A) London&#10;(B) Paris&#10;(C) Berlin&#10;(D) Madrid\"\n                  rows={12}\n                  className=\"question-textarea\"\n                />\n                <div className=\"char-count\">\n                  {questionText.length} characters\n                </div>\n              </div>\n            ) : (\n              <div className=\"file-input-section\">\n                <div className=\"file-upload-area\">\n                  <input\n                    type=\"file\"\n                    id=\"question-file\"\n                    accept=\".jpg,.jpeg,.png,.pdf,.docx,.txt\"\n                    onChange={handleFileSelect}\n                    className=\"file-input-hidden\"\n                  />\n                  <label htmlFor=\"question-file\" className=\"file-upload-label\">\n                    {selectedFile ? (\n                      <>\n                        <div className=\"file-icon\">📄</div>\n                        <div className=\"file-name\">{selectedFile.name}</div>\n                        <div className=\"file-size\">\n                          {(selectedFile.size / 1024).toFixed(2)} KB\n                        </div>\n                        <div className=\"file-type-badge\">{fileType.toUpperCase()}</div>\n                      </>\n                    ) : (\n                      <>\n                        <div className=\"upload-icon\">📤</div>\n                        <div className=\"upload-text\">\n                          Click to upload or drag & drop\n                        </div>\n                        <div className=\"upload-formats\">\n                          JPG, PNG, PDF, DOCX, or TXT\n                        </div>\n                      </>\n                    )}\n                  </label>\n                </div>\n\n                {selectedFile && (\n                  <button className=\"change-file-btn\" onClick={() => {\n                    setSelectedFile(null);\n                    setFileType('');\n                  }}>\n                    Change File\n                  </button>\n                )}\n              </div>\n            )}\n\n            {error && (\n              <div className=\"error-message\">\n                ⚠️ {error}\n              </div>\n            )}\n\n            <div className=\"action-buttons\">\n              <button\n                className=\"submit-btn\"\n                onClick={handleSubmit}\n                disabled={loading || (inputMethod === 'text' && !questionText.trim()) || (inputMethod === 'file' && !selectedFile)}\n              >\n                {loading ? (\n                  <>\n                    <span className=\"spinner\"></span>\n                    Parsing...\n                  </>\n                ) : (\n                  <>\n                    🚀 Parse Question\n                  </>\n                )}\n              </button>\n              <button className=\"cancel-btn\" onClick={onClose}>\n                Cancel\n              </button>\n            </div>\n          </>\n        ) : (\n          <div className=\"parsed-result\">\n            <div className=\"result-header\">\n              <h3>✅ Question Parsed Successfully!</h3>\n            </div>\n\n            <div className=\"parsed-question-display\">\n              <div className=\"parsed-field\">\n                <strong>Question Number:</strong>\n                <span className=\"field-value\">{parsedQuestion.question_number || 'N/A'}</span>\n              </div>\n\n              <div className=\"parsed-field\">\n                <strong>Question Type:</strong>\n                <span className={`type-badge ${parsedQuestion.question_type}`}>\n                  {parsedQuestion.question_type || 'unknown'}\n                </span>\n              </div>\n\n              <div className=\"parsed-field full-width\">\n                <strong>Question Text:</strong>\n                <div className=\"question-text-box\">\n                  {parsedQuestion.question_text}\n                </div>\n              </div>\n\n              {parsedQuestion.sub_parts && parsedQuestion.sub_parts.length > 0 && (\n                <div className=\"parsed-field full-width\">\n                  <strong>Sub-parts:</strong>\n                  <div className=\"sub-parts-list\">\n                    {parsedQuestion.sub_parts.map((part, idx) => (\n                      <span key={idx} className=\"sub-part-badge\">{part}</span>\n                    ))}\n                  </div>\n                </div>\n              )}\n\n              {parsedQuestion.marks && (\n                <div className=\"parsed-field\">\n                  <strong>Marks:</strong>\n                  <span className=\"marks-value\">{parsedQuestion.marks}</span>\n                </div>\n              )}\n\n              {parsedQuestion.has_diagram && (\n                <div className=\"parsed-field\">\n                  <strong>Has Diagram:</strong>\n                  <span className=\"diagram-indicator\">📊 Yes</span>\n                </div>\n              )}\n            </div>\n\n            <div className=\"result-actions\">\n              <button className=\"parse-another-btn\" onClick={handleReset}>\n                📝 Parse Another Question\n              </button>\n              <button className=\"close-result-btn\" onClick={onClose}>\n                Close\n              </button>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default SingleQuestionUpload;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEpC,MAAMC,oBAAoB,GAAGA,CAAC;EAAEC,OAAO;EAAEC;AAAiB,CAAC,KAAK;EAAAC,EAAA;EAC9D,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC;EACxD,MAAM,CAACW,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACa,YAAY,EAAEC,eAAe,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACe,WAAW,EAAEC,cAAc,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACiB,QAAQ,EAAEC,WAAW,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACmB,OAAO,EAAEC,UAAU,CAAC,GAAGpB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACqB,KAAK,EAAEC,QAAQ,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACuB,cAAc,EAAEC,iBAAiB,CAAC,GAAGxB,QAAQ,CAAC,IAAI,CAAC;EAE1D,MAAMyB,gBAAgB,GAAIC,CAAC,IAAK;IAC9B,MAAMC,IAAI,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAC9B,IAAIF,IAAI,EAAE;MACR,MAAMG,SAAS,GAAGH,IAAI,CAACI,IAAI,CAACC,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;MAC1D,MAAMC,YAAY,GAAG,CAAC,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,CAAC;MAEjE,IAAIA,YAAY,CAACC,QAAQ,CAACN,SAAS,CAAC,EAAE;QACpChB,eAAe,CAACa,IAAI,CAAC;QACrBT,WAAW,CAACY,SAAS,CAAC;QACtBR,QAAQ,CAAC,EAAE,CAAC;MACd,CAAC,MAAM;QACLA,QAAQ,CAAC,yEAAyE,CAAC;QACnFR,eAAe,CAAC,IAAI,CAAC;MACvB;IACF;EACF,CAAC;EAED,MAAMuB,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI5B,WAAW,KAAK,MAAM,IAAI,CAACE,YAAY,CAAC2B,IAAI,CAAC,CAAC,EAAE;MAClDhB,QAAQ,CAAC,4BAA4B,CAAC;MACtC;IACF;IAEA,IAAIb,WAAW,KAAK,MAAM,IAAI,CAACI,YAAY,EAAE;MAC3CS,QAAQ,CAAC,sBAAsB,CAAC;MAChC;IACF;IAEAF,UAAU,CAAC,IAAI,CAAC;IAChBE,QAAQ,CAAC,EAAE,CAAC;IAEZ,IAAI;MACF,MAAMiB,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;MAE/B,IAAI/B,WAAW,KAAK,MAAM,EAAE;QAC1B8B,QAAQ,CAACE,MAAM,CAAC,eAAe,EAAE9B,YAAY,CAAC;QAC9C4B,QAAQ,CAACE,MAAM,CAAC,YAAY,EAAE,MAAM,CAAC;MACvC,CAAC,MAAM;QACLF,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAE5B,YAAY,CAAC;QACrC0B,QAAQ,CAACE,MAAM,CAAC,YAAY,EAAE,MAAM,CAAC;QACrCF,QAAQ,CAACE,MAAM,CAAC,WAAW,EAAExB,QAAQ,CAAC;MACxC;MAEA,MAAMyB,QAAQ,GAAG,MAAMC,KAAK,CAAC,iDAAiD,EAAE;QAC9EC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEN;MACR,CAAC,CAAC;MAEF,MAAMO,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAElC,IAAID,IAAI,CAACE,OAAO,EAAE;QAChBxB,iBAAiB,CAACsB,IAAI,CAACG,QAAQ,CAAC;QAChC,IAAI1C,gBAAgB,EAAE;UACpBA,gBAAgB,CAACuC,IAAI,CAACG,QAAQ,CAAC;QACjC;MACF,CAAC,MAAM;QACL3B,QAAQ,CAACwB,IAAI,CAACzB,KAAK,IAAI,0BAA0B,CAAC;MACpD;IACF,CAAC,CAAC,OAAO6B,GAAG,EAAE;MACZ5B,QAAQ,CAAC,SAAS,GAAG4B,GAAG,CAACC,OAAO,CAAC;IACnC,CAAC,SAAS;MACR/B,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMgC,WAAW,GAAGA,CAAA,KAAM;IACxBxC,eAAe,CAAC,EAAE,CAAC;IACnBE,eAAe,CAAC,IAAI,CAAC;IACrBI,WAAW,CAAC,EAAE,CAAC;IACfM,iBAAiB,CAAC,IAAI,CAAC;IACvBF,QAAQ,CAAC,EAAE,CAAC;EACd,CAAC;EAED,oBACEpB,OAAA;IAAKmD,SAAS,EAAC,uBAAuB;IAAAC,QAAA,eACpCpD,OAAA;MAAKmD,SAAS,EAAC,+BAA+B;MAAAC,QAAA,gBAC5CpD,OAAA;QAAKmD,SAAS,EAAC,wBAAwB;QAAAC,QAAA,gBACrCpD,OAAA;UAAAoD,QAAA,EAAI;QAAyB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAClCxD,OAAA;UAAQmD,SAAS,EAAC,WAAW;UAACM,OAAO,EAAErD,OAAQ;UAAAgD,QAAA,EAAC;QAAC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvD,CAAC,EAEL,CAACnC,cAAc,gBACdrB,OAAA,CAAAE,SAAA;QAAAkD,QAAA,gBACEpD,OAAA;UAAKmD,SAAS,EAAC,uBAAuB;UAAAC,QAAA,gBACpCpD,OAAA;YACEmD,SAAS,EAAE,cAAc5C,WAAW,KAAK,MAAM,GAAG,QAAQ,GAAG,EAAE,EAAG;YAClEkD,OAAO,EAAEA,CAAA,KAAMjD,cAAc,CAAC,MAAM,CAAE;YAAA4C,QAAA,EACvC;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACTxD,OAAA;YACEmD,SAAS,EAAE,cAAc5C,WAAW,KAAK,MAAM,GAAG,QAAQ,GAAG,EAAE,EAAG;YAClEkD,OAAO,EAAEA,CAAA,KAAMjD,cAAc,CAAC,MAAM,CAAE;YAAA4C,QAAA,EACvC;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,EAELjD,WAAW,KAAK,MAAM,gBACrBP,OAAA;UAAKmD,SAAS,EAAC,oBAAoB;UAAAC,QAAA,gBACjCpD,OAAA;YAAAoD,QAAA,EAAO;UAAoB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACnCxD,OAAA;YACE0D,KAAK,EAAEjD,YAAa;YACpBkD,QAAQ,EAAGnC,CAAC,IAAKd,eAAe,CAACc,CAAC,CAACE,MAAM,CAACgC,KAAK,CAAE;YACjDE,WAAW,EAAC,gIAAwJ;YACpKC,IAAI,EAAE,EAAG;YACTV,SAAS,EAAC;UAAmB;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC9B,CAAC,eACFxD,OAAA;YAAKmD,SAAS,EAAC,YAAY;YAAAC,QAAA,GACxB3C,YAAY,CAACqD,MAAM,EAAC,aACvB;UAAA;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,gBAENxD,OAAA;UAAKmD,SAAS,EAAC,oBAAoB;UAAAC,QAAA,gBACjCpD,OAAA;YAAKmD,SAAS,EAAC,kBAAkB;YAAAC,QAAA,gBAC/BpD,OAAA;cACE+D,IAAI,EAAC,MAAM;cACXC,EAAE,EAAC,eAAe;cAClBC,MAAM,EAAC,iCAAiC;cACxCN,QAAQ,EAAEpC,gBAAiB;cAC3B4B,SAAS,EAAC;YAAmB;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC9B,CAAC,eACFxD,OAAA;cAAOkE,OAAO,EAAC,eAAe;cAACf,SAAS,EAAC,mBAAmB;cAAAC,QAAA,EACzDzC,YAAY,gBACXX,OAAA,CAAAE,SAAA;gBAAAkD,QAAA,gBACEpD,OAAA;kBAAKmD,SAAS,EAAC,WAAW;kBAAAC,QAAA,EAAC;gBAAE;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC,eACnCxD,OAAA;kBAAKmD,SAAS,EAAC,WAAW;kBAAAC,QAAA,EAAEzC,YAAY,CAACkB;gBAAI;kBAAAwB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC,eACpDxD,OAAA;kBAAKmD,SAAS,EAAC,WAAW;kBAAAC,QAAA,GACvB,CAACzC,YAAY,CAACwD,IAAI,GAAG,IAAI,EAAEC,OAAO,CAAC,CAAC,CAAC,EAAC,KACzC;gBAAA;kBAAAf,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC,eACNxD,OAAA;kBAAKmD,SAAS,EAAC,iBAAiB;kBAAAC,QAAA,EAAErC,QAAQ,CAACsD,WAAW,CAAC;gBAAC;kBAAAhB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC;cAAA,eAC/D,CAAC,gBAEHxD,OAAA,CAAAE,SAAA;gBAAAkD,QAAA,gBACEpD,OAAA;kBAAKmD,SAAS,EAAC,aAAa;kBAAAC,QAAA,EAAC;gBAAE;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC,eACrCxD,OAAA;kBAAKmD,SAAS,EAAC,aAAa;kBAAAC,QAAA,EAAC;gBAE7B;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC,eACNxD,OAAA;kBAAKmD,SAAS,EAAC,gBAAgB;kBAAAC,QAAA,EAAC;gBAEhC;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC;cAAA,eACN;YACH;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL,CAAC,EAEL7C,YAAY,iBACXX,OAAA;YAAQmD,SAAS,EAAC,iBAAiB;YAACM,OAAO,EAAEA,CAAA,KAAM;cACjD7C,eAAe,CAAC,IAAI,CAAC;cACrBI,WAAW,CAAC,EAAE,CAAC;YACjB,CAAE;YAAAoC,QAAA,EAAC;UAEH;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CACT;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CACN,EAEArC,KAAK,iBACJnB,OAAA;UAAKmD,SAAS,EAAC,eAAe;UAAAC,QAAA,GAAC,eAC1B,EAACjC,KAAK;QAAA;UAAAkC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CACN,eAEDxD,OAAA;UAAKmD,SAAS,EAAC,gBAAgB;UAAAC,QAAA,gBAC7BpD,OAAA;YACEmD,SAAS,EAAC,YAAY;YACtBM,OAAO,EAAEtB,YAAa;YACtBmC,QAAQ,EAAErD,OAAO,IAAKV,WAAW,KAAK,MAAM,IAAI,CAACE,YAAY,CAAC2B,IAAI,CAAC,CAAE,IAAK7B,WAAW,KAAK,MAAM,IAAI,CAACI,YAAc;YAAAyC,QAAA,EAElHnC,OAAO,gBACNjB,OAAA,CAAAE,SAAA;cAAAkD,QAAA,gBACEpD,OAAA;gBAAMmD,SAAS,EAAC;cAAS;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,cAEnC;YAAA,eAAE,CAAC,gBAEHxD,OAAA,CAAAE,SAAA;cAAAkD,QAAA,EAAE;YAEF,gBAAE;UACH;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACK,CAAC,eACTxD,OAAA;YAAQmD,SAAS,EAAC,YAAY;YAACM,OAAO,EAAErD,OAAQ;YAAAgD,QAAA,EAAC;UAEjD;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC;MAAA,eACN,CAAC,gBAEHxD,OAAA;QAAKmD,SAAS,EAAC,eAAe;QAAAC,QAAA,gBAC5BpD,OAAA;UAAKmD,SAAS,EAAC,eAAe;UAAAC,QAAA,eAC5BpD,OAAA;YAAAoD,QAAA,EAAI;UAA+B;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrC,CAAC,eAENxD,OAAA;UAAKmD,SAAS,EAAC,yBAAyB;UAAAC,QAAA,gBACtCpD,OAAA;YAAKmD,SAAS,EAAC,cAAc;YAAAC,QAAA,gBAC3BpD,OAAA;cAAAoD,QAAA,EAAQ;YAAgB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACjCxD,OAAA;cAAMmD,SAAS,EAAC,aAAa;cAAAC,QAAA,EAAE/B,cAAc,CAACkD,eAAe,IAAI;YAAK;cAAAlB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC3E,CAAC,eAENxD,OAAA;YAAKmD,SAAS,EAAC,cAAc;YAAAC,QAAA,gBAC3BpD,OAAA;cAAAoD,QAAA,EAAQ;YAAc;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eAC/BxD,OAAA;cAAMmD,SAAS,EAAE,cAAc9B,cAAc,CAACmD,aAAa,EAAG;cAAApB,QAAA,EAC3D/B,cAAc,CAACmD,aAAa,IAAI;YAAS;cAAAnB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACtC,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACJ,CAAC,eAENxD,OAAA;YAAKmD,SAAS,EAAC,yBAAyB;YAAAC,QAAA,gBACtCpD,OAAA;cAAAoD,QAAA,EAAQ;YAAc;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eAC/BxD,OAAA;cAAKmD,SAAS,EAAC,mBAAmB;cAAAC,QAAA,EAC/B/B,cAAc,CAACoD;YAAa;cAAApB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC1B,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,EAELnC,cAAc,CAACqD,SAAS,IAAIrD,cAAc,CAACqD,SAAS,CAACZ,MAAM,GAAG,CAAC,iBAC9D9D,OAAA;YAAKmD,SAAS,EAAC,yBAAyB;YAAAC,QAAA,gBACtCpD,OAAA;cAAAoD,QAAA,EAAQ;YAAU;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eAC3BxD,OAAA;cAAKmD,SAAS,EAAC,gBAAgB;cAAAC,QAAA,EAC5B/B,cAAc,CAACqD,SAAS,CAACC,GAAG,CAAC,CAACC,IAAI,EAAEC,GAAG,kBACtC7E,OAAA;gBAAgBmD,SAAS,EAAC,gBAAgB;gBAAAC,QAAA,EAAEwB;cAAI,GAArCC,GAAG;gBAAAxB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAyC,CACxD;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CACN,EAEAnC,cAAc,CAACyD,KAAK,iBACnB9E,OAAA;YAAKmD,SAAS,EAAC,cAAc;YAAAC,QAAA,gBAC3BpD,OAAA;cAAAoD,QAAA,EAAQ;YAAM;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACvBxD,OAAA;cAAMmD,SAAS,EAAC,aAAa;cAAAC,QAAA,EAAE/B,cAAc,CAACyD;YAAK;cAAAzB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxD,CACN,EAEAnC,cAAc,CAAC0D,WAAW,iBACzB/E,OAAA;YAAKmD,SAAS,EAAC,cAAc;YAAAC,QAAA,gBAC3BpD,OAAA;cAAAoD,QAAA,EAAQ;YAAY;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eAC7BxD,OAAA;cAAMmD,SAAS,EAAC,mBAAmB;cAAAC,QAAA,EAAC;YAAM;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC9C,CACN;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC,eAENxD,OAAA;UAAKmD,SAAS,EAAC,gBAAgB;UAAAC,QAAA,gBAC7BpD,OAAA;YAAQmD,SAAS,EAAC,mBAAmB;YAACM,OAAO,EAAEP,WAAY;YAAAE,QAAA,EAAC;UAE5D;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACTxD,OAAA;YAAQmD,SAAS,EAAC,kBAAkB;YAACM,OAAO,EAAErD,OAAQ;YAAAgD,QAAA,EAAC;UAEvD;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAClD,EAAA,CApQIH,oBAAoB;AAAA6E,EAAA,GAApB7E,oBAAoB;AAsQ1B,eAAeA,oBAAoB;AAAC,IAAA6E,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}