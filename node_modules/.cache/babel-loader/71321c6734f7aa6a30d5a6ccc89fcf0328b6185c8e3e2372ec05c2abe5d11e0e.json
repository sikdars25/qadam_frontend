{"ast":null,"code":"var _jsxFileName = \"D:\\\\AI\\\\_Programs\\\\CBSE\\\\aqnamic\\\\frontend\\\\src\\\\components\\\\ParsedQuestionsView.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './ParsedQuestionsView.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ParsedQuestionsView = ({\n  paperId,\n  onClose\n}) => {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [filter, setFilter] = useState('all');\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedDiagram, setSelectedDiagram] = useState(null);\n  const [selectedPaper, setSelectedPaper] = useState(paperId || 'all');\n  const [groupByPaper, setGroupByPaper] = useState(!paperId); // Group by default when viewing all\n\n  // Parse question text to extract main question, MCQ options, and instructions\n  const parseQuestionContent = text => {\n    if (!text) return {\n      mainQuestion: '',\n      mcqOptions: [],\n      instructions: ''\n    };\n\n    // Extract common instructions (usually at the start)\n    const instructionMatch = text.match(/^((?:Read|Note|Instructions?|Common)[^\\n]*(?:\\n[^\\n]*){0,3})(?=\\n\\d+[\\.\\)])/i);\n    const instructions = instructionMatch ? instructionMatch[1].trim() : '';\n\n    // Remove instructions from text\n    let remainingText = instructions ? text.replace(instructions, '').trim() : text;\n\n    // Extract MCQ options: (A), (B), (C), (D) or A), B), C), D)\n    const mcqPattern = /\\(([A-D])\\)\\s*([^\\(\\)]+?)(?=\\([A-D]\\)|$)/gi;\n    const mcqMatches = [...remainingText.matchAll(mcqPattern)];\n    let mcqOptions = [];\n    let mainQuestion = remainingText;\n    if (mcqMatches.length >= 2) {\n      // Extract MCQ options\n      mcqOptions = mcqMatches.map(match => ({\n        label: match[1],\n        text: match[2].trim()\n      }));\n\n      // Remove MCQ options from main question\n      mcqMatches.forEach(match => {\n        mainQuestion = mainQuestion.replace(match[0], '');\n      });\n      mainQuestion = mainQuestion.trim();\n    }\n    return {\n      mainQuestion,\n      mcqOptions,\n      instructions\n    };\n  };\n\n  // Format question text to show sub-parts on new lines\n  const formatQuestionText = text => {\n    if (!text) return text;\n\n    // Split by common sub-part patterns: (a), (b), (c) or a), b), c)\n    const parts = text.split(/(?=\\([a-z]\\)|(?:^|\\s)[a-z]\\))/i);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: parts.map((part, idx) => {\n        const trimmedPart = part.trim();\n        if (!trimmedPart) return null;\n\n        // Check if this part starts with a sub-number like (a) or a)\n        const isSubPart = /^\\(?[a-z]\\)/i.test(trimmedPart);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: isSubPart ? 'sub-part-line' : 'main-question-line',\n          children: trimmedPart\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this);\n  };\n  useEffect(() => {\n    fetchParsedQuestions();\n  }, [paperId]);\n  const fetchParsedQuestions = async () => {\n    try {\n      const url = paperId ? `http://localhost:5000/api/parsed-questions?paper_id=${paperId}` : 'http://localhost:5000/api/parsed-questions';\n      const response = await axios.get(url);\n      setQuestions(response.data);\n    } catch (err) {\n      console.error('Error fetching parsed questions:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const filteredQuestions = questions.filter(q => {\n    const matchesFilter = filter === 'all' || q.question_type === filter;\n    const matchesSearch = q.question_text.toLowerCase().includes(searchTerm.toLowerCase()) || q.question_number.toLowerCase().includes(searchTerm.toLowerCase());\n    const matchesPaper = selectedPaper === 'all' || q.paper_id === parseInt(selectedPaper);\n    return matchesFilter && matchesSearch && matchesPaper;\n  });\n  const questionTypes = [...new Set(questions.map(q => q.question_type))];\n\n  // Get unique papers\n  const papers = [...new Map(questions.map(q => [q.paper_id, {\n    id: q.paper_id,\n    title: q.paper_title,\n    subject: q.subject\n  }])).values()];\n\n  // Group questions by paper\n  const groupedQuestions = {};\n  filteredQuestions.forEach(q => {\n    const key = `${q.paper_id}_${q.paper_title}`;\n    if (!groupedQuestions[key]) {\n      groupedQuestions[key] = {\n        paper_id: q.paper_id,\n        paper_title: q.paper_title,\n        subject: q.subject,\n        questions: []\n      };\n    }\n    groupedQuestions[key].questions.push(q);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"parsed-questions-modal\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"parsed-questions-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"parsed-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"\\uD83D\\uDCCB Parsed Questions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [questions.length, \" questions from \", papers.length, \" paper(s)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-btn\",\n          onClick: onClose,\n          children: \"\\u2715\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"parsed-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"\\uD83D\\uDD0D Search questions...\",\n          value: searchTerm,\n          onChange: e => setSearchTerm(e.target.value),\n          className: \"search-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), !paperId && /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedPaper,\n          onChange: e => setSelectedPaper(e.target.value),\n          className: \"filter-select\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"all\",\n            children: [\"All Papers (\", papers.length, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 15\n          }, this), papers.map(paper => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: paper.id,\n            children: [paper.title, \" - \", paper.subject]\n          }, paper.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: filter,\n          onChange: e => setFilter(e.target.value),\n          className: \"filter-select\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"all\",\n            children: \"All Types\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this), questionTypes.map(type => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: type,\n            children: type\n          }, type, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), !paperId && /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"group-toggle\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: groupByPaper,\n            onChange: e => setGroupByPaper(e.target.checked)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 15\n          }, this), \"Group by Paper\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"results-count\",\n          children: [filteredQuestions.length, \" of \", questions.length, \" questions\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-state\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading parsed questions...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 11\n      }, this) : groupByPaper && !paperId ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"questions-list\",\n        children: Object.values(groupedQuestions).map(group => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"paper-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"paper-group-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\"\\uD83D\\uDCC4 \", group.paper_title]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"paper-subject\",\n              children: group.subject\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"question-count-badge\",\n              children: [group.questions.length, \" questions\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 17\n          }, this), group.questions.map((q, index) => {\n            const parsedData = q.parsed_data ? JSON.parse(q.parsed_data) : {};\n            let displayNumber = q.question_number;\n            const numberMatch = q.question_text.match(/^(\\d+)\\s*[\\.\\)]/);\n            if (numberMatch) {\n              displayNumber = numberMatch[1];\n            }\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"parsed-question-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"question-header-row\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"question-number-badge\",\n                  children: [\"Q\", displayNumber]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 210,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"question-meta-tags\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: `type-badge ${q.question_type}`,\n                    children: q.question_type\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 215,\n                    columnNumber: 27\n                  }, this), q.has_diagram && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"diagram-badge\",\n                    children: \"\\uD83D\\uDCCA Diagram\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 220,\n                    columnNumber: 29\n                  }, this), q.marks && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"marks-badge\",\n                    children: [q.marks, \" marks\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 224,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 23\n              }, this), (() => {\n                const {\n                  mainQuestion,\n                  mcqOptions,\n                  instructions\n                } = parseQuestionContent(q.question_text);\n                return /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [instructions && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"question-instructions\",\n                    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"\\uD83D\\uDCCC Instructions:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 236,\n                      columnNumber: 33\n                    }, this), \" \", instructions]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 235,\n                    columnNumber: 31\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"question-text-display\",\n                    children: formatQuestionText(mainQuestion)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 240,\n                    columnNumber: 29\n                  }, this), mcqOptions.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mcq-options-display\",\n                    children: mcqOptions.map((option, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"mcq-option\",\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"mcq-option-label\",\n                        children: [\"(\", option.label, \")\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 248,\n                        columnNumber: 37\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"mcq-option-text\",\n                        children: option.text\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 249,\n                        columnNumber: 37\n                      }, this)]\n                    }, idx, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 247,\n                      columnNumber: 35\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 245,\n                    columnNumber: 31\n                  }, this)]\n                }, void 0, true);\n              })(), parsedData.sub_parts && parsedData.sub_parts.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"sub-parts-display\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Sub-parts:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 260,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"sub-parts-list\",\n                  children: parsedData.sub_parts.map((part, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"sub-part-item\",\n                    children: part\n                  }, idx, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 263,\n                    columnNumber: 31\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 261,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 25\n              }, this), parsedData.diagram_files && parsedData.diagram_files.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"diagrams-inline-display\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: [\"\\uD83D\\uDCCA Diagram\", parsedData.diagram_files.length > 1 ? 's' : '', \":\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 271,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"diagrams-inline-container\",\n                  children: parsedData.diagram_files.map((filename, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"diagram-inline-wrapper\",\n                    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                      src: `http://localhost:5000/api/diagram/${q.paper_id}/${filename}`,\n                      alt: `Diagram ${idx + 1}`,\n                      className: \"diagram-inline\",\n                      onClick: () => {\n                        console.log('Diagram clicked:', {\n                          paperId: q.paper_id,\n                          filename\n                        });\n                        setSelectedDiagram({\n                          paperId: q.paper_id,\n                          filename\n                        });\n                      },\n                      onError: e => e.target.style.display = 'none'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 275,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"diagram-caption\",\n                      children: \"Click to enlarge\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 285,\n                      columnNumber: 33\n                    }, this)]\n                  }, idx, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 274,\n                    columnNumber: 31\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 272,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"question-footer\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"created-date\",\n                  children: new Date(q.created_at).toLocaleDateString()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 293,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 292,\n                columnNumber: 23\n              }, this)]\n            }, q.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 21\n            }, this);\n          })]\n        }, group.paper_id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"questions-list\",\n        children: [filteredQuestions.map((q, index) => {\n          const parsedData = q.parsed_data ? JSON.parse(q.parsed_data) : {};\n\n          // Extract question number from question_text if it starts with a number\n          let displayNumber = q.question_number;\n          const numberMatch = q.question_text.match(/^(\\d+)\\s*[\\.\\)]/);\n          if (numberMatch) {\n            displayNumber = numberMatch[1];\n          }\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"parsed-question-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"question-header-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"question-number-badge\",\n                children: [\"Q\", displayNumber]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 318,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"question-meta-tags\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `type-badge ${q.question_type}`,\n                  children: q.question_type\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 323,\n                  columnNumber: 23\n                }, this), q.has_diagram && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"diagram-badge\",\n                  children: \"\\uD83D\\uDCCA Diagram\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 328,\n                  columnNumber: 25\n                }, this), q.marks && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"marks-badge\",\n                  children: [q.marks, \" marks\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 332,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 322,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 19\n            }, this), (() => {\n              const {\n                mainQuestion,\n                mcqOptions,\n                instructions\n              } = parseQuestionContent(q.question_text);\n              return /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [instructions && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"question-instructions\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"\\uD83D\\uDCCC Instructions:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 344,\n                    columnNumber: 29\n                  }, this), \" \", instructions]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 343,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"question-text-display\",\n                  children: formatQuestionText(mainQuestion)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 348,\n                  columnNumber: 25\n                }, this), mcqOptions.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mcq-options-display\",\n                  children: mcqOptions.map((option, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mcq-option\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"mcq-option-label\",\n                      children: [\"(\", option.label, \")\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 356,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"mcq-option-text\",\n                      children: option.text\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 357,\n                      columnNumber: 33\n                    }, this)]\n                  }, idx, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 355,\n                    columnNumber: 31\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 353,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true);\n            })(), parsedData.sub_parts && parsedData.sub_parts.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"sub-parts-display\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Sub-parts:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 368,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"sub-parts-list\",\n                children: parsedData.sub_parts.map((part, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"sub-part-item\",\n                  children: part\n                }, idx, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 371,\n                  columnNumber: 27\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 369,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 21\n            }, this), parsedData.diagram_files && parsedData.diagram_files.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"diagrams-inline-display\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: [\"\\uD83D\\uDCCA Diagram\", parsedData.diagram_files.length > 1 ? 's' : '', \":\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 379,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"diagrams-inline-container\",\n                children: parsedData.diagram_files.map((filename, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"diagram-inline-wrapper\",\n                  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                    src: `http://localhost:5000/api/diagram/${q.paper_id}/${filename}`,\n                    alt: `Diagram ${idx + 1}`,\n                    className: \"diagram-inline\",\n                    onClick: () => {\n                      console.log('Diagram clicked (ungrouped):', {\n                        paperId: q.paper_id,\n                        filename\n                      });\n                      setSelectedDiagram({\n                        paperId: q.paper_id,\n                        filename\n                      });\n                    },\n                    onError: e => e.target.style.display = 'none'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 383,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"diagram-caption\",\n                    children: \"Click to enlarge\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 393,\n                    columnNumber: 29\n                  }, this)]\n                }, idx, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 382,\n                  columnNumber: 27\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 380,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"question-footer\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"paper-info\",\n                children: [\"\\uD83D\\uDCC4 \", q.paper_title, \" \\u2022 \", q.subject]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 401,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"created-date\",\n                children: new Date(q.created_at).toLocaleDateString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 404,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 400,\n              columnNumber: 19\n            }, this)]\n          }, q.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 17\n          }, this);\n        }), filteredQuestions.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-questions\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No questions found matching your criteria\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 414,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 11\n      }, this), selectedDiagram && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"diagram-modal\",\n        onClick: () => setSelectedDiagram(null),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"diagram-modal-content\",\n          onClick: e => e.stopPropagation(),\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"close-diagram-btn\",\n            onClick: () => setSelectedDiagram(null),\n            children: \"\\u2715\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 424,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `http://localhost:5000/api/diagram/${selectedDiagram.paperId}/${selectedDiagram.filename}`,\n            alt: \"Diagram\",\n            className: \"diagram-full\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 425,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 5\n  }, this);\n};\n_s(ParsedQuestionsView, \"yQEF7+0vIUg/hRMDAuUJcGmKHOc=\");\n_c = ParsedQuestionsView;\nexport default ParsedQuestionsView;\nvar _c;\n$RefreshReg$(_c, \"ParsedQuestionsView\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","ParsedQuestionsView","paperId","onClose","_s","questions","setQuestions","loading","setLoading","filter","setFilter","searchTerm","setSearchTerm","selectedDiagram","setSelectedDiagram","selectedPaper","setSelectedPaper","groupByPaper","setGroupByPaper","parseQuestionContent","text","mainQuestion","mcqOptions","instructions","instructionMatch","match","trim","remainingText","replace","mcqPattern","mcqMatches","matchAll","length","map","label","forEach","formatQuestionText","parts","split","children","part","idx","trimmedPart","isSubPart","test","className","fileName","_jsxFileName","lineNumber","columnNumber","fetchParsedQuestions","url","response","get","data","err","console","error","filteredQuestions","q","matchesFilter","question_type","matchesSearch","question_text","toLowerCase","includes","question_number","matchesPaper","paper_id","parseInt","questionTypes","Set","papers","Map","id","title","paper_title","subject","values","groupedQuestions","key","push","onClick","type","placeholder","value","onChange","e","target","paper","checked","Object","group","index","parsedData","parsed_data","JSON","parse","displayNumber","numberMatch","has_diagram","marks","option","sub_parts","diagram_files","filename","src","alt","log","onError","style","display","Date","created_at","toLocaleDateString","stopPropagation","_c","$RefreshReg$"],"sources":["D:/AI/_Programs/CBSE/aqnamic/frontend/src/components/ParsedQuestionsView.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './ParsedQuestionsView.css';\n\nconst ParsedQuestionsView = ({ paperId, onClose }) => {\n  const [questions, setQuestions] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [filter, setFilter] = useState('all');\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedDiagram, setSelectedDiagram] = useState(null);\n  const [selectedPaper, setSelectedPaper] = useState(paperId || 'all');\n  const [groupByPaper, setGroupByPaper] = useState(!paperId); // Group by default when viewing all\n\n  // Parse question text to extract main question, MCQ options, and instructions\n  const parseQuestionContent = (text) => {\n    if (!text) return { mainQuestion: '', mcqOptions: [], instructions: '' };\n    \n    // Extract common instructions (usually at the start)\n    const instructionMatch = text.match(/^((?:Read|Note|Instructions?|Common)[^\\n]*(?:\\n[^\\n]*){0,3})(?=\\n\\d+[\\.\\)])/i);\n    const instructions = instructionMatch ? instructionMatch[1].trim() : '';\n    \n    // Remove instructions from text\n    let remainingText = instructions ? text.replace(instructions, '').trim() : text;\n    \n    // Extract MCQ options: (A), (B), (C), (D) or A), B), C), D)\n    const mcqPattern = /\\(([A-D])\\)\\s*([^\\(\\)]+?)(?=\\([A-D]\\)|$)/gi;\n    const mcqMatches = [...remainingText.matchAll(mcqPattern)];\n    \n    let mcqOptions = [];\n    let mainQuestion = remainingText;\n    \n    if (mcqMatches.length >= 2) {\n      // Extract MCQ options\n      mcqOptions = mcqMatches.map(match => ({\n        label: match[1],\n        text: match[2].trim()\n      }));\n      \n      // Remove MCQ options from main question\n      mcqMatches.forEach(match => {\n        mainQuestion = mainQuestion.replace(match[0], '');\n      });\n      mainQuestion = mainQuestion.trim();\n    }\n    \n    return { mainQuestion, mcqOptions, instructions };\n  };\n  \n  // Format question text to show sub-parts on new lines\n  const formatQuestionText = (text) => {\n    if (!text) return text;\n    \n    // Split by common sub-part patterns: (a), (b), (c) or a), b), c)\n    const parts = text.split(/(?=\\([a-z]\\)|(?:^|\\s)[a-z]\\))/i);\n    \n    return (\n      <div>\n        {parts.map((part, idx) => {\n          const trimmedPart = part.trim();\n          if (!trimmedPart) return null;\n          \n          // Check if this part starts with a sub-number like (a) or a)\n          const isSubPart = /^\\(?[a-z]\\)/i.test(trimmedPart);\n          \n          return (\n            <div key={idx} className={isSubPart ? 'sub-part-line' : 'main-question-line'}>\n              {trimmedPart}\n            </div>\n          );\n        })}\n      </div>\n    );\n  };\n\n  useEffect(() => {\n    fetchParsedQuestions();\n  }, [paperId]);\n\n  const fetchParsedQuestions = async () => {\n    try {\n      const url = paperId \n        ? `http://localhost:5000/api/parsed-questions?paper_id=${paperId}`\n        : 'http://localhost:5000/api/parsed-questions';\n      \n      const response = await axios.get(url);\n      setQuestions(response.data);\n    } catch (err) {\n      console.error('Error fetching parsed questions:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const filteredQuestions = questions.filter(q => {\n    const matchesFilter = filter === 'all' || q.question_type === filter;\n    const matchesSearch = q.question_text.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                         q.question_number.toLowerCase().includes(searchTerm.toLowerCase());\n    const matchesPaper = selectedPaper === 'all' || q.paper_id === parseInt(selectedPaper);\n    return matchesFilter && matchesSearch && matchesPaper;\n  });\n\n  const questionTypes = [...new Set(questions.map(q => q.question_type))];\n  \n  // Get unique papers\n  const papers = [...new Map(questions.map(q => [q.paper_id, { id: q.paper_id, title: q.paper_title, subject: q.subject }])).values()];\n  \n  // Group questions by paper\n  const groupedQuestions = {};\n  filteredQuestions.forEach(q => {\n    const key = `${q.paper_id}_${q.paper_title}`;\n    if (!groupedQuestions[key]) {\n      groupedQuestions[key] = {\n        paper_id: q.paper_id,\n        paper_title: q.paper_title,\n        subject: q.subject,\n        questions: []\n      };\n    }\n    groupedQuestions[key].questions.push(q);\n  });\n\n  return (\n    <div className=\"parsed-questions-modal\">\n      <div className=\"parsed-questions-container\">\n        <div className=\"parsed-header\">\n          <div>\n            <h2>📋 Parsed Questions</h2>\n            <p>{questions.length} questions from {papers.length} paper(s)</p>\n          </div>\n          <button className=\"close-btn\" onClick={onClose}>✕</button>\n        </div>\n\n        <div className=\"parsed-controls\">\n          <input\n            type=\"text\"\n            placeholder=\"🔍 Search questions...\"\n            value={searchTerm}\n            onChange={(e) => setSearchTerm(e.target.value)}\n            className=\"search-input\"\n          />\n\n          {!paperId && (\n            <select \n              value={selectedPaper} \n              onChange={(e) => setSelectedPaper(e.target.value)}\n              className=\"filter-select\"\n            >\n              <option value=\"all\">All Papers ({papers.length})</option>\n              {papers.map(paper => (\n                <option key={paper.id} value={paper.id}>\n                  {paper.title} - {paper.subject}\n                </option>\n              ))}\n            </select>\n          )}\n\n          <select \n            value={filter} \n            onChange={(e) => setFilter(e.target.value)}\n            className=\"filter-select\"\n          >\n            <option value=\"all\">All Types</option>\n            {questionTypes.map(type => (\n              <option key={type} value={type}>{type}</option>\n            ))}\n          </select>\n\n          {!paperId && (\n            <label className=\"group-toggle\">\n              <input\n                type=\"checkbox\"\n                checked={groupByPaper}\n                onChange={(e) => setGroupByPaper(e.target.checked)}\n              />\n              Group by Paper\n            </label>\n          )}\n\n          <div className=\"results-count\">\n            {filteredQuestions.length} of {questions.length} questions\n          </div>\n        </div>\n\n        {loading ? (\n          <div className=\"loading-state\">\n            <div className=\"spinner\"></div>\n            <p>Loading parsed questions...</p>\n          </div>\n        ) : groupByPaper && !paperId ? (\n          <div className=\"questions-list\">\n            {Object.values(groupedQuestions).map((group) => (\n              <div key={group.paper_id} className=\"paper-group\">\n                <div className=\"paper-group-header\">\n                  <h3>📄 {group.paper_title}</h3>\n                  <span className=\"paper-subject\">{group.subject}</span>\n                  <span className=\"question-count-badge\">{group.questions.length} questions</span>\n                </div>\n                {group.questions.map((q, index) => {\n                  const parsedData = q.parsed_data ? JSON.parse(q.parsed_data) : {};\n                  \n                  let displayNumber = q.question_number;\n                  const numberMatch = q.question_text.match(/^(\\d+)\\s*[\\.\\)]/);\n                  if (numberMatch) {\n                    displayNumber = numberMatch[1];\n                  }\n                  \n                  return (\n                    <div key={q.id} className=\"parsed-question-card\">\n                      <div className=\"question-header-row\">\n                        <div className=\"question-number-badge\">\n                          Q{displayNumber}\n                        </div>\n                        \n                        <div className=\"question-meta-tags\">\n                          <span className={`type-badge ${q.question_type}`}>\n                            {q.question_type}\n                          </span>\n                          \n                          {q.has_diagram && (\n                            <span className=\"diagram-badge\">📊 Diagram</span>\n                          )}\n                          \n                          {q.marks && (\n                            <span className=\"marks-badge\">{q.marks} marks</span>\n                          )}\n                        </div>\n                      </div>\n\n                      {(() => {\n                        const { mainQuestion, mcqOptions, instructions } = parseQuestionContent(q.question_text);\n                        \n                        return (\n                          <>\n                            {instructions && (\n                              <div className=\"question-instructions\">\n                                <strong>📌 Instructions:</strong> {instructions}\n                              </div>\n                            )}\n                            \n                            <div className=\"question-text-display\">\n                              {formatQuestionText(mainQuestion)}\n                            </div>\n                            \n                            {mcqOptions.length > 0 && (\n                              <div className=\"mcq-options-display\">\n                                {mcqOptions.map((option, idx) => (\n                                  <div key={idx} className=\"mcq-option\">\n                                    <span className=\"mcq-option-label\">({option.label})</span>\n                                    <span className=\"mcq-option-text\">{option.text}</span>\n                                  </div>\n                                ))}\n                              </div>\n                            )}\n                          </>\n                        );\n                      })()}\n\n                      {parsedData.sub_parts && parsedData.sub_parts.length > 0 && (\n                        <div className=\"sub-parts-display\">\n                          <strong>Sub-parts:</strong>\n                          <div className=\"sub-parts-list\">\n                            {parsedData.sub_parts.map((part, idx) => (\n                              <div key={idx} className=\"sub-part-item\">{part}</div>\n                            ))}\n                          </div>\n                        </div>\n                      )}\n\n                      {parsedData.diagram_files && parsedData.diagram_files.length > 0 && (\n                        <div className=\"diagrams-inline-display\">\n                          <strong>📊 Diagram{parsedData.diagram_files.length > 1 ? 's' : ''}:</strong>\n                          <div className=\"diagrams-inline-container\">\n                            {parsedData.diagram_files.map((filename, idx) => (\n                              <div key={idx} className=\"diagram-inline-wrapper\">\n                                <img \n                                  src={`http://localhost:5000/api/diagram/${q.paper_id}/${filename}`}\n                                  alt={`Diagram ${idx + 1}`}\n                                  className=\"diagram-inline\"\n                                  onClick={() => {\n                                    console.log('Diagram clicked:', { paperId: q.paper_id, filename });\n                                    setSelectedDiagram({ paperId: q.paper_id, filename });\n                                  }}\n                                  onError={(e) => e.target.style.display = 'none'}\n                                />\n                                <span className=\"diagram-caption\">Click to enlarge</span>\n                              </div>\n                            ))}\n                          </div>\n                        </div>\n                      )}\n\n                      <div className=\"question-footer\">\n                        <span className=\"created-date\">\n                          {new Date(q.created_at).toLocaleDateString()}\n                        </span>\n                      </div>\n                    </div>\n                  );\n                })}\n              </div>\n            ))}\n          </div>\n        ) : (\n          <div className=\"questions-list\">\n            {filteredQuestions.map((q, index) => {\n              const parsedData = q.parsed_data ? JSON.parse(q.parsed_data) : {};\n              \n              // Extract question number from question_text if it starts with a number\n              let displayNumber = q.question_number;\n              const numberMatch = q.question_text.match(/^(\\d+)\\s*[\\.\\)]/);\n              if (numberMatch) {\n                displayNumber = numberMatch[1];\n              }\n              \n              return (\n                <div key={q.id} className=\"parsed-question-card\">\n                  <div className=\"question-header-row\">\n                    <div className=\"question-number-badge\">\n                      Q{displayNumber}\n                    </div>\n                    \n                    <div className=\"question-meta-tags\">\n                      <span className={`type-badge ${q.question_type}`}>\n                        {q.question_type}\n                      </span>\n                      \n                      {q.has_diagram && (\n                        <span className=\"diagram-badge\">📊 Diagram</span>\n                      )}\n                      \n                      {q.marks && (\n                        <span className=\"marks-badge\">{q.marks} marks</span>\n                      )}\n                    </div>\n                  </div>\n\n                  {(() => {\n                    const { mainQuestion, mcqOptions, instructions } = parseQuestionContent(q.question_text);\n                    \n                    return (\n                      <>\n                        {instructions && (\n                          <div className=\"question-instructions\">\n                            <strong>📌 Instructions:</strong> {instructions}\n                          </div>\n                        )}\n                        \n                        <div className=\"question-text-display\">\n                          {formatQuestionText(mainQuestion)}\n                        </div>\n                        \n                        {mcqOptions.length > 0 && (\n                          <div className=\"mcq-options-display\">\n                            {mcqOptions.map((option, idx) => (\n                              <div key={idx} className=\"mcq-option\">\n                                <span className=\"mcq-option-label\">({option.label})</span>\n                                <span className=\"mcq-option-text\">{option.text}</span>\n                              </div>\n                            ))}\n                          </div>\n                        )}\n                      </>\n                    );\n                  })()}\n\n                  {parsedData.sub_parts && parsedData.sub_parts.length > 0 && (\n                    <div className=\"sub-parts-display\">\n                      <strong>Sub-parts:</strong>\n                      <div className=\"sub-parts-list\">\n                        {parsedData.sub_parts.map((part, idx) => (\n                          <div key={idx} className=\"sub-part-item\">{part}</div>\n                        ))}\n                      </div>\n                    </div>\n                  )}\n\n                  {parsedData.diagram_files && parsedData.diagram_files.length > 0 && (\n                    <div className=\"diagrams-inline-display\">\n                      <strong>📊 Diagram{parsedData.diagram_files.length > 1 ? 's' : ''}:</strong>\n                      <div className=\"diagrams-inline-container\">\n                        {parsedData.diagram_files.map((filename, idx) => (\n                          <div key={idx} className=\"diagram-inline-wrapper\">\n                            <img \n                              src={`http://localhost:5000/api/diagram/${q.paper_id}/${filename}`}\n                              alt={`Diagram ${idx + 1}`}\n                              className=\"diagram-inline\"\n                              onClick={() => {\n                                console.log('Diagram clicked (ungrouped):', { paperId: q.paper_id, filename });\n                                setSelectedDiagram({ paperId: q.paper_id, filename });\n                              }}\n                              onError={(e) => e.target.style.display = 'none'}\n                            />\n                            <span className=\"diagram-caption\">Click to enlarge</span>\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n                  )}\n\n                  <div className=\"question-footer\">\n                    <span className=\"paper-info\">\n                      📄 {q.paper_title} • {q.subject}\n                    </span>\n                    <span className=\"created-date\">\n                      {new Date(q.created_at).toLocaleDateString()}\n                    </span>\n                  </div>\n                </div>\n              );\n            })}\n\n            {filteredQuestions.length === 0 && (\n              <div className=\"no-questions\">\n                <p>No questions found matching your criteria</p>\n              </div>\n            )}\n          </div>\n        )}\n\n        {/* Diagram Modal */}\n        {selectedDiagram && (\n          <div className=\"diagram-modal\" onClick={() => setSelectedDiagram(null)}>\n            <div className=\"diagram-modal-content\" onClick={(e) => e.stopPropagation()}>\n              <button className=\"close-diagram-btn\" onClick={() => setSelectedDiagram(null)}>✕</button>\n              <img \n                src={`http://localhost:5000/api/diagram/${selectedDiagram.paperId}/${selectedDiagram.filename}`}\n                alt=\"Diagram\"\n                className=\"diagram-full\"\n              />\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ParsedQuestionsView;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}