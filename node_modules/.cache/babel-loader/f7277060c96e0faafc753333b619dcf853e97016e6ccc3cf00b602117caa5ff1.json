{"ast":null,"code":"import React,{useState,useEffect}from'react';import axios from'axios';import'./UploadPapers.css';import ParsedQuestionsView from'./ParsedQuestionsView';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const UploadPapers=_ref=>{let{user}=_ref;// Question Papers State\nconst[title,setTitle]=useState('');const[subject,setSubject]=useState('');const[file,setFile]=useState(null);const[uploadedPapers,setUploadedPapers]=useState([]);const[loading,setLoading]=useState(false);const[message,setMessage]=useState({type:'',text:''});// Textbooks State\nconst[textbookTitle,setTextbookTitle]=useState('');const[textbookSubject,setTextbookSubject]=useState('');const[textbookAuthor,setTextbookAuthor]=useState('');const[textbookFile,setTextbookFile]=useState(null);const[uploadedTextbooks,setUploadedTextbooks]=useState([]);const[textbookLoading,setTextbookLoading]=useState(false);const[textbookMessage,setTextbookMessage]=useState({type:'',text:''});// Question Parsing State\nconst[parsingPaper,setParsingPaper]=useState(null);const[parsedQuestions,setParsedQuestions]=useState([]);const[showParsedQuestions,setShowParsedQuestions]=useState(false);const[parsingLoading,setParsingLoading]=useState(false);const[parsingMessage,setParsingMessage]=useState({type:'',text:''});// Tab State\nconst[activeTab,setActiveTab]=useState('textbooks');useEffect(()=>{fetchUploadedPapers();fetchUploadedTextbooks();fetchParsedQuestions();},[]);const fetchUploadedPapers=async()=>{try{const response=await axios.get('http://localhost:5000/api/uploaded-papers');setUploadedPapers(response.data);}catch(err){console.error('Error fetching papers:',err);}};const fetchUploadedTextbooks=async()=>{try{const response=await axios.get('http://localhost:5000/api/textbooks');setUploadedTextbooks(response.data);}catch(err){console.error('Error fetching textbooks:',err);}};const fetchParsedQuestions=async()=>{try{const response=await axios.get('http://localhost:5000/api/parsed-questions');setParsedQuestions(response.data);}catch(err){console.error('Error fetching parsed questions:',err);}};const handleParseQuestions=async paperId=>{setParsingLoading(true);setParsingMessage({type:'',text:''});setParsingPaper(paperId);try{const response=await axios.post(\"http://localhost:5000/api/parse-questions/\".concat(paperId));if(response.data.success){setParsingMessage({type:'success',text:\"Successfully parsed \".concat(response.data.total_questions,\" questions!\")});fetchParsedQuestions();setTimeout(()=>setShowParsedQuestions(true),1000);}}catch(err){var _err$response,_err$response$data;setParsingMessage({type:'error',text:((_err$response=err.response)===null||_err$response===void 0?void 0:(_err$response$data=_err$response.data)===null||_err$response$data===void 0?void 0:_err$response$data.error)||'Parsing failed. Please try again.'});}finally{setParsingLoading(false);setParsingPaper(null);}};const handleCleanDuplicates=async()=>{if(!window.confirm('Remove all duplicate questions from database?')){return;}setParsingLoading(true);setParsingMessage({type:'',text:''});try{const response=await axios.post('http://localhost:5000/api/clean-duplicates');if(response.data.success){setParsingMessage({type:'success',text:response.data.message});fetchParsedQuestions();}}catch(err){var _err$response2,_err$response2$data;setParsingMessage({type:'error',text:((_err$response2=err.response)===null||_err$response2===void 0?void 0:(_err$response2$data=_err$response2.data)===null||_err$response2$data===void 0?void 0:_err$response2$data.error)||'Cleanup failed.'});}finally{setParsingLoading(false);}};const handleDeletePaper=async(paperId,paperTitle)=>{if(!window.confirm(\"Are you sure you want to delete \\\"\".concat(paperTitle,\"\\\"?\\n\\nThis will also delete all parsed questions associated with this paper.\"))){return;}setLoading(true);setMessage({type:'',text:''});try{const response=await axios.delete(\"http://localhost:5000/api/delete-paper/\".concat(paperId));if(response.data.success){setMessage({type:'success',text:'Paper deleted successfully!'});fetchUploadedPapers();fetchParsedQuestions();}}catch(err){var _err$response3,_err$response3$data;setMessage({type:'error',text:((_err$response3=err.response)===null||_err$response3===void 0?void 0:(_err$response3$data=_err$response3.data)===null||_err$response3$data===void 0?void 0:_err$response3$data.error)||'Delete failed. Please try again.'});}finally{setLoading(false);}};const handleDeleteTextbook=async(textbookId,textbookTitle)=>{if(!window.confirm(\"Are you sure you want to delete \\\"\".concat(textbookTitle,\"\\\"?\"))){return;}setTextbookLoading(true);setTextbookMessage({type:'',text:''});try{const response=await axios.delete(\"http://localhost:5000/api/delete-textbook/\".concat(textbookId));if(response.data.success){setTextbookMessage({type:'success',text:'Textbook deleted successfully!'});fetchUploadedTextbooks();}}catch(err){var _err$response4,_err$response4$data;setTextbookMessage({type:'error',text:((_err$response4=err.response)===null||_err$response4===void 0?void 0:(_err$response4$data=_err$response4.data)===null||_err$response4$data===void 0?void 0:_err$response4$data.error)||'Delete failed. Please try again.'});}finally{setTextbookLoading(false);}};const handleFileChange=e=>{const selectedFile=e.target.files[0];if(selectedFile){setFile(selectedFile);// Auto-populate title with filename (without extension)\nconst fileName=selectedFile.name;const fileNameWithoutExt=fileName.substring(0,fileName.lastIndexOf('.'))||fileName;// Only set title if it's empty\nif(!title){setTitle(fileNameWithoutExt);}}};const handleTextbookFileChange=e=>{const selectedFile=e.target.files[0];if(selectedFile){setTextbookFile(selectedFile);// Auto-populate title with filename (without extension)\nconst fileName=selectedFile.name;const fileNameWithoutExt=fileName.substring(0,fileName.lastIndexOf('.'))||fileName;// Only set title if it's empty\nif(!textbookTitle){setTextbookTitle(fileNameWithoutExt);}}};const handleSubmit=async e=>{e.preventDefault();if(!title||!subject||!file){setMessage({type:'error',text:'Please fill all fields and select a file'});return;}setLoading(true);setMessage({type:'',text:''});const formData=new FormData();formData.append('file',file);formData.append('title',title);formData.append('subject',subject);formData.append('user_id',user.id);try{const response=await axios.post('http://localhost:5000/api/upload-paper',formData,{headers:{'Content-Type':'multipart/form-data'}});if(response.data.success){setMessage({type:'success',text:'Paper uploaded successfully!'});setTitle('');setSubject('');setFile(null);document.getElementById('file-input').value='';fetchUploadedPapers();}}catch(err){var _err$response5,_err$response5$data;setMessage({type:'error',text:((_err$response5=err.response)===null||_err$response5===void 0?void 0:(_err$response5$data=_err$response5.data)===null||_err$response5$data===void 0?void 0:_err$response5$data.error)||'Upload failed. Please try again.'});}finally{setLoading(false);}};const handleTextbookSubmit=async e=>{e.preventDefault();if(!textbookTitle||!textbookSubject||!textbookFile){setTextbookMessage({type:'error',text:'Please fill all required fields and select a file'});return;}setTextbookLoading(true);setTextbookMessage({type:'',text:''});const formData=new FormData();formData.append('file',textbookFile);formData.append('title',textbookTitle);formData.append('subject',textbookSubject);formData.append('author',textbookAuthor);formData.append('user_id',user.id);try{const response=await axios.post('http://localhost:5000/api/upload-textbook',formData,{headers:{'Content-Type':'multipart/form-data'}});if(response.data.success){setTextbookMessage({type:'success',text:'Textbook uploaded successfully!'});setTextbookTitle('');setTextbookSubject('');setTextbookAuthor('');setTextbookFile(null);document.getElementById('textbook-file-input').value='';fetchUploadedTextbooks();}}catch(err){var _err$response6,_err$response6$data;setTextbookMessage({type:'error',text:((_err$response6=err.response)===null||_err$response6===void 0?void 0:(_err$response6$data=_err$response6.data)===null||_err$response6$data===void 0?void 0:_err$response6$data.error)||'Upload failed. Please try again.'});}finally{setTextbookLoading(false);}};const formatDate=dateString=>{const date=new Date(dateString);return date.toLocaleDateString('en-US',{year:'numeric',month:'short',day:'numeric',hour:'2-digit',minute:'2-digit'});};return/*#__PURE__*/_jsxs(\"div\",{className:\"upload-papers\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"upload-header\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\uD83D\\uDCE4 Upload Resources\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Share textbooks, study materials, and past papers\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"upload-tabs\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"tab-btn \".concat(activeTab==='textbooks'?'active':''),onClick:()=>setActiveTab('textbooks'),children:\"\\uD83D\\uDCDA Textbooks\"}),/*#__PURE__*/_jsx(\"button\",{className:\"tab-btn \".concat(activeTab==='papers'?'active':''),onClick:()=>setActiveTab('papers'),children:\"\\uD83D\\uDCDD Question Papers\"}),/*#__PURE__*/_jsx(\"button\",{className:\"tab-btn \".concat(activeTab==='all-questions'?'active':''),onClick:()=>setActiveTab('all-questions'),children:\"\\uD83D\\uDCCB All Questions\"})]}),activeTab==='textbooks'&&/*#__PURE__*/_jsxs(\"div\",{className:\"upload-section compact\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"section-title\",children:\"\\uD83D\\uDCDA Upload Textbooks\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"compact-form-container\",children:[/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleTextbookSubmit,className:\"compact-form\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:textbookTitle,onChange:e=>setTextbookTitle(e.target.value),placeholder:\"Title (auto-filled)\",required:true}),/*#__PURE__*/_jsxs(\"select\",{value:textbookSubject,onChange:e=>setTextbookSubject(e.target.value),required:true,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Subject\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Mathematics\",children:\"Mathematics\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Physics\",children:\"Physics\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Chemistry\",children:\"Chemistry\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Biology\",children:\"Biology\"}),/*#__PURE__*/_jsx(\"option\",{value:\"English\",children:\"English\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Computer Science\",children:\"Computer Science\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Social Science\",children:\"Social Science\"})]}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:textbookAuthor,onChange:e=>setTextbookAuthor(e.target.value),placeholder:\"Author (optional)\"}),/*#__PURE__*/_jsx(\"input\",{type:\"file\",id:\"textbook-file-input\",onChange:handleTextbookFileChange,accept:\".pdf,.doc,.docx,.txt\",required:true}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"compact-upload-btn\",disabled:textbookLoading,children:textbookLoading?'⏳':'📚 Upload'})]}),textbookMessage.text&&/*#__PURE__*/_jsx(\"div\",{className:\"compact-message \".concat(textbookMessage.type),children:textbookMessage.text})]}),uploadedTextbooks.length>0&&/*#__PURE__*/_jsx(\"div\",{className:\"table-container\",children:/*#__PURE__*/_jsxs(\"table\",{className:\"documents-table\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Title\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Subject\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Vectorized\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Actions\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:uploadedTextbooks.map(textbook=>{const isVectorized=textbook.is_indexed===1||textbook.is_indexed===true;return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsxs(\"td\",{className:\"title-cell\",children:[\"\\uD83D\\uDCDA \",textbook.title]}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"span\",{className:\"subject-badge\",children:textbook.subject})}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"span\",{className:\"parsed-badge \".concat(isVectorized?'parsed-yes':'parsed-no'),children:isVectorized?'Yes':'No'})}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"button\",{className:\"table-delete-btn\",onClick:()=>handleDeleteTextbook(textbook.id,textbook.title),disabled:textbookLoading,title:\"Delete\",children:\"\\uD83D\\uDDD1\\uFE0F\"})})]},textbook.id);})})]})})]}),activeTab==='papers'&&/*#__PURE__*/_jsxs(\"div\",{className:\"upload-section compact\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"section-header-compact\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"section-title\",children:\"\\uD83D\\uDCDD Upload Question Papers\"}),/*#__PURE__*/_jsx(\"div\",{className:\"header-actions-compact\",children:/*#__PURE__*/_jsx(\"button\",{className:\"compact-action-btn\",onClick:handleCleanDuplicates,disabled:parsingLoading,children:\"\\uD83E\\uDDF9 Clean\"})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"compact-form-container\",children:[/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,className:\"compact-form\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:title,onChange:e=>setTitle(e.target.value),placeholder:\"Paper Title (auto-filled)\",required:true}),/*#__PURE__*/_jsxs(\"select\",{value:subject,onChange:e=>setSubject(e.target.value),required:true,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Subject\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Mathematics\",children:\"Mathematics\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Physics\",children:\"Physics\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Chemistry\",children:\"Chemistry\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Biology\",children:\"Biology\"}),/*#__PURE__*/_jsx(\"option\",{value:\"English\",children:\"English\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Computer Science\",children:\"Computer Science\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Social Science\",children:\"Social Science\"})]}),/*#__PURE__*/_jsx(\"input\",{type:\"file\",id:\"file-input\",onChange:handleFileChange,accept:\".pdf,.doc,.docx,.txt\",required:true}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"compact-upload-btn\",disabled:loading,children:loading?'⏳':'📤 Upload'})]}),message.text&&/*#__PURE__*/_jsx(\"div\",{className:\"compact-message \".concat(message.type),children:message.text})]}),uploadedPapers.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"table-container\",children:[/*#__PURE__*/_jsxs(\"table\",{className:\"documents-table\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Title\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Subject\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Parsed\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Actions\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:uploadedPapers.map(paper=>{const isParsed=parsedQuestions.some(q=>q.paper_id===paper.id);return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsxs(\"td\",{className:\"title-cell\",children:[\"\\uD83D\\uDCC4 \",paper.title]}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"span\",{className:\"subject-badge\",children:paper.subject})}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"span\",{className:\"parsed-badge \".concat(isParsed?'parsed-yes':'parsed-no'),children:isParsed?'Yes':'No'})}),/*#__PURE__*/_jsxs(\"td\",{children:[/*#__PURE__*/_jsx(\"button\",{className:\"table-action-btn parse\",onClick:()=>handleParseQuestions(paper.id),disabled:parsingPaper===paper.id,title:\"Parse Questions\",children:parsingPaper===paper.id?'⏳':'🔍'}),/*#__PURE__*/_jsx(\"button\",{className:\"table-delete-btn\",onClick:()=>handleDeletePaper(paper.id,paper.title),disabled:loading,title:\"Delete\",children:\"\\uD83D\\uDDD1\\uFE0F\"})]})]},paper.id);})})]}),parsingMessage.text&&/*#__PURE__*/_jsx(\"div\",{className:\"compact-message \".concat(parsingMessage.type),children:parsingMessage.text})]})]}),activeTab==='all-questions'&&/*#__PURE__*/_jsx(\"div\",{className:\"all-questions-section\",children:/*#__PURE__*/_jsx(ParsedQuestionsView,{onClose:null,embedded:true})})]});};export default UploadPapers;","map":{"version":3,"names":["React","useState","useEffect","axios","ParsedQuestionsView","jsx","_jsx","jsxs","_jsxs","UploadPapers","_ref","user","title","setTitle","subject","setSubject","file","setFile","uploadedPapers","setUploadedPapers","loading","setLoading","message","setMessage","type","text","textbookTitle","setTextbookTitle","textbookSubject","setTextbookSubject","textbookAuthor","setTextbookAuthor","textbookFile","setTextbookFile","uploadedTextbooks","setUploadedTextbooks","textbookLoading","setTextbookLoading","textbookMessage","setTextbookMessage","parsingPaper","setParsingPaper","parsedQuestions","setParsedQuestions","showParsedQuestions","setShowParsedQuestions","parsingLoading","setParsingLoading","parsingMessage","setParsingMessage","activeTab","setActiveTab","fetchUploadedPapers","fetchUploadedTextbooks","fetchParsedQuestions","response","get","data","err","console","error","handleParseQuestions","paperId","post","concat","success","total_questions","setTimeout","_err$response","_err$response$data","handleCleanDuplicates","window","confirm","_err$response2","_err$response2$data","handleDeletePaper","paperTitle","delete","_err$response3","_err$response3$data","handleDeleteTextbook","textbookId","_err$response4","_err$response4$data","handleFileChange","e","selectedFile","target","files","fileName","name","fileNameWithoutExt","substring","lastIndexOf","handleTextbookFileChange","handleSubmit","preventDefault","formData","FormData","append","id","headers","document","getElementById","value","_err$response5","_err$response5$data","handleTextbookSubmit","_err$response6","_err$response6$data","formatDate","dateString","date","Date","toLocaleDateString","year","month","day","hour","minute","className","children","onClick","onSubmit","onChange","placeholder","required","accept","disabled","length","map","textbook","isVectorized","is_indexed","paper","isParsed","some","q","paper_id","onClose","embedded"],"sources":["D:/AI/_Programs/CBSE/aqnamic/frontend/src/components/UploadPapers.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './UploadPapers.css';\nimport ParsedQuestionsView from './ParsedQuestionsView';\n\nconst UploadPapers = ({ user }) => {\n  // Question Papers State\n  const [title, setTitle] = useState('');\n  const [subject, setSubject] = useState('');\n  const [file, setFile] = useState(null);\n  const [uploadedPapers, setUploadedPapers] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState({ type: '', text: '' });\n\n  // Textbooks State\n  const [textbookTitle, setTextbookTitle] = useState('');\n  const [textbookSubject, setTextbookSubject] = useState('');\n  const [textbookAuthor, setTextbookAuthor] = useState('');\n  const [textbookFile, setTextbookFile] = useState(null);\n  const [uploadedTextbooks, setUploadedTextbooks] = useState([]);\n  const [textbookLoading, setTextbookLoading] = useState(false);\n  const [textbookMessage, setTextbookMessage] = useState({ type: '', text: '' });\n\n  // Question Parsing State\n  const [parsingPaper, setParsingPaper] = useState(null);\n  const [parsedQuestions, setParsedQuestions] = useState([]);\n  const [showParsedQuestions, setShowParsedQuestions] = useState(false);\n  const [parsingLoading, setParsingLoading] = useState(false);\n  const [parsingMessage, setParsingMessage] = useState({ type: '', text: '' });\n\n  // Tab State\n  const [activeTab, setActiveTab] = useState('textbooks');\n\n  useEffect(() => {\n    fetchUploadedPapers();\n    fetchUploadedTextbooks();\n    fetchParsedQuestions();\n  }, []);\n\n  const fetchUploadedPapers = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/uploaded-papers');\n      setUploadedPapers(response.data);\n    } catch (err) {\n      console.error('Error fetching papers:', err);\n    }\n  };\n\n  const fetchUploadedTextbooks = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/textbooks');\n      setUploadedTextbooks(response.data);\n    } catch (err) {\n      console.error('Error fetching textbooks:', err);\n    }\n  };\n\n  const fetchParsedQuestions = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/parsed-questions');\n      setParsedQuestions(response.data);\n    } catch (err) {\n      console.error('Error fetching parsed questions:', err);\n    }\n  };\n\n  const handleParseQuestions = async (paperId) => {\n    setParsingLoading(true);\n    setParsingMessage({ type: '', text: '' });\n    setParsingPaper(paperId);\n\n    try {\n      const response = await axios.post(`http://localhost:5000/api/parse-questions/${paperId}`);\n      \n      if (response.data.success) {\n        setParsingMessage({ \n          type: 'success', \n          text: `Successfully parsed ${response.data.total_questions} questions!` \n        });\n        fetchParsedQuestions();\n        setTimeout(() => setShowParsedQuestions(true), 1000);\n      }\n    } catch (err) {\n      setParsingMessage({ \n        type: 'error', \n        text: err.response?.data?.error || 'Parsing failed. Please try again.' \n      });\n    } finally {\n      setParsingLoading(false);\n      setParsingPaper(null);\n    }\n  };\n\n  const handleCleanDuplicates = async () => {\n    if (!window.confirm('Remove all duplicate questions from database?')) {\n      return;\n    }\n\n    setParsingLoading(true);\n    setParsingMessage({ type: '', text: '' });\n\n    try {\n      const response = await axios.post('http://localhost:5000/api/clean-duplicates');\n      \n      if (response.data.success) {\n        setParsingMessage({ \n          type: 'success', \n          text: response.data.message \n        });\n        fetchParsedQuestions();\n      }\n    } catch (err) {\n      setParsingMessage({ \n        type: 'error', \n        text: err.response?.data?.error || 'Cleanup failed.' \n      });\n    } finally {\n      setParsingLoading(false);\n    }\n  };\n\n  const handleDeletePaper = async (paperId, paperTitle) => {\n    if (!window.confirm(`Are you sure you want to delete \"${paperTitle}\"?\\n\\nThis will also delete all parsed questions associated with this paper.`)) {\n      return;\n    }\n\n    setLoading(true);\n    setMessage({ type: '', text: '' });\n\n    try {\n      const response = await axios.delete(`http://localhost:5000/api/delete-paper/${paperId}`);\n      \n      if (response.data.success) {\n        setMessage({ \n          type: 'success', \n          text: 'Paper deleted successfully!' \n        });\n        fetchUploadedPapers();\n        fetchParsedQuestions();\n      }\n    } catch (err) {\n      setMessage({ \n        type: 'error', \n        text: err.response?.data?.error || 'Delete failed. Please try again.' \n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleDeleteTextbook = async (textbookId, textbookTitle) => {\n    if (!window.confirm(`Are you sure you want to delete \"${textbookTitle}\"?`)) {\n      return;\n    }\n\n    setTextbookLoading(true);\n    setTextbookMessage({ type: '', text: '' });\n\n    try {\n      const response = await axios.delete(`http://localhost:5000/api/delete-textbook/${textbookId}`);\n      \n      if (response.data.success) {\n        setTextbookMessage({ \n          type: 'success', \n          text: 'Textbook deleted successfully!' \n        });\n        fetchUploadedTextbooks();\n      }\n    } catch (err) {\n      setTextbookMessage({ \n        type: 'error', \n        text: err.response?.data?.error || 'Delete failed. Please try again.' \n      });\n    } finally {\n      setTextbookLoading(false);\n    }\n  };\n\n  const handleFileChange = (e) => {\n    const selectedFile = e.target.files[0];\n    if (selectedFile) {\n      setFile(selectedFile);\n      \n      // Auto-populate title with filename (without extension)\n      const fileName = selectedFile.name;\n      const fileNameWithoutExt = fileName.substring(0, fileName.lastIndexOf('.')) || fileName;\n      \n      // Only set title if it's empty\n      if (!title) {\n        setTitle(fileNameWithoutExt);\n      }\n    }\n  };\n\n  const handleTextbookFileChange = (e) => {\n    const selectedFile = e.target.files[0];\n    if (selectedFile) {\n      setTextbookFile(selectedFile);\n      \n      // Auto-populate title with filename (without extension)\n      const fileName = selectedFile.name;\n      const fileNameWithoutExt = fileName.substring(0, fileName.lastIndexOf('.')) || fileName;\n      \n      // Only set title if it's empty\n      if (!textbookTitle) {\n        setTextbookTitle(fileNameWithoutExt);\n      }\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    if (!title || !subject || !file) {\n      setMessage({ type: 'error', text: 'Please fill all fields and select a file' });\n      return;\n    }\n\n    setLoading(true);\n    setMessage({ type: '', text: '' });\n\n    const formData = new FormData();\n    formData.append('file', file);\n    formData.append('title', title);\n    formData.append('subject', subject);\n    formData.append('user_id', user.id);\n\n    try {\n      const response = await axios.post('http://localhost:5000/api/upload-paper', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n\n      if (response.data.success) {\n        setMessage({ type: 'success', text: 'Paper uploaded successfully!' });\n        setTitle('');\n        setSubject('');\n        setFile(null);\n        document.getElementById('file-input').value = '';\n        fetchUploadedPapers();\n      }\n    } catch (err) {\n      setMessage({ \n        type: 'error', \n        text: err.response?.data?.error || 'Upload failed. Please try again.' \n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleTextbookSubmit = async (e) => {\n    e.preventDefault();\n    \n    if (!textbookTitle || !textbookSubject || !textbookFile) {\n      setTextbookMessage({ type: 'error', text: 'Please fill all required fields and select a file' });\n      return;\n    }\n\n    setTextbookLoading(true);\n    setTextbookMessage({ type: '', text: '' });\n\n    const formData = new FormData();\n    formData.append('file', textbookFile);\n    formData.append('title', textbookTitle);\n    formData.append('subject', textbookSubject);\n    formData.append('author', textbookAuthor);\n    formData.append('user_id', user.id);\n\n    try {\n      const response = await axios.post('http://localhost:5000/api/upload-textbook', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n\n      if (response.data.success) {\n        setTextbookMessage({ type: 'success', text: 'Textbook uploaded successfully!' });\n        setTextbookTitle('');\n        setTextbookSubject('');\n        setTextbookAuthor('');\n        setTextbookFile(null);\n        document.getElementById('textbook-file-input').value = '';\n        fetchUploadedTextbooks();\n      }\n    } catch (err) {\n      setTextbookMessage({ \n        type: 'error', \n        text: err.response?.data?.error || 'Upload failed. Please try again.' \n      });\n    } finally {\n      setTextbookLoading(false);\n    }\n  };\n\n  const formatDate = (dateString) => {\n    const date = new Date(dateString);\n    return date.toLocaleDateString('en-US', { \n      year: 'numeric', \n      month: 'short', \n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n\n  return (\n    <div className=\"upload-papers\">\n      <div className=\"upload-header\">\n        <h2>📤 Upload Resources</h2>\n        <p>Share textbooks, study materials, and past papers</p>\n      </div>\n\n      {/* Tabs */}\n      <div className=\"upload-tabs\">\n        <button \n          className={`tab-btn ${activeTab === 'textbooks' ? 'active' : ''}`}\n          onClick={() => setActiveTab('textbooks')}\n        >\n          📚 Textbooks\n        </button>\n        <button \n          className={`tab-btn ${activeTab === 'papers' ? 'active' : ''}`}\n          onClick={() => setActiveTab('papers')}\n        >\n          📝 Question Papers\n        </button>\n        <button \n          className={`tab-btn ${activeTab === 'all-questions' ? 'active' : ''}`}\n          onClick={() => setActiveTab('all-questions')}\n        >\n          📋 All Questions\n        </button>\n      </div>\n\n      {/* Textbook Upload Section */}\n      {activeTab === 'textbooks' && (\n      <div className=\"upload-section compact\">\n        <h3 className=\"section-title\">📚 Upload Textbooks</h3>\n        <div className=\"compact-form-container\">\n          <form onSubmit={handleTextbookSubmit} className=\"compact-form\">\n            <input\n              type=\"text\"\n              value={textbookTitle}\n              onChange={(e) => setTextbookTitle(e.target.value)}\n              placeholder=\"Title (auto-filled)\"\n              required\n            />\n            <select\n              value={textbookSubject}\n              onChange={(e) => setTextbookSubject(e.target.value)}\n              required\n            >\n              <option value=\"\">Subject</option>\n              <option value=\"Mathematics\">Mathematics</option>\n              <option value=\"Physics\">Physics</option>\n              <option value=\"Chemistry\">Chemistry</option>\n              <option value=\"Biology\">Biology</option>\n              <option value=\"English\">English</option>\n              <option value=\"Computer Science\">Computer Science</option>\n              <option value=\"Social Science\">Social Science</option>\n            </select>\n            <input\n              type=\"text\"\n              value={textbookAuthor}\n              onChange={(e) => setTextbookAuthor(e.target.value)}\n              placeholder=\"Author (optional)\"\n            />\n            <input\n              type=\"file\"\n              id=\"textbook-file-input\"\n              onChange={handleTextbookFileChange}\n              accept=\".pdf,.doc,.docx,.txt\"\n              required\n            />\n            <button type=\"submit\" className=\"compact-upload-btn\" disabled={textbookLoading}>\n              {textbookLoading ? '⏳' : '📚 Upload'}\n            </button>\n          </form>\n          {textbookMessage.text && (\n            <div className={`compact-message ${textbookMessage.type}`}>\n              {textbookMessage.text}\n            </div>\n          )}\n        </div>\n\n        {uploadedTextbooks.length > 0 && (\n          <div className=\"table-container\">\n            <table className=\"documents-table\">\n              <thead>\n                <tr>\n                  <th>Title</th>\n                  <th>Subject</th>\n                  <th>Vectorized</th>\n                  <th>Actions</th>\n                </tr>\n              </thead>\n              <tbody>\n                {uploadedTextbooks.map((textbook) => {\n                  const isVectorized = textbook.is_indexed === 1 || textbook.is_indexed === true;\n                  return (\n                    <tr key={textbook.id}>\n                      <td className=\"title-cell\">📚 {textbook.title}</td>\n                      <td><span className=\"subject-badge\">{textbook.subject}</span></td>\n                      <td>\n                        <span className={`parsed-badge ${isVectorized ? 'parsed-yes' : 'parsed-no'}`}>\n                          {isVectorized ? 'Yes' : 'No'}\n                        </span>\n                      </td>\n                      <td>\n                        <button \n                          className=\"table-delete-btn\"\n                          onClick={() => handleDeleteTextbook(textbook.id, textbook.title)}\n                          disabled={textbookLoading}\n                          title=\"Delete\"\n                        >\n                          🗑️\n                        </button>\n                      </td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n          </div>\n        )}\n      </div>\n      )}\n\n      {/* Question Papers Upload Section */}\n      {activeTab === 'papers' && (\n      <div className=\"upload-section compact\">\n        <div className=\"section-header-compact\">\n          <h3 className=\"section-title\">📝 Upload Question Papers</h3>\n          <div className=\"header-actions-compact\">\n            <button \n              className=\"compact-action-btn\"\n              onClick={handleCleanDuplicates}\n              disabled={parsingLoading}\n            >\n              🧹 Clean\n            </button>\n          </div>\n        </div>\n\n        <div className=\"compact-form-container\">\n          <form onSubmit={handleSubmit} className=\"compact-form\">\n            <input\n              type=\"text\"\n              value={title}\n              onChange={(e) => setTitle(e.target.value)}\n              placeholder=\"Paper Title (auto-filled)\"\n              required\n            />\n            <select\n              value={subject}\n              onChange={(e) => setSubject(e.target.value)}\n              required\n            >\n              <option value=\"\">Subject</option>\n              <option value=\"Mathematics\">Mathematics</option>\n              <option value=\"Physics\">Physics</option>\n              <option value=\"Chemistry\">Chemistry</option>\n              <option value=\"Biology\">Biology</option>\n              <option value=\"English\">English</option>\n              <option value=\"Computer Science\">Computer Science</option>\n              <option value=\"Social Science\">Social Science</option>\n            </select>\n            <input\n              type=\"file\"\n              id=\"file-input\"\n              onChange={handleFileChange}\n              accept=\".pdf,.doc,.docx,.txt\"\n              required\n            />\n            <button type=\"submit\" className=\"compact-upload-btn\" disabled={loading}>\n              {loading ? '⏳' : '📤 Upload'}\n            </button>\n          </form>\n          {message.text && (\n            <div className={`compact-message ${message.type}`}>\n              {message.text}\n            </div>\n          )}\n        </div>\n\n        {uploadedPapers.length > 0 && (\n          <div className=\"table-container\">\n            <table className=\"documents-table\">\n              <thead>\n                <tr>\n                  <th>Title</th>\n                  <th>Subject</th>\n                  <th>Parsed</th>\n                  <th>Actions</th>\n                </tr>\n              </thead>\n              <tbody>\n                {uploadedPapers.map((paper) => {\n                  const isParsed = parsedQuestions.some(q => q.paper_id === paper.id);\n                  return (\n                    <tr key={paper.id}>\n                      <td className=\"title-cell\">📄 {paper.title}</td>\n                      <td><span className=\"subject-badge\">{paper.subject}</span></td>\n                      <td>\n                        <span className={`parsed-badge ${isParsed ? 'parsed-yes' : 'parsed-no'}`}>\n                          {isParsed ? 'Yes' : 'No'}\n                        </span>\n                      </td>\n                      <td>\n                        <button \n                          className=\"table-action-btn parse\"\n                          onClick={() => handleParseQuestions(paper.id)}\n                          disabled={parsingPaper === paper.id}\n                          title=\"Parse Questions\"\n                        >\n                          {parsingPaper === paper.id ? '⏳' : '🔍'}\n                        </button>\n                        <button \n                          className=\"table-delete-btn\"\n                          onClick={() => handleDeletePaper(paper.id, paper.title)}\n                          disabled={loading}\n                          title=\"Delete\"\n                        >\n                          🗑️\n                        </button>\n                      </td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n            {parsingMessage.text && (\n              <div className={`compact-message ${parsingMessage.type}`}>\n                {parsingMessage.text}\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n      )}\n\n      {/* All Questions Tab */}\n      {activeTab === 'all-questions' && (\n        <div className=\"all-questions-section\">\n          <ParsedQuestionsView \n            onClose={null}\n            embedded={true}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default UploadPapers;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}