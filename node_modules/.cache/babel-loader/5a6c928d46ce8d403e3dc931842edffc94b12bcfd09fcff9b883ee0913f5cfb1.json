{"ast":null,"code":"var _jsxFileName = \"D:\\\\AI\\\\_Programs\\\\CBSE\\\\aqnamic\\\\frontend\\\\src\\\\components\\\\ChapterQuestions.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './ChapterQuestions.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChapterQuestions = () => {\n  _s();\n  const [papers, setPapers] = useState([]);\n  const [selectedPaper, setSelectedPaper] = useState(null);\n  const [chapters, setChapters] = useState([]);\n  const [selectedChapter, setSelectedChapter] = useState(null);\n  const [questions, setQuestions] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState({\n    type: '',\n    text: ''\n  });\n\n  // Predefined chapters for CBSE subjects\n  const defaultChapters = {\n    'Physics': ['Electricity', 'Magnetic Effects of Current', 'Light - Reflection and Refraction', 'Human Eye and Colourful World', 'Sources of Energy', 'Electricity and Magnetism'],\n    'Chemistry': ['Chemical Reactions and Equations', 'Acids, Bases and Salts', 'Metals and Non-metals', 'Carbon and its Compounds', 'Periodic Classification of Elements'],\n    'Biology': ['Life Processes', 'Control and Coordination', 'How do Organisms Reproduce', 'Heredity and Evolution', 'Our Environment'],\n    'Mathematics': ['Real Numbers', 'Polynomials', 'Pair of Linear Equations in Two Variables', 'Quadratic Equations', 'Arithmetic Progressions', 'Triangles', 'Coordinate Geometry', 'Introduction to Trigonometry', 'Some Applications of Trigonometry', 'Circles', 'Areas Related to Circles', 'Surface Areas and Volumes', 'Statistics', 'Probability']\n  };\n  useEffect(() => {\n    fetchPapers();\n  }, []);\n  const fetchPapers = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/uploaded-papers');\n      setPapers(response.data);\n    } catch (err) {\n      console.error('Error fetching papers:', err);\n      setMessage({\n        type: 'error',\n        text: 'Failed to load papers'\n      });\n    }\n  };\n  const handlePaperSelect = async paper => {\n    setSelectedPaper(paper);\n    setSelectedChapter(null);\n    setQuestions([]);\n\n    // Set chapters based on subject\n    const paperChapters = defaultChapters[paper.subject] || [];\n    setChapters(paperChapters);\n    setMessage({\n      type: 'info',\n      text: `Selected: ${paper.title}`\n    });\n  };\n  const handleChapterSelect = async chapter => {\n    setSelectedChapter(chapter);\n    setLoading(true);\n    setMessage({\n      type: '',\n      text: ''\n    });\n    try {\n      // Fetch all questions from the selected paper\n      const response = await axios.get(`http://localhost:5000/api/parsed-questions?paper_id=${selectedPaper.id}`);\n      const allQuestions = response.data;\n\n      // Filter questions by chapter using AI/keyword matching\n      const filteredQuestions = filterQuestionsByChapter(allQuestions, chapter);\n      setQuestions(filteredQuestions);\n      if (filteredQuestions.length === 0) {\n        setMessage({\n          type: 'warning',\n          text: `No questions found for chapter: ${chapter}`\n        });\n      } else {\n        setMessage({\n          type: 'success',\n          text: `Found ${filteredQuestions.length} questions for: ${chapter}`\n        });\n      }\n    } catch (err) {\n      console.error('Error fetching questions:', err);\n      setMessage({\n        type: 'error',\n        text: 'Failed to load questions'\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n  const filterQuestionsByChapter = (questions, chapter) => {\n    // Create keywords for each chapter\n    const chapterKeywords = {\n      'Electricity': ['current', 'voltage', 'resistance', 'ohm', 'circuit', 'electric', 'power', 'energy', 'joule', 'watt'],\n      'Magnetic Effects of Current': ['magnetic', 'magnet', 'field', 'electromagnet', 'solenoid', 'motor', 'generator', 'fleming'],\n      'Light - Reflection and Refraction': ['light', 'reflection', 'refraction', 'mirror', 'lens', 'focal', 'image', 'ray', 'concave', 'convex'],\n      'Human Eye and Colourful World': ['eye', 'vision', 'lens', 'retina', 'cornea', 'spectrum', 'dispersion', 'rainbow', 'prism'],\n      'Sources of Energy': ['energy', 'renewable', 'solar', 'wind', 'fossil', 'fuel', 'nuclear', 'biogas', 'hydro'],\n      'Chemical Reactions and Equations': ['reaction', 'equation', 'chemical', 'reactant', 'product', 'balance', 'oxidation', 'reduction'],\n      'Acids, Bases and Salts': ['acid', 'base', 'salt', 'ph', 'alkali', 'neutral', 'indicator', 'litmus'],\n      'Metals and Non-metals': ['metal', 'non-metal', 'metalloid', 'alloy', 'corrosion', 'reactivity', 'ore'],\n      'Carbon and its Compounds': ['carbon', 'organic', 'hydrocarbon', 'alkane', 'alkene', 'alcohol', 'acid', 'ester'],\n      'Life Processes': ['nutrition', 'respiration', 'transport', 'excretion', 'photosynthesis', 'digestion'],\n      'Control and Coordination': ['nervous', 'hormone', 'brain', 'neuron', 'reflex', 'endocrine', 'coordination'],\n      'How do Organisms Reproduce': ['reproduction', 'sexual', 'asexual', 'fertilization', 'gamete', 'zygote'],\n      'Heredity and Evolution': ['heredity', 'gene', 'chromosome', 'dna', 'evolution', 'darwin', 'variation', 'inheritance'],\n      'Our Environment': ['environment', 'ecosystem', 'biodegradable', 'pollution', 'ozone', 'food chain'],\n      'Real Numbers': ['real number', 'rational', 'irrational', 'prime', 'composite', 'hcf', 'lcm', 'euclid'],\n      'Polynomials': ['polynomial', 'degree', 'coefficient', 'zero', 'quadratic', 'cubic'],\n      'Pair of Linear Equations': ['linear equation', 'simultaneous', 'substitution', 'elimination', 'cross multiplication'],\n      'Quadratic Equations': ['quadratic', 'x²', 'x^2', 'discriminant', 'roots', 'factorization'],\n      'Arithmetic Progressions': ['ap', 'arithmetic progression', 'common difference', 'nth term', 'sum'],\n      'Triangles': ['triangle', 'similar', 'congruent', 'pythagoras', 'area', 'perimeter'],\n      'Coordinate Geometry': ['coordinate', 'distance', 'section', 'midpoint', 'slope', 'x-axis', 'y-axis'],\n      'Trigonometry': ['sin', 'cos', 'tan', 'trigonometry', 'angle', 'θ', 'theta'],\n      'Circles': ['circle', 'radius', 'diameter', 'chord', 'tangent', 'secant', 'arc'],\n      'Areas Related to Circles': ['area', 'circle', 'sector', 'segment', 'circumference', 'π', 'pi'],\n      'Surface Areas and Volumes': ['surface area', 'volume', 'cube', 'cuboid', 'cylinder', 'cone', 'sphere'],\n      'Statistics': ['mean', 'median', 'mode', 'data', 'frequency', 'cumulative'],\n      'Probability': ['probability', 'event', 'outcome', 'random', 'certain', 'impossible']\n    };\n    const keywords = chapterKeywords[chapter] || chapter.toLowerCase().split(' ');\n    return questions.filter(q => {\n      const questionText = q.question_text.toLowerCase();\n      // Check if any keyword appears in the question\n      return keywords.some(keyword => questionText.includes(keyword.toLowerCase()));\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chapter-questions\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chapter-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uD83D\\uDCDA Study by Chapters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Select a question paper and chapter to view related questions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), message.text && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `message ${message.type}`,\n      children: message.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chapter-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"paper-selection\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\uD83D\\uDCC4 Select Question Paper\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"papers-list\",\n          children: papers.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"no-data\",\n            children: \"No question papers uploaded yet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 15\n          }, this) : papers.map(paper => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `paper-card ${(selectedPaper === null || selectedPaper === void 0 ? void 0 : selectedPaper.id) === paper.id ? 'selected' : ''}`,\n            onClick: () => handlePaperSelect(paper),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"paper-icon\",\n              children: \"\\uD83D\\uDCDD\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"paper-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: paper.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"paper-subject\",\n                children: paper.subject\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"paper-date\",\n                children: new Date(paper.uploaded_at).toLocaleDateString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 19\n            }, this), (selectedPaper === null || selectedPaper === void 0 ? void 0 : selectedPaper.id) === paper.id && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"selected-badge\",\n              children: \"\\u2713\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 21\n            }, this)]\n          }, paper.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), selectedPaper && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chapter-selection\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\uD83D\\uDCD6 Select Chapter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chapters-list\",\n          children: chapters.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"no-data\",\n            children: \"No chapters available for this subject\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 17\n          }, this) : chapters.map((chapter, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `chapter-card ${selectedChapter === chapter ? 'selected' : ''}`,\n            onClick: () => handleChapterSelect(chapter),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chapter-number\",\n              children: index + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chapter-name\",\n              children: chapter\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 21\n            }, this), selectedChapter === chapter && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"selected-badge\",\n              children: \"\\u2713\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 23\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 11\n      }, this), selectedChapter && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"questions-display\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"\\u2753 Questions from: \", selectedChapter]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 13\n        }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"spinner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Loading questions...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 15\n        }, this) : questions.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-questions\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No questions found for this chapter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"hint\",\n            children: \"Try selecting a different chapter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"questions-list\",\n          children: questions.map((q, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"question-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"question-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"question-number\",\n                children: [\"Q\", q.question_number]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 23\n              }, this), q.question_type && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: `question-type ${q.question_type}`,\n                children: q.question_type.toUpperCase()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 25\n              }, this), q.marks && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"question-marks\",\n                children: [q.marks, \" marks\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 25\n              }, this), q.has_math && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"math-badge\",\n                children: \"\\uD83D\\uDCD0 Math\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 25\n              }, this), q.has_diagram && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"diagram-badge\",\n                children: \"\\uD83D\\uDCCA Diagram\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"question-text\",\n              children: q.question_text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 21\n            }, this), q.sub_parts && q.sub_parts.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"sub-parts\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Sub-parts:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 25\n              }, this), \" \", q.sub_parts.join(', ')]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 23\n            }, this)]\n          }, q.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 5\n  }, this);\n};\n_s(ChapterQuestions, \"Albc4hEI2hVp6hHpmiIk8sBP0yY=\");\n_c = ChapterQuestions;\nexport default ChapterQuestions;\nvar _c;\n$RefreshReg$(_c, \"ChapterQuestions\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","ChapterQuestions","_s","papers","setPapers","selectedPaper","setSelectedPaper","chapters","setChapters","selectedChapter","setSelectedChapter","questions","setQuestions","loading","setLoading","message","setMessage","type","text","defaultChapters","fetchPapers","response","get","data","err","console","error","handlePaperSelect","paper","paperChapters","subject","title","handleChapterSelect","chapter","id","allQuestions","filteredQuestions","filterQuestionsByChapter","length","chapterKeywords","keywords","toLowerCase","split","filter","q","questionText","question_text","some","keyword","includes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","Date","uploaded_at","toLocaleDateString","index","question_number","question_type","toUpperCase","marks","has_math","has_diagram","sub_parts","join","_c","$RefreshReg$"],"sources":["D:/AI/_Programs/CBSE/aqnamic/frontend/src/components/ChapterQuestions.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './ChapterQuestions.css';\n\nconst ChapterQuestions = () => {\n  const [papers, setPapers] = useState([]);\n  const [selectedPaper, setSelectedPaper] = useState(null);\n  const [chapters, setChapters] = useState([]);\n  const [selectedChapter, setSelectedChapter] = useState(null);\n  const [questions, setQuestions] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState({ type: '', text: '' });\n\n  // Predefined chapters for CBSE subjects\n  const defaultChapters = {\n    'Physics': [\n      'Electricity', 'Magnetic Effects of Current', 'Light - Reflection and Refraction',\n      'Human Eye and Colourful World', 'Sources of Energy', 'Electricity and Magnetism'\n    ],\n    'Chemistry': [\n      'Chemical Reactions and Equations', 'Acids, Bases and Salts', 'Metals and Non-metals',\n      'Carbon and its Compounds', 'Periodic Classification of Elements'\n    ],\n    'Biology': [\n      'Life Processes', 'Control and Coordination', 'How do Organisms Reproduce',\n      'Heredity and Evolution', 'Our Environment'\n    ],\n    'Mathematics': [\n      'Real Numbers', 'Polynomials', 'Pair of Linear Equations in Two Variables',\n      'Quadratic Equations', 'Arithmetic Progressions', 'Triangles', 'Coordinate Geometry',\n      'Introduction to Trigonometry', 'Some Applications of Trigonometry', 'Circles',\n      'Areas Related to Circles', 'Surface Areas and Volumes', 'Statistics', 'Probability'\n    ]\n  };\n\n  useEffect(() => {\n    fetchPapers();\n  }, []);\n\n  const fetchPapers = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/uploaded-papers');\n      setPapers(response.data);\n    } catch (err) {\n      console.error('Error fetching papers:', err);\n      setMessage({ type: 'error', text: 'Failed to load papers' });\n    }\n  };\n\n  const handlePaperSelect = async (paper) => {\n    setSelectedPaper(paper);\n    setSelectedChapter(null);\n    setQuestions([]);\n    \n    // Set chapters based on subject\n    const paperChapters = defaultChapters[paper.subject] || [];\n    setChapters(paperChapters);\n    \n    setMessage({ type: 'info', text: `Selected: ${paper.title}` });\n  };\n\n  const handleChapterSelect = async (chapter) => {\n    setSelectedChapter(chapter);\n    setLoading(true);\n    setMessage({ type: '', text: '' });\n\n    try {\n      // Fetch all questions from the selected paper\n      const response = await axios.get(\n        `http://localhost:5000/api/parsed-questions?paper_id=${selectedPaper.id}`\n      );\n      \n      const allQuestions = response.data;\n      \n      // Filter questions by chapter using AI/keyword matching\n      const filteredQuestions = filterQuestionsByChapter(allQuestions, chapter);\n      \n      setQuestions(filteredQuestions);\n      \n      if (filteredQuestions.length === 0) {\n        setMessage({ \n          type: 'warning', \n          text: `No questions found for chapter: ${chapter}` \n        });\n      } else {\n        setMessage({ \n          type: 'success', \n          text: `Found ${filteredQuestions.length} questions for: ${chapter}` \n        });\n      }\n    } catch (err) {\n      console.error('Error fetching questions:', err);\n      setMessage({ type: 'error', text: 'Failed to load questions' });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const filterQuestionsByChapter = (questions, chapter) => {\n    // Create keywords for each chapter\n    const chapterKeywords = {\n      'Electricity': ['current', 'voltage', 'resistance', 'ohm', 'circuit', 'electric', 'power', 'energy', 'joule', 'watt'],\n      'Magnetic Effects of Current': ['magnetic', 'magnet', 'field', 'electromagnet', 'solenoid', 'motor', 'generator', 'fleming'],\n      'Light - Reflection and Refraction': ['light', 'reflection', 'refraction', 'mirror', 'lens', 'focal', 'image', 'ray', 'concave', 'convex'],\n      'Human Eye and Colourful World': ['eye', 'vision', 'lens', 'retina', 'cornea', 'spectrum', 'dispersion', 'rainbow', 'prism'],\n      'Sources of Energy': ['energy', 'renewable', 'solar', 'wind', 'fossil', 'fuel', 'nuclear', 'biogas', 'hydro'],\n      'Chemical Reactions and Equations': ['reaction', 'equation', 'chemical', 'reactant', 'product', 'balance', 'oxidation', 'reduction'],\n      'Acids, Bases and Salts': ['acid', 'base', 'salt', 'ph', 'alkali', 'neutral', 'indicator', 'litmus'],\n      'Metals and Non-metals': ['metal', 'non-metal', 'metalloid', 'alloy', 'corrosion', 'reactivity', 'ore'],\n      'Carbon and its Compounds': ['carbon', 'organic', 'hydrocarbon', 'alkane', 'alkene', 'alcohol', 'acid', 'ester'],\n      'Life Processes': ['nutrition', 'respiration', 'transport', 'excretion', 'photosynthesis', 'digestion'],\n      'Control and Coordination': ['nervous', 'hormone', 'brain', 'neuron', 'reflex', 'endocrine', 'coordination'],\n      'How do Organisms Reproduce': ['reproduction', 'sexual', 'asexual', 'fertilization', 'gamete', 'zygote'],\n      'Heredity and Evolution': ['heredity', 'gene', 'chromosome', 'dna', 'evolution', 'darwin', 'variation', 'inheritance'],\n      'Our Environment': ['environment', 'ecosystem', 'biodegradable', 'pollution', 'ozone', 'food chain'],\n      'Real Numbers': ['real number', 'rational', 'irrational', 'prime', 'composite', 'hcf', 'lcm', 'euclid'],\n      'Polynomials': ['polynomial', 'degree', 'coefficient', 'zero', 'quadratic', 'cubic'],\n      'Pair of Linear Equations': ['linear equation', 'simultaneous', 'substitution', 'elimination', 'cross multiplication'],\n      'Quadratic Equations': ['quadratic', 'x²', 'x^2', 'discriminant', 'roots', 'factorization'],\n      'Arithmetic Progressions': ['ap', 'arithmetic progression', 'common difference', 'nth term', 'sum'],\n      'Triangles': ['triangle', 'similar', 'congruent', 'pythagoras', 'area', 'perimeter'],\n      'Coordinate Geometry': ['coordinate', 'distance', 'section', 'midpoint', 'slope', 'x-axis', 'y-axis'],\n      'Trigonometry': ['sin', 'cos', 'tan', 'trigonometry', 'angle', 'θ', 'theta'],\n      'Circles': ['circle', 'radius', 'diameter', 'chord', 'tangent', 'secant', 'arc'],\n      'Areas Related to Circles': ['area', 'circle', 'sector', 'segment', 'circumference', 'π', 'pi'],\n      'Surface Areas and Volumes': ['surface area', 'volume', 'cube', 'cuboid', 'cylinder', 'cone', 'sphere'],\n      'Statistics': ['mean', 'median', 'mode', 'data', 'frequency', 'cumulative'],\n      'Probability': ['probability', 'event', 'outcome', 'random', 'certain', 'impossible']\n    };\n\n    const keywords = chapterKeywords[chapter] || chapter.toLowerCase().split(' ');\n    \n    return questions.filter(q => {\n      const questionText = q.question_text.toLowerCase();\n      // Check if any keyword appears in the question\n      return keywords.some(keyword => questionText.includes(keyword.toLowerCase()));\n    });\n  };\n\n  return (\n    <div className=\"chapter-questions\">\n      <div className=\"chapter-header\">\n        <h2>📚 Study by Chapters</h2>\n        <p>Select a question paper and chapter to view related questions</p>\n      </div>\n\n      {message.text && (\n        <div className={`message ${message.type}`}>\n          {message.text}\n        </div>\n      )}\n\n      <div className=\"chapter-content\">\n        {/* Paper Selection */}\n        <div className=\"paper-selection\">\n          <h3>📄 Select Question Paper</h3>\n          <div className=\"papers-list\">\n            {papers.length === 0 ? (\n              <p className=\"no-data\">No question papers uploaded yet</p>\n            ) : (\n              papers.map(paper => (\n                <div\n                  key={paper.id}\n                  className={`paper-card ${selectedPaper?.id === paper.id ? 'selected' : ''}`}\n                  onClick={() => handlePaperSelect(paper)}\n                >\n                  <div className=\"paper-icon\">📝</div>\n                  <div className=\"paper-info\">\n                    <h4>{paper.title}</h4>\n                    <p className=\"paper-subject\">{paper.subject}</p>\n                    <p className=\"paper-date\">\n                      {new Date(paper.uploaded_at).toLocaleDateString()}\n                    </p>\n                  </div>\n                  {selectedPaper?.id === paper.id && (\n                    <div className=\"selected-badge\">✓</div>\n                  )}\n                </div>\n              ))\n            )}\n          </div>\n        </div>\n\n        {/* Chapter Selection */}\n        {selectedPaper && (\n          <div className=\"chapter-selection\">\n            <h3>📖 Select Chapter</h3>\n            <div className=\"chapters-list\">\n              {chapters.length === 0 ? (\n                <p className=\"no-data\">No chapters available for this subject</p>\n              ) : (\n                chapters.map((chapter, index) => (\n                  <div\n                    key={index}\n                    className={`chapter-card ${selectedChapter === chapter ? 'selected' : ''}`}\n                    onClick={() => handleChapterSelect(chapter)}\n                  >\n                    <div className=\"chapter-number\">{index + 1}</div>\n                    <div className=\"chapter-name\">{chapter}</div>\n                    {selectedChapter === chapter && (\n                      <div className=\"selected-badge\">✓</div>\n                    )}\n                  </div>\n                ))\n              )}\n            </div>\n          </div>\n        )}\n\n        {/* Questions Display */}\n        {selectedChapter && (\n          <div className=\"questions-display\">\n            <h3>❓ Questions from: {selectedChapter}</h3>\n            \n            {loading ? (\n              <div className=\"loading\">\n                <div className=\"spinner\"></div>\n                <p>Loading questions...</p>\n              </div>\n            ) : questions.length === 0 ? (\n              <div className=\"no-questions\">\n                <p>No questions found for this chapter</p>\n                <p className=\"hint\">Try selecting a different chapter</p>\n              </div>\n            ) : (\n              <div className=\"questions-list\">\n                {questions.map((q, index) => (\n                  <div key={q.id} className=\"question-item\">\n                    <div className=\"question-header\">\n                      <span className=\"question-number\">Q{q.question_number}</span>\n                      {q.question_type && (\n                        <span className={`question-type ${q.question_type}`}>\n                          {q.question_type.toUpperCase()}\n                        </span>\n                      )}\n                      {q.marks && (\n                        <span className=\"question-marks\">{q.marks} marks</span>\n                      )}\n                      {q.has_math && (\n                        <span className=\"math-badge\">📐 Math</span>\n                      )}\n                      {q.has_diagram && (\n                        <span className=\"diagram-badge\">📊 Diagram</span>\n                      )}\n                    </div>\n                    <div className=\"question-text\">\n                      {q.question_text}\n                    </div>\n                    {q.sub_parts && q.sub_parts.length > 0 && (\n                      <div className=\"sub-parts\">\n                        <strong>Sub-parts:</strong> {q.sub_parts.join(', ')}\n                      </div>\n                    )}\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ChapterQuestions;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}