{"ast":null,"code":"import _objectSpread from\"D:/AI/_Programs/CBSE/aqnamic/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from'react';import axios from'axios';import'./ChapterQuestions.css';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const ChapterQuestions=()=>{const[papers,setPapers]=useState([]);const[textbooks,setTextbooks]=useState([]);const[selectedPaper,setSelectedPaper]=useState(null);const[selectedTextbook,setSelectedTextbook]=useState(null);const[chapters,setChapters]=useState([]);const[chapterStats,setChapterStats]=useState([]);const[selectedChapter,setSelectedChapter]=useState(null);const[questions,setQuestions]=useState([]);const[loading,setLoading]=useState(false);const[message,setMessage]=useState({type:'',text:''});const[showTextbookModal,setShowTextbookModal]=useState(false);const[textbookPageToShow,setTextbookPageToShow]=useState(null);const[currentPage,setCurrentPage]=useState(1);const[pdfLoading,setPdfLoading]=useState(false);const[semanticSearchResults,setSemanticSearchResults]=useState(null);const[isSearching,setIsSearching]=useState(false);const[selectedReasoning,setSelectedReasoning]=useState(null);const[selectedSolution,setSelectedSolution]=useState(null);const[solvingQuestion,setSolvingQuestion]=useState(false);const[selectedDiagram,setSelectedDiagram]=useState(null);// Predefined textbooks with chapters and page numbers\nconst defaultTextbooks={'Physics':[{name:'NCERT Physics Class 10',pdfUrl:'https://ncert.nic.in/textbook/pdf/keph101.pdf',externalUrl:'https://ncert.nic.in/textbook.php?keph1=0-8',imageBasePath:'/textbooks/physics-class10/pages/',chapters:[{name:'Electricity',pages:'1-20'},{name:'Magnetic Effects of Current',pages:'21-40'},{name:'Light - Reflection and Refraction',pages:'41-65'},{name:'Human Eye and Colourful World',pages:'66-85'},{name:'Sources of Energy',pages:'86-105'}]}],'Chemistry':[{name:'NCERT Chemistry Class 10',pdfUrl:'https://ncert.nic.in/textbook/pdf/kesc101.pdf',externalUrl:'https://ncert.nic.in/textbook.php?kesc1=0-8',imageBasePath:'/textbooks/chemistry-class10/pages/',chapters:[{name:'Chemical Reactions and Equations',pages:'1-18'},{name:'Acids, Bases and Salts',pages:'19-35'},{name:'Metals and Non-metals',pages:'36-55'},{name:'Carbon and its Compounds',pages:'56-80'},{name:'Periodic Classification of Elements',pages:'81-95'}]}],'Biology':[{name:'NCERT Biology Class 10',pdfUrl:'https://ncert.nic.in/textbook/pdf/kebo101.pdf',externalUrl:'https://ncert.nic.in/textbook.php?kebo1=0-8',imageBasePath:'/textbooks/biology-class10/pages/',chapters:[{name:'Life Processes',pages:'1-25'},{name:'Control and Coordination',pages:'26-45'},{name:'How do Organisms Reproduce',pages:'46-70'},{name:'Heredity and Evolution',pages:'71-90'},{name:'Our Environment',pages:'91-110'}]}],'Mathematics':[{name:'NCERT Mathematics Class 10',pdfUrl:'https://ncert.nic.in/textbook/pdf/kemh101.pdf',externalUrl:'https://ncert.nic.in/textbook.php?kemh1=0-16',imageBasePath:'/textbooks/mathematics-class10/pages/',chapters:[{name:'Real Numbers',pages:'1-15'},{name:'Polynomials',pages:'16-30'},{name:'Pair of Linear Equations in Two Variables',pages:'31-50'},{name:'Quadratic Equations',pages:'51-70'},{name:'Arithmetic Progressions',pages:'71-85'},{name:'Triangles',pages:'86-110'},{name:'Coordinate Geometry',pages:'111-130'},{name:'Introduction to Trigonometry',pages:'131-150'},{name:'Some Applications of Trigonometry',pages:'151-165'},{name:'Circles',pages:'166-185'},{name:'Areas Related to Circles',pages:'186-200'},{name:'Surface Areas and Volumes',pages:'201-225'},{name:'Statistics',pages:'226-245'},{name:'Probability',pages:'246-260'}]}]};useEffect(()=>{fetchPapers();fetchAllTextbooks();},[]);useEffect(()=>{if(selectedPaper&&selectedTextbook){calculateChapterStats();}},[selectedPaper,selectedTextbook]);const fetchPapers=async()=>{try{const response=await axios.get('http://localhost:5000/api/uploaded-papers');setPapers(response.data);}catch(err){console.error('Error fetching papers:',err);setMessage({type:'error',text:'Failed to load papers'});}};const fetchAllTextbooks=async()=>{try{// Fetch all uploaded textbooks\nconst response=await axios.get('http://localhost:5000/api/textbooks');const uploadedTextbooks=response.data||[];// Use uploaded textbooks directly, with default chapter structure as fallback\nconst textbooksToDisplay=uploadedTextbooks.map(uploaded=>{var _defaultTextbooks$upl;// Get default chapters for this subject if available\nconst defaultForSubject=(_defaultTextbooks$upl=defaultTextbooks[uploaded.subject])===null||_defaultTextbooks$upl===void 0?void 0:_defaultTextbooks$upl[0];return{name:uploaded.title,// Use actual uploaded title\nsubject:uploaded.subject,uploadedFile:uploaded.file_path,uploadedId:uploaded.id,uploadedTitle:uploaded.title,chapters:(defaultForSubject===null||defaultForSubject===void 0?void 0:defaultForSubject.chapters)||[],// Use default chapters as template\npdfUrl:'',externalUrl:'',imageBasePath:''};});setTextbooks(textbooksToDisplay);// If no textbooks uploaded, show message\nif(textbooksToDisplay.length===0){setMessage({type:'info',text:'No textbooks uploaded yet. Please upload a textbook first.'});}}catch(err){console.error('Error fetching textbooks:',err);setMessage({type:'error',text:'Failed to load textbooks. Please try again.'});setTextbooks([]);}};const handlePaperSelect=paper=>{setSelectedPaper(paper);setSelectedTextbook(null);setSelectedChapter(null);setQuestions([]);setChapters([]);setChapterStats([]);setSemanticSearchResults(null);// Clear previous search results\n// Don't reload textbooks - they're already loaded with correct names\n// Just clear the selection and let user select from existing list\n};const handleTextbookSelect=textbook=>{setSelectedTextbook(textbook);setSelectedChapter(null);setQuestions([]);setChapters(textbook.chapters);setSemanticSearchResults(null);// Clear previous search results when textbook changes\n// Log textbook info for debugging\nconsole.log('Selected textbook:',textbook.name);console.log('Has uploaded file:',!!textbook.uploadedId);// Don't show selection message - table selection is clear enough\n};const calculateChapterStats=async()=>{if(!selectedPaper||!selectedTextbook)return;try{// Fetch all questions from the selected paper\nconst response=await axios.get(\"http://localhost:5000/api/parsed-questions?paper_id=\".concat(selectedPaper.id));const allQuestions=response.data;// Calculate question count for each chapter\nconst stats=selectedTextbook.chapters.map(chapter=>{const chapterQuestions=filterQuestionsByChapter(allQuestions,chapter.name);return _objectSpread(_objectSpread({},chapter),{},{questionCount:chapterQuestions.length});});setChapterStats(stats);}catch(err){console.error('Error calculating chapter stats:',err);}};const handleClearResults=()=>{setSemanticSearchResults(null);setQuestions([]);setSelectedChapter(null);setChapterStats([]);// Clear the chapter stats table\nsetMessage({type:'info',text:'Search results cleared. Ready for new search.'});};const handleIndexAndMatch=async()=>{// Unified workflow: Index textbook (if needed) + Run AI Search\nif(!selectedPaper||!selectedTextbook){setMessage({type:'warning',text:'Please select both a question paper and textbook first'});return;}if(!selectedTextbook.uploadedId){setMessage({type:'warning',text:'Please upload the textbook first'});return;}setIsSearching(true);try{// Step 1: Check if textbook is already indexed by trying to run search\nconsole.log('🚀 Starting Index & Match workflow...');setMessage({type:'info',text:'🔍 Checking if textbook is indexed...'});let needsIndexing=false;// Try to get chapters to see if indexed\ntry{await axios.get(\"http://localhost:5000/api/textbook-chapters/\".concat(selectedTextbook.uploadedId));console.log('✓ Textbook already indexed');setMessage({type:'info',text:'✓ Textbook already indexed. Running AI search...'});}catch(err){var _err$response,_err$response2,_err$response2$data,_err$response2$data$e;if(((_err$response=err.response)===null||_err$response===void 0?void 0:_err$response.status)===404||(_err$response2=err.response)!==null&&_err$response2!==void 0&&(_err$response2$data=_err$response2.data)!==null&&_err$response2$data!==void 0&&(_err$response2$data$e=_err$response2$data.error)!==null&&_err$response2$data$e!==void 0&&_err$response2$data$e.includes('No vector index')){needsIndexing=true;console.log('⚠ Textbook not indexed, will index now');}else{throw err;}}// Step 2: Index if needed\nif(needsIndexing){setMessage({type:'info',text:'📚 Indexing textbook... This may take a few minutes.'});const indexResponse=await axios.post(\"http://localhost:5000/api/index-textbook/\".concat(selectedTextbook.uploadedId));if(!indexResponse.data.success){throw new Error(indexResponse.data.error||'Indexing failed');}console.log(\"\\u2713 Indexed \".concat(indexResponse.data.chapters_count,\" chapters\"));setMessage({type:'info',text:\"\\u2705 Indexed \".concat(indexResponse.data.chapters_count,\" chapters. Now matching questions...\")});}// Step 3: Run AI Search\nsetMessage({type:'info',text:'🤖 Running AI Search with LLM analysis...'});// Fetch all questions from the selected paper\nconst questionsResponse=await axios.get(\"http://localhost:5000/api/parsed-questions?paper_id=\".concat(selectedPaper.id));const allQuestions=questionsResponse.data;// Use semantic search to map questions to chapters\nconst mappingResponse=await axios.post('http://localhost:5000/api/map-questions-to-chapters',{questions:allQuestions,textbook_id:selectedTextbook.uploadedId});if(mappingResponse.data.success){const mappedQuestions=mappingResponse.data.mapped_questions;// Group questions by chapter\nconst chapterGroups={};const unmatchedQuestions=[];mappedQuestions.forEach(q=>{if(q.chapters&&q.chapters.length>0){const topChapter=q.chapters[0];const chapterKey=topChapter.chapter_title;if(!chapterGroups[chapterKey]){chapterGroups[chapterKey]={chapter:topChapter,questions:[]};}chapterGroups[chapterKey].questions.push(q);}else{unmatchedQuestions.push(q);}});// Add unmatched questions if any\nif(unmatchedQuestions.length>0){chapterGroups['Unmatched Questions']={chapter:{chapter_number:0,chapter_title:'Unmatched Questions',page_start:'N/A',page_end:'N/A',similarity_score:0},questions:unmatchedQuestions};}const totalQuestions=Object.values(chapterGroups).reduce((sum,data)=>sum+data.questions.length,0);// Clear old chapter stats\nsetChapterStats([]);setSemanticSearchResults(chapterGroups);setMessage({type:'success',text:\"\\uD83C\\uDF89 Complete! Found \".concat(Object.keys(chapterGroups).length,\" chapters with \").concat(totalQuestions,\" questions (\").concat(unmatchedQuestions.length,\" unmatched). Click a chapter below.\")});// Save results to database\nawait saveSearchResults(chapterGroups);}else{throw new Error('AI search failed');}}catch(err){var _err$response3,_err$response3$data;console.error('Error in Index & Match workflow:',err);const errorMsg=((_err$response3=err.response)===null||_err$response3===void 0?void 0:(_err$response3$data=_err$response3.data)===null||_err$response3$data===void 0?void 0:_err$response3$data.error)||err.message;setMessage({type:'error',text:\"Failed: \".concat(errorMsg)});}finally{setIsSearching(false);}};const handleIndexTextbook=async()=>{// Legacy function - kept for backward compatibility\nif(!selectedTextbook||!selectedTextbook.uploadedId){setMessage({type:'warning',text:'Please select a textbook first'});return;}setIsSearching(true);setMessage({type:'info',text:'📚 Indexing textbook... This may take a few minutes.'});try{const response=await axios.post(\"http://localhost:5000/api/index-textbook/\".concat(selectedTextbook.uploadedId));if(response.data.success){setMessage({type:'success',text:\"\\u2705 Textbook indexed successfully! \".concat(response.data.chapters_count,\" chapters indexed. You can now run AI semantic search.\")});}else{throw new Error(response.data.error||'Indexing failed');}}catch(err){var _err$response4,_err$response4$data;console.error('Error indexing textbook:',err);setMessage({type:'error',text:\"Failed to index textbook: \".concat(((_err$response4=err.response)===null||_err$response4===void 0?void 0:(_err$response4$data=_err$response4.data)===null||_err$response4$data===void 0?void 0:_err$response4$data.error)||err.message)});}finally{setIsSearching(false);}};const handleRunSemanticSearch=async()=>{if(!selectedPaper||!selectedTextbook){setMessage({type:'warning',text:'Please select both a question paper and textbook first'});return;}if(!selectedTextbook.uploadedId){setMessage({type:'warning',text:'Please upload the textbook to use AI semantic search'});return;}setIsSearching(true);setMessage({type:'info',text:'🤖 Running AI Search with LLM analysis...'});try{// Fetch all questions from the selected paper\nconst response=await axios.get(\"http://localhost:5000/api/parsed-questions?paper_id=\".concat(selectedPaper.id));const allQuestions=response.data;// Use semantic search to map questions to chapters\nconst mappingResponse=await axios.post('http://localhost:5000/api/map-questions-to-chapters',{questions:allQuestions,textbook_id:selectedTextbook.uploadedId});if(mappingResponse.data.success){const mappedQuestions=mappingResponse.data.mapped_questions;// Group questions by chapter\nconst chapterGroups={};const unmatchedQuestions=[];mappedQuestions.forEach(q=>{if(q.chapters&&q.chapters.length>0){const topChapter=q.chapters[0];// Use best match\nconst chapterKey=topChapter.chapter_title;if(!chapterGroups[chapterKey]){chapterGroups[chapterKey]={chapter:topChapter,questions:[]};}chapterGroups[chapterKey].questions.push(q);}else{// No chapter match found\nunmatchedQuestions.push(q);}});// Add unmatched questions as a separate group if any exist\nif(unmatchedQuestions.length>0){chapterGroups['Unmatched Questions']={chapter:{chapter_number:0,chapter_title:'Unmatched Questions',page_start:'N/A',page_end:'N/A',similarity_score:0},questions:unmatchedQuestions};}const totalQuestions=Object.values(chapterGroups).reduce((sum,data)=>sum+data.questions.length,0);console.log('Chapter groups created:',Object.keys(chapterGroups));console.log('Full chapter groups:',chapterGroups);// Clear old chapter stats to show only AI results\nsetChapterStats([]);setSemanticSearchResults(chapterGroups);setMessage({type:'success',text:\"\\uD83E\\uDD16 AI Search Complete! Found \".concat(Object.keys(chapterGroups).length,\" chapters with \").concat(totalQuestions,\" questions (\").concat(unmatchedQuestions.length,\" unmatched). Click on a chapter below to view questions.\")});// Save results to database\nawait saveSearchResults(chapterGroups);}else{throw new Error('Semantic search failed');}}catch(err){var _err$response5,_err$response5$data;console.error('Error in semantic search:',err);const errorMsg=((_err$response5=err.response)===null||_err$response5===void 0?void 0:(_err$response5$data=_err$response5.data)===null||_err$response5$data===void 0?void 0:_err$response5$data.error)||err.message;// Check if it's an indexing issue\nif(errorMsg.includes('No vector index found')||errorMsg.includes('index')){setMessage({type:'error',text:'⚠️ Textbook not indexed. Please click \"Index Textbook\" button first.'});}else{setMessage({type:'error',text:\"AI semantic search failed: \".concat(errorMsg)});}}finally{setIsSearching(false);}};const saveSearchResults=async chapterGroups=>{try{console.log('💾 Saving search results to database...');console.log('  Paper ID:',selectedPaper.id);console.log('  Textbook ID:',selectedTextbook.uploadedId);console.log('  Chapters:',Object.keys(chapterGroups).length);const response=await axios.post('http://localhost:5000/api/save-ai-search-results',{paper_id:selectedPaper.id,textbook_id:selectedTextbook.uploadedId,search_results:chapterGroups});console.log('✓ Search results saved to database:',response.data);}catch(error){var _error$response;console.error('❌ Failed to save search results:',error);console.error('  Error details:',(_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.data);// Don't show error to user - this is a background operation\n}};const handleLoadLastMatch=async()=>{if(!selectedPaper||!selectedTextbook||!selectedTextbook.uploadedId){setMessage({type:'warning',text:'Please select both a question paper and textbook first'});return;}setIsSearching(true);setMessage({type:'info',text:'📋 Loading last AI search results...'});console.log('📋 Loading last match...');console.log('  Paper ID:',selectedPaper.id);console.log('  Textbook ID:',selectedTextbook.uploadedId);try{const response=await axios.get(\"http://localhost:5000/api/get-last-ai-search?paper_id=\".concat(selectedPaper.id,\"&textbook_id=\").concat(selectedTextbook.uploadedId));console.log('  Response:',response.data);if(response.data.success){const{search_results,total_chapters,total_questions,unmatched_count,created_at}=response.data;// Clear old chapter stats\nsetChapterStats([]);setSemanticSearchResults(search_results);// Format the date\nconst date=new Date(created_at);const timeAgo=getTimeAgo(date);setMessage({type:'success',text:\"\\uD83D\\uDCCB Loaded previous results (\".concat(timeAgo,\"): \").concat(total_chapters,\" chapters with \").concat(total_questions,\" questions (\").concat(unmatched_count,\" unmatched)\")});}}catch(err){var _err$response6;console.error('Error loading last match:',err);if(((_err$response6=err.response)===null||_err$response6===void 0?void 0:_err$response6.status)===404){// Clear any existing results since no match found for this combination\nsetSemanticSearchResults(null);setChapterStats([]);setMessage({type:'info',text:\"No previous results found for \\\"\".concat(selectedPaper.title,\"\\\" with \\\"\").concat(selectedTextbook.name,\"\\\". Please run \\\"Index & Match Questions\\\" first.\")});}else{var _err$response7,_err$response7$data;setMessage({type:'error',text:\"Failed to load previous results: \".concat(((_err$response7=err.response)===null||_err$response7===void 0?void 0:(_err$response7$data=_err$response7.data)===null||_err$response7$data===void 0?void 0:_err$response7$data.error)||err.message)});}}finally{setIsSearching(false);}};const getTimeAgo=date=>{const seconds=Math.floor((new Date()-date)/1000);if(seconds<60)return'just now';if(seconds<3600)return\"\".concat(Math.floor(seconds/60),\" minutes ago\");if(seconds<86400)return\"\".concat(Math.floor(seconds/3600),\" hours ago\");if(seconds<604800)return\"\".concat(Math.floor(seconds/86400),\" days ago\");return date.toLocaleDateString();};const handleChapterSelect=chapterData=>{console.log('Selected chapter:',chapterData);console.log('Available chapters in semanticSearchResults:',semanticSearchResults?Object.keys(semanticSearchResults):'None');setSelectedChapter(chapterData);if(semanticSearchResults&&semanticSearchResults[chapterData.name]){// Use semantic search results\nconst chapterQuestions=semanticSearchResults[chapterData.name].questions;const chapterInfo=semanticSearchResults[chapterData.name].chapter;console.log('Found chapter questions:',chapterQuestions.length);console.log('Chapter info:',chapterInfo);setQuestions(chapterQuestions);setMessage({type:'success',text:\"Showing \".concat(chapterQuestions.length,\" questions for: \").concat(chapterData.name,\" (AI matched)\")});}else{console.warn('Chapter not found in semantic search results:',chapterData.name);setMessage({type:'info',text:'Run AI Search to find questions for this chapter'});setQuestions([]);}};const handleSolveQuestion=async question=>{setSolvingQuestion(true);try{const chapterContext=question.chapters&&question.chapters.length>0?question.chapters[0].chapter_title:selectedChapter===null||selectedChapter===void 0?void 0:selectedChapter.name;const response=await axios.post('http://localhost:5000/api/solve-question',{question_text:question.question_text,question_type:question.question_type,subject:selectedPaper===null||selectedPaper===void 0?void 0:selectedPaper.subject,chapter_context:chapterContext});if(response.data.success){setSelectedSolution({questionNumber:question.question_number,questionText:question.question_text,questionType:question.question_type,solution:response.data.solution,parsedSolution:response.data.parsed_solution});// Save to Question Bank\ntry{await axios.post('http://localhost:5000/api/save-solved-question',{question_text:question.question_text,solution:response.data.solution,source:'answer_chapterwise',paper_id:selectedPaper===null||selectedPaper===void 0?void 0:selectedPaper.id,textbook_id:(selectedTextbook===null||selectedTextbook===void 0?void 0:selectedTextbook.uploadedId)||(selectedTextbook===null||selectedTextbook===void 0?void 0:selectedTextbook.id),chapter_name:chapterContext,timestamp:new Date().toISOString()});console.log('✅ Question saved to Question Bank');}catch(saveErr){console.error('Failed to save to Question Bank:',saveErr);// Don't show error to user, just log it\n}}else{alert('Failed to solve question: '+(response.data.error||'Unknown error'));}}catch(error){var _error$response2,_error$response2$data;console.error('Error solving question:',error);alert('Error solving question: '+(((_error$response2=error.response)===null||_error$response2===void 0?void 0:(_error$response2$data=_error$response2.data)===null||_error$response2$data===void 0?void 0:_error$response2$data.error)||error.message));}finally{setSolvingQuestion(false);}};const estimateQuestionPageNumber=(questionText,chapterData)=>{// Estimate specific page range within chapter based on question content\nif(!chapterData||!chapterData.pages){return'N/A';// Return default if no page data\n}const{pages}=chapterData;const[startPage,endPage]=pages.split('-').map(p=>parseInt(p.trim()));const totalPages=endPage-startPage+1;// Define sub-topics with their relative position in chapter (0-1)\nconst subTopicPositions={// Electricity sub-topics\n'electric current':0.1,'potential difference':0.2,'ohm law':0.3,'resistance':0.3,'series circuit':0.5,'parallel circuit':0.6,'heating effect':0.7,'electric power':0.8,'joule law':0.9,// Magnetic Effects\n'magnetic field':0.1,'right hand rule':0.2,'electromagnet':0.3,'solenoid':0.4,'force on conductor':0.5,'electric motor':0.6,'electromagnetic induction':0.7,'generator':0.8,'fleming':0.8,// Light - Reflection and Refraction\n'law of reflection':0.1,'plane mirror':0.15,'spherical mirror':0.2,'concave mirror':0.3,'convex mirror':0.4,'mirror formula':0.45,'refraction':0.5,'refractive index':0.55,'snell law':0.6,'lens':0.65,'concave lens':0.7,'convex lens':0.75,'lens formula':0.8,'power of lens':0.9,// Quadratic Equations\n'standard form':0.1,'factorization':0.2,'completing square':0.4,'quadratic formula':0.6,'discriminant':0.7,'nature of roots':0.8,'word problem':0.9,// Triangles\n'similar triangle':0.2,'basic proportionality':0.3,'criteria for similarity':0.4,'area of similar':0.5,'pythagoras theorem':0.6,'converse of pythagoras':0.7,'triangle inequality':0.8,// Coordinate Geometry\n'distance formula':0.2,'section formula':0.4,'midpoint':0.5,'area of triangle':0.6,'collinear':0.7,'slope':0.8,// Trigonometry\n'trigonometric ratio':0.1,'sine':0.2,'cosine':0.3,'tangent':0.4,'complementary angle':0.5,'trigonometric identity':0.6,'angle of elevation':0.7,'angle of depression':0.8,'height and distance':0.9,// Statistics\n'mean':0.2,'median':0.4,'mode':0.6,'cumulative frequency':0.7,'ogive':0.8,// Probability\n'theoretical probability':0.3,'experimental probability':0.5,'sample space':0.6,'mutually exclusive':0.8,// Chemistry - Acids, Bases and Salts\n'acid':0.1,'base':0.2,'indicator':0.3,'ph scale':0.4,'neutralization':0.5,'salt':0.6,'water of crystallization':0.8,// Biology - Life Processes\n'nutrition':0.1,'autotrophic':0.15,'heterotrophic':0.2,'photosynthesis':0.25,'digestion':0.3,'respiration':0.5,'aerobic':0.55,'anaerobic':0.6,'transportation':0.7,'excretion':0.85};const lowerText=questionText.toLowerCase();let estimatedPosition=0.5;// Default to middle\nlet matchFound=false;// Find the most specific sub-topic match\nfor(const[subTopic,position]of Object.entries(subTopicPositions)){if(lowerText.includes(subTopic)){estimatedPosition=position;matchFound=true;break;// Use first match (most specific)\n}}// Calculate estimated page range (±2 pages from estimated position)\nconst estimatedPage=Math.round(startPage+totalPages*estimatedPosition);const rangeStart=Math.max(startPage,estimatedPage-2);const rangeEnd=Math.min(endPage,estimatedPage+2);return matchFound?\"\".concat(rangeStart,\"-\").concat(rangeEnd):pages;};const handlePageClick=pageRange=>{const[startPage,endPage]=pageRange.split('-').map(p=>parseInt(p.trim()));setCurrentPage(startPage);setTextbookPageToShow({textbook:selectedTextbook,chapter:selectedChapter.name,pageRange:pageRange,startPage:startPage,endPage:endPage||startPage});setShowTextbookModal(true);};const handleNextPage=()=>{if(currentPage<textbookPageToShow.endPage){const nextPage=currentPage+1;console.log('Next page:',nextPage);setPdfLoading(true);setCurrentPage(nextPage);setTimeout(()=>setPdfLoading(false),1000);}};const handlePrevPage=()=>{if(currentPage>textbookPageToShow.startPage){const prevPage=currentPage-1;console.log('Previous page:',prevPage);setPdfLoading(true);setCurrentPage(prevPage);setTimeout(()=>setPdfLoading(false),1000);}};const handleCloseModal=()=>{setShowTextbookModal(false);setTextbookPageToShow(null);setCurrentPage(1);};const filterQuestionsByChapter=(questions,chapter)=>{// Enhanced keyword matching with scoring system for more focused results\nconst chapterKeywords={'Electricity':{primary:['current','voltage','resistance','ohm','circuit','electric power','electrical energy'],secondary:['joule','watt','ampere','volt','resistor','conductor','insulator']},'Magnetic Effects of Current':{primary:['magnetic field','electromagnet','solenoid','motor','generator','fleming'],secondary:['magnet','electromagnetic induction','armature','commutator']},'Light - Reflection and Refraction':{primary:['reflection','refraction','mirror','lens','focal length','image formation'],secondary:['concave','convex','ray diagram','optical','refractive index']},'Human Eye and Colourful World':{primary:['eye','retina','cornea','spectrum','dispersion','rainbow','prism'],secondary:['vision','myopia','hypermetropia','presbyopia','cataract']},'Sources of Energy':{primary:['renewable energy','solar energy','wind energy','fossil fuel','nuclear energy'],secondary:['biogas','hydroelectric','geothermal','tidal energy']},'Chemical Reactions and Equations':{primary:['chemical reaction','chemical equation','reactant','product','balanced equation'],secondary:['oxidation','reduction','decomposition','combination','displacement']},'Acids, Bases and Salts':{primary:['acid','base','salt','ph scale','neutralization'],secondary:['alkali','indicator','litmus','acidic','basic']},'Metals and Non-metals':{primary:['metal','non-metal','metalloid','reactivity series','corrosion'],secondary:['alloy','ore','extraction','metallic','ionic bond']},'Carbon and its Compounds':{primary:['carbon compound','organic compound','hydrocarbon','functional group'],secondary:['alkane','alkene','alkyne','alcohol','carboxylic acid','ester']},'Life Processes':{primary:['nutrition','respiration','transportation','excretion','photosynthesis'],secondary:['digestion','cellular respiration','transpiration','kidney']},'Control and Coordination':{primary:['nervous system','hormone','endocrine','reflex action','neuron'],secondary:['brain','spinal cord','synapse','receptor','effector']},'How do Organisms Reproduce':{primary:['reproduction','sexual reproduction','asexual reproduction','fertilization'],secondary:['gamete','zygote','fission','budding','vegetative propagation']},'Heredity and Evolution':{primary:['heredity','inheritance','gene','chromosome','evolution','natural selection'],secondary:['dna','darwin','variation','speciation','fossil']},'Our Environment':{primary:['ecosystem','food chain','food web','biodegradable','ozone layer'],secondary:['environment','pollution','greenhouse effect','decomposer']},'Real Numbers':{primary:['real number','rational number','irrational number','euclid','hcf','lcm'],secondary:['prime','composite','fundamental theorem']},'Polynomials':{primary:['polynomial','degree of polynomial','zero of polynomial','coefficient'],secondary:['quadratic polynomial','cubic polynomial','factorization']},'Pair of Linear Equations in Two Variables':{primary:['linear equation','simultaneous equation','substitution method','elimination method'],secondary:['cross multiplication','graphical method','consistent','inconsistent']},'Quadratic Equations':{primary:['quadratic equation','discriminant','roots of equation','quadratic formula'],secondary:['x²','x^2','factorization','completing square']},'Arithmetic Progressions':{primary:['arithmetic progression','common difference','nth term','sum of ap'],secondary:['ap','arithmetic sequence','series']},'Triangles':{primary:['similar triangle','congruent triangle','pythagoras theorem','triangle theorem'],secondary:['area of triangle','perimeter','altitude','median']},'Coordinate Geometry':{primary:['coordinate','distance formula','section formula','midpoint formula'],secondary:['slope','x-axis','y-axis','cartesian plane']},'Introduction to Trigonometry':{primary:['trigonometry','trigonometric ratio','sine','cosine','tangent'],secondary:['sin','cos','tan','angle','θ','theta']},'Some Applications of Trigonometry':{primary:['height and distance','angle of elevation','angle of depression','line of sight'],secondary:['trigonometric application','tower','building height']},'Circles':{primary:['circle','tangent to circle','chord','secant','circle theorem'],secondary:['radius','diameter','arc','segment']},'Areas Related to Circles':{primary:['area of circle','sector','segment of circle','circumference'],secondary:['π','pi','circular region','annulus']},'Surface Areas and Volumes':{primary:['surface area','volume','total surface area','curved surface area'],secondary:['cube','cuboid','cylinder','cone','sphere','hemisphere']},'Statistics':{primary:['mean','median','mode','frequency distribution','cumulative frequency'],secondary:['data','class interval','grouped data','ogive']},'Probability':{primary:['probability','theoretical probability','experimental probability','random experiment'],secondary:['event','outcome','sample space','certain','impossible']}};const chapterData=chapterKeywords[chapter];if(!chapterData){// Fallback to simple keyword matching\nconst keywords=chapter.toLowerCase().split(' ');return questions.filter(q=>{const questionText=q.question_text.toLowerCase();return keywords.some(keyword=>questionText.includes(keyword));});}// Score-based filtering for more focused results\nreturn questions.filter(q=>{const questionText=q.question_text.toLowerCase();let score=0;// Primary keywords are worth 3 points\nchapterData.primary.forEach(keyword=>{if(questionText.includes(keyword.toLowerCase())){score+=3;}});// Secondary keywords are worth 1 point\nchapterData.secondary.forEach(keyword=>{if(questionText.includes(keyword.toLowerCase())){score+=1;}});// Require minimum score of 2 for more focused results\nreturn score>=2;});};return/*#__PURE__*/_jsxs(\"div\",{className:\"chapter-questions\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"chapter-header\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\uD83D\\uDCD6 Answer Chapterwise\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Select a question paper, textbook, and chapter to view related questions\"})]}),message.text&&/*#__PURE__*/_jsx(\"div\",{className:\"message \".concat(message.type),children:message.text}),/*#__PURE__*/_jsxs(\"div\",{className:\"chapter-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"selection-grid\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"selection-section textbook-selection-table\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\uD83D\\uDCDA Step 1: Select Textbook\"}),textbooks.length===0?/*#__PURE__*/_jsx(\"p\",{className:\"no-data\",children:\"No textbooks available. Please upload a textbook first.\"}):/*#__PURE__*/_jsx(\"div\",{className:\"selection-table-container\",children:/*#__PURE__*/_jsxs(\"table\",{className:\"selection-table\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{style:{width:'50px'},children:\"Select\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Textbook Name\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Subject\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:textbooks.map((textbook,index)=>/*#__PURE__*/_jsxs(\"tr\",{className:\"selection-row \".concat((selectedTextbook===null||selectedTextbook===void 0?void 0:selectedTextbook.name)===textbook.name?'selected':'',\" \").concat(!textbook.uploadedId?'disabled':''),onClick:()=>textbook.uploadedId&&handleTextbookSelect(textbook),children:[/*#__PURE__*/_jsx(\"td\",{className:\"checkbox-cell\",children:/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:(selectedTextbook===null||selectedTextbook===void 0?void 0:selectedTextbook.name)===textbook.name,onChange:()=>textbook.uploadedId&&handleTextbookSelect(textbook),disabled:!textbook.uploadedId,onClick:e=>e.stopPropagation()})}),/*#__PURE__*/_jsx(\"td\",{className:\"name-cell\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"cell-content\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"icon\",children:textbook.uploadedId?'📕':'📘'}),/*#__PURE__*/_jsx(\"span\",{className:\"text\",children:textbook.name})]})}),/*#__PURE__*/_jsx(\"td\",{className:\"subject-cell\",children:/*#__PURE__*/_jsx(\"span\",{className:\"subject-badge\",children:textbook.subject})})]},index))})]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"selection-section paper-selection-table\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\uD83D\\uDCC4 Step 2: Select Question Paper\"}),papers.length===0?/*#__PURE__*/_jsx(\"p\",{className:\"no-data\",children:\"No question papers uploaded yet\"}):/*#__PURE__*/_jsx(\"div\",{className:\"selection-table-container\",children:/*#__PURE__*/_jsxs(\"table\",{className:\"selection-table\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{style:{width:'50px'},children:\"Select\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Paper Title\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Subject\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:papers.map(paper=>/*#__PURE__*/_jsxs(\"tr\",{className:\"selection-row \".concat((selectedPaper===null||selectedPaper===void 0?void 0:selectedPaper.id)===paper.id?'selected':''),onClick:()=>handlePaperSelect(paper),children:[/*#__PURE__*/_jsx(\"td\",{className:\"checkbox-cell\",children:/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:(selectedPaper===null||selectedPaper===void 0?void 0:selectedPaper.id)===paper.id,onChange:()=>handlePaperSelect(paper),onClick:e=>e.stopPropagation()})}),/*#__PURE__*/_jsx(\"td\",{className:\"name-cell\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"cell-content\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"icon\",children:\"\\uD83D\\uDCDD\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text\",children:paper.title})]})}),/*#__PURE__*/_jsx(\"td\",{className:\"subject-cell\",children:/*#__PURE__*/_jsx(\"span\",{className:\"subject-badge\",children:paper.subject})})]},paper.id))})]})})]})]}),selectedPaper&&selectedTextbook&&/*#__PURE__*/_jsx(\"div\",{className:\"semantic-search-section\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"search-buttons\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"load-last-btn\",onClick:handleLoadLastMatch,disabled:isSearching||!selectedTextbook.uploadedId,title:\"Load previously saved AI search results (instant)\",children:isSearching?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"span\",{className:\"spinner-small\"}),\"Loading...\"]}):/*#__PURE__*/_jsx(_Fragment,{children:\"\\uD83D\\uDCCB Show Last Match\"})}),/*#__PURE__*/_jsx(\"button\",{className:\"index-and-match-btn\",onClick:handleIndexAndMatch,disabled:isSearching||!selectedTextbook.uploadedId||!selectedPaper,title:\"Index textbook (if needed) and match questions with AI\",children:isSearching?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"span\",{className:\"spinner-small\"}),\"Processing...\"]}):/*#__PURE__*/_jsx(_Fragment,{children:\"\\uD83D\\uDE80 Index & Match Questions\"})})]})}),semanticSearchResults&&Object.keys(semanticSearchResults).length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"chapter-table-section ai-results\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\uD83E\\uDD16 AI Search Results - Chapters with Questions\"}),/*#__PURE__*/_jsx(\"div\",{className:\"chapter-table-container\",children:/*#__PURE__*/_jsxs(\"table\",{className:\"chapter-table\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"#\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Chapter Name\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Pages\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Questions\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Action\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:Object.entries(semanticSearchResults).map((_ref,index)=>{let[chapterName,data]=_ref;const avgConfidence=data.questions.reduce((sum,q)=>{return sum+(q.chapters&&q.chapters[0]?q.chapters[0].similarity_score:0);},0)/data.questions.length;const isUnmatched=chapterName==='Unmatched Questions';return/*#__PURE__*/_jsxs(\"tr\",{className:\"\".concat((selectedChapter===null||selectedChapter===void 0?void 0:selectedChapter.name)===chapterName?'selected-row':'',\" \").concat(isUnmatched?'unmatched-row':''),children:[/*#__PURE__*/_jsx(\"td\",{className:\"chapter-num\",children:isUnmatched?'⚠️':data.chapter.chapter_number||index+1}),/*#__PURE__*/_jsxs(\"td\",{className:\"chapter-name-cell\",children:[/*#__PURE__*/_jsx(\"strong\",{children:chapterName}),avgConfidence>0&&!isUnmatched&&/*#__PURE__*/_jsxs(\"div\",{className:\"confidence-badge\",title:\"Average AI confidence: \".concat(avgConfidence.toFixed(1),\"%\"),children:[\"\\uD83C\\uDFAF \",avgConfidence.toFixed(0),\"%\"]}),isUnmatched&&/*#__PURE__*/_jsx(\"div\",{className:\"unmatched-badge\",title:\"Questions that could not be matched to any chapter\",children:\"\\u26A0\\uFE0F Needs Review\"})]}),/*#__PURE__*/_jsx(\"td\",{className:\"pages-cell\",children:isUnmatched?'N/A':\"\".concat(data.chapter.page_start,\"-\").concat(data.chapter.page_end)}),/*#__PURE__*/_jsx(\"td\",{className:\"count-cell\",children:/*#__PURE__*/_jsx(\"span\",{className:\"question-count \".concat(isUnmatched?'unmatched-count':'has-questions'),children:data.questions.length})}),/*#__PURE__*/_jsx(\"td\",{className:\"action-cell\",children:/*#__PURE__*/_jsx(\"button\",{className:\"view-btn \".concat(isUnmatched?'unmatched-btn':''),onClick:()=>handleChapterSelect({name:chapterName}),children:\"View Questions\"})})]},index);})})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"table-summary\",children:/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Total Chapters:\"}),\" \",Object.keys(semanticSearchResults).length,\" |\",/*#__PURE__*/_jsx(\"strong\",{children:\" Total Questions:\"}),\" \",Object.values(semanticSearchResults).reduce((sum,data)=>sum+data.questions.length,0)]})})]}),selectedChapter&&/*#__PURE__*/_jsxs(\"div\",{className:\"questions-display\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"questions-header-info\",children:[/*#__PURE__*/_jsxs(\"h3\",{children:[\"\\u2753 Questions from: \",selectedChapter.name]}),/*#__PURE__*/_jsxs(\"div\",{className:\"chapter-meta\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"meta-item\",children:[\"\\uD83D\\uDCD6 \",/*#__PURE__*/_jsx(\"strong\",{children:\"Textbook:\"}),\" \",selectedTextbook.name]}),/*#__PURE__*/_jsxs(\"span\",{className:\"meta-item\",children:[\"\\uD83D\\uDCC4 \",/*#__PURE__*/_jsx(\"strong\",{children:\"Pages:\"}),\" \",selectedChapter.pages]}),/*#__PURE__*/_jsxs(\"span\",{className:\"meta-item\",children:[\"\\uD83D\\uDCDD \",/*#__PURE__*/_jsx(\"strong\",{children:\"Paper:\"}),\" \",selectedPaper.title]})]})]}),loading?/*#__PURE__*/_jsxs(\"div\",{className:\"loading\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"spinner\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Loading questions...\"})]}):questions.length===0?/*#__PURE__*/_jsxs(\"div\",{className:\"no-questions\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"No questions found for this chapter\"}),/*#__PURE__*/_jsx(\"p\",{className:\"hint\",children:\"Try selecting a different chapter\"})]}):/*#__PURE__*/_jsx(\"div\",{className:\"questions-list\",children:questions.map((q,index)=>{// Use AI chapter data if available, otherwise use selected chapter\nlet pageInfo='N/A';if(q.chapters&&q.chapters.length>0){// AI search result - use first matched chapter\nconst aiChapter=q.chapters[0];pageInfo=\"\".concat(aiChapter.page_start,\"-\").concat(aiChapter.page_end);}else if(selectedChapter&&selectedChapter.pages){// Regular chapter selection - estimate pages\npageInfo=estimateQuestionPageNumber(q.question_text,selectedChapter);}return/*#__PURE__*/_jsxs(\"div\",{className:\"question-item\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"question-header\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"question-number\",children:[\"Q\",q.question_number]}),/*#__PURE__*/_jsxs(\"span\",{className:\"chapter-page-badge clickable\",onClick:()=>handlePageClick(pageInfo),title:\"Click to view textbook pages\",children:[\"\\uD83D\\uDCD6 Pages: \",pageInfo]}),q.question_type&&/*#__PURE__*/_jsx(\"span\",{className:\"question-type \".concat(q.question_type),children:q.question_type.toUpperCase()}),q.marks&&/*#__PURE__*/_jsxs(\"span\",{className:\"question-marks\",children:[q.marks,\" marks\"]}),q.has_math&&/*#__PURE__*/_jsx(\"span\",{className:\"math-badge\",children:\"\\uD83D\\uDCD0 Math\"}),(()=>{// Always show debug info for has_diagram\nif(q.has_diagram){console.log('Question has diagram:',{questionNumber:q.question_number,has_diagram:q.has_diagram,diagram_files:q.diagram_files,diagram_files_type:typeof q.diagram_files});}if(!q.has_diagram)return null;// Parse diagram_files if it's a string\nlet diagramFiles=q.diagram_files;if(typeof diagramFiles==='string'){try{diagramFiles=JSON.parse(diagramFiles);}catch(e){console.error('Failed to parse diagram_files:',e);diagramFiles=[];}}// Ensure it's an array\nif(!Array.isArray(diagramFiles)){diagramFiles=diagramFiles?[diagramFiles]:[];}console.log('Processed diagram files:',diagramFiles);if(diagramFiles&&diagramFiles.length>0){console.log('Rendering CLICKABLE diagram badge');return/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"diagram-badge clickable\",onClick:e=>{e.preventDefault();e.stopPropagation();console.log('🎯 DIAGRAM BUTTON CLICKED!',diagramFiles);setSelectedDiagram({questionNumber:q.question_number,diagrams:diagramFiles});},title:\"Click to view diagram\",style:{cursor:'pointer',pointerEvents:'auto'},children:\"\\uD83D\\uDCCA Diagram\"});}else{console.log('Rendering STATIC diagram badge (no files)');return/*#__PURE__*/_jsx(\"span\",{className:\"diagram-badge\",children:\"\\uD83D\\uDCCA Diagram\"});}})(),(()=>{// Check if question has chapter match reasoning\nconst hasChapterReasoning=q.chapters&&q.chapters.length>0&&q.chapters[0].llm_reasoning;if(hasChapterReasoning){return/*#__PURE__*/_jsx(\"button\",{className:\"reasoning-btn\",onClick:()=>setSelectedReasoning({questionNumber:q.question_number,reasoning:q.chapters[0].llm_reasoning,chapterTitle:q.chapters[0].chapter_title,confidence:q.chapters[0].similarity_score,pageRange:\"\".concat(q.chapters[0].page_start,\"-\").concat(q.chapters[0].page_end)}),title:\"View AI chapter matching reasoning\",children:\"\\uD83E\\uDDE0 Why This Chapter?\"});}// Fallback: show parsed data if available\nlet parsedData=q.parsed_data;if(typeof parsedData==='string'){try{parsedData=JSON.parse(parsedData);}catch(e){parsedData={};}}return parsedData&&Object.keys(parsedData).length>0&&/*#__PURE__*/_jsx(\"button\",{className:\"reasoning-btn\",onClick:()=>setSelectedReasoning({questionNumber:q.question_number,reasoning:'No chapter matching reasoning available',llmResponse:JSON.stringify(parsedData,null,2)}),title:\"View AI parsed data\",children:\"\\uD83E\\uDDE0 AI Data\"});})(),/*#__PURE__*/_jsx(\"button\",{className:\"solve-btn\",onClick:()=>handleSolveQuestion(q),disabled:solvingQuestion,title:\"Get detailed step-by-step solution\",children:solvingQuestion?'⏳ Solving...':'✨ Solve Question'})]}),/*#__PURE__*/_jsx(\"div\",{className:\"question-text\",children:q.question_text}),(()=>{// Parse sub_parts if it's a string\nlet subParts=q.sub_parts;if(typeof subParts==='string'){try{subParts=JSON.parse(subParts);}catch(e){subParts=[];}}return subParts&&Array.isArray(subParts)&&subParts.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"sub-parts\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Sub-parts:\"}),\" \",subParts.join(', ')]});})()]},q.id);})})]})]}),showTextbookModal&&textbookPageToShow&&/*#__PURE__*/_jsx(\"div\",{className:\"textbook-modal-overlay\",onClick:handleCloseModal,children:/*#__PURE__*/_jsxs(\"div\",{className:\"textbook-modal-content\",onClick:e=>e.stopPropagation(),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"textbook-modal-header\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"modal-title-section\",children:[/*#__PURE__*/_jsxs(\"h2\",{children:[\"\\uD83D\\uDCD6 \",textbookPageToShow.textbook.name]}),/*#__PURE__*/_jsxs(\"p\",{className:\"modal-subtitle\",children:[\"Chapter: \",textbookPageToShow.chapter,\" | Pages: \",textbookPageToShow.pageRange]})]}),/*#__PURE__*/_jsx(\"button\",{className:\"modal-close-btn\",onClick:handleCloseModal,children:\"\\u2715\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"textbook-modal-body\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"textbook-viewer\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"page-info\",children:/*#__PURE__*/_jsxs(\"span\",{className:\"current-page-indicator\",children:[\"\\uD83D\\uDCC4 Page \",currentPage,\" of \",textbookPageToShow.pageRange]})}),textbookPageToShow.textbook.uploadedFile?/*#__PURE__*/_jsxs(\"div\",{className:\"pdf-embed-container\",children:[pdfLoading&&/*#__PURE__*/_jsxs(\"div\",{className:\"pdf-loading-overlay\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"spinner\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Loading page \",currentPage,\"...\"]})]}),/*#__PURE__*/_jsx(\"iframe\",{src:\"http://localhost:5000/api/textbook-pdf/\".concat(textbookPageToShow.textbook.uploadedId,\"#page=\").concat(currentPage,\"&zoom=page-fit\"),title:\"Textbook Page \".concat(currentPage),className:\"textbook-pdf-iframe\",frameBorder:\"0\",allow:\"fullscreen\",onLoad:()=>setPdfLoading(false)},\"pdf-\".concat(currentPage))]}):/*#__PURE__*/_jsxs(\"div\",{className:\"no-textbook-message\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"external-icon\",children:\"\\uD83D\\uDCDA\"}),/*#__PURE__*/_jsx(\"h3\",{children:\"No Textbook Uploaded\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"viewer-description\",children:[\"Please upload a textbook file for \",textbookPageToShow.textbook.name,\" to view pages.\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"link-info\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Textbook:\"}),\" \",textbookPageToShow.textbook.name]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Chapter:\"}),\" \",textbookPageToShow.chapter]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Pages:\"}),\" \",textbookPageToShow.pageRange]}),/*#__PURE__*/_jsx(\"p\",{className:\"upload-hint\",children:\"Go to \\\"Upload Papers\\\" menu to upload textbook PDFs\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"page-navigation\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"nav-btn\",onClick:handlePrevPage,disabled:currentPage<=textbookPageToShow.startPage,children:\"\\u2190 Previous\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"page-display\",children:[\"Page \",currentPage]}),/*#__PURE__*/_jsx(\"button\",{className:\"nav-btn\",onClick:handleNextPage,disabled:currentPage>=textbookPageToShow.endPage,children:\"Next \\u2192\"})]})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"textbook-modal-footer\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"footer-info\",children:/*#__PURE__*/_jsxs(\"span\",{className:\"page-count\",children:[textbookPageToShow.endPage-textbookPageToShow.startPage+1,\" pages in range\"]})}),/*#__PURE__*/_jsx(\"button\",{className:\"close-modal-btn\",onClick:handleCloseModal,children:\"Close\"})]})]})}),selectedReasoning&&/*#__PURE__*/_jsx(\"div\",{className:\"reasoning-modal\",onClick:()=>setSelectedReasoning(null),children:/*#__PURE__*/_jsxs(\"div\",{className:\"reasoning-modal-content\",onClick:e=>e.stopPropagation(),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"reasoning-modal-header\",children:[/*#__PURE__*/_jsxs(\"h3\",{children:[\"\\uD83E\\uDDE0 Chapter Matching Analysis - Q\",selectedReasoning.questionNumber]}),/*#__PURE__*/_jsx(\"button\",{className:\"close-reasoning-btn\",onClick:()=>setSelectedReasoning(null),children:\"\\u2715\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"reasoning-modal-body\",children:[selectedReasoning.chapterTitle&&/*#__PURE__*/_jsxs(\"div\",{className:\"chapter-match-info\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"match-detail\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"match-label\",children:\"\\uD83D\\uDCDA Matched Chapter:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"match-value\",children:selectedReasoning.chapterTitle})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"match-detail\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"match-label\",children:\"\\uD83D\\uDCC4 Pages:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"match-value\",children:selectedReasoning.pageRange})]}),selectedReasoning.confidence&&/*#__PURE__*/_jsxs(\"div\",{className:\"match-detail\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"match-label\",children:\"\\uD83C\\uDFAF Confidence:\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"match-value\",children:[selectedReasoning.confidence,\"%\"]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"reasoning-section\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"\\uD83D\\uDCAD AI Reasoning:\"}),/*#__PURE__*/_jsx(\"div\",{className:\"reasoning-content\",children:selectedReasoning.reasoning})]}),selectedReasoning.llmResponse&&/*#__PURE__*/_jsxs(\"div\",{className:\"llm-response-section\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"\\uD83E\\uDD16 Technical Details (JSON):\"}),/*#__PURE__*/_jsx(\"div\",{className:\"llm-response-content\",children:/*#__PURE__*/_jsx(\"pre\",{children:selectedReasoning.llmResponse})})]})]})]})}),selectedSolution&&/*#__PURE__*/_jsx(\"div\",{className:\"solution-modal\",onClick:()=>setSelectedSolution(null),children:/*#__PURE__*/_jsxs(\"div\",{className:\"solution-modal-content\",onClick:e=>e.stopPropagation(),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"solution-modal-header\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"h3\",{children:[\"\\u2728 Step-by-Step Solution - Q\",selectedSolution.questionNumber]}),/*#__PURE__*/_jsx(\"span\",{className:\"solution-type-badge\",children:selectedSolution.questionType})]}),/*#__PURE__*/_jsx(\"button\",{className:\"close-solution-btn\",onClick:()=>setSelectedSolution(null),children:\"\\u2715\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"solution-modal-body\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"solution-question-box\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"\\uD83D\\uDCDD Question:\"}),/*#__PURE__*/_jsx(\"p\",{children:selectedSolution.questionText})]}),/*#__PURE__*/_jsx(\"div\",{className:\"solution-content\",children:(()=>{const lines=selectedSolution.solution.split('\\n');let inDiagram=false;let diagramLines=[];let lastWasEmpty=false;let lastWasSection=false;let currentSection=null;const elements=[];lines.forEach((line,idx)=>{// Detect ASCII art diagram patterns (box drawing characters)\nconst isAsciiArt=line.match(/^[\\s]*[\\+\\-\\|\\/\\\\<>]+[\\s\\+\\-\\|\\/\\\\<>]*$/)||line.match(/^[\\s]*[\\+\\-\\|]{3,}/)||line.match(/[\\+\\-]{5,}/)||line.includes('|')&&line.includes('+');// Detect diagram start/end\nif(line.match(/^\\*\\*Diagram/i)||line.includes('```')||!inDiagram&&isAsciiArt){if(!inDiagram){// Starting a diagram\ninDiagram=true;if(isAsciiArt){diagramLines.push(line);}}else{// Ending a diagram\nif(line.includes('```')||line.match(/^\\*\\*Diagram/i)){inDiagram=false;}else if(isAsciiArt){diagramLines.push(line);}else{// End of ASCII art\ninDiagram=false;}if(!inDiagram&&diagramLines.length>0){const diagram=diagramLines.join('\\n');diagramLines=[];elements.push(/*#__PURE__*/_jsx(\"pre\",{className:\"solution-diagram\",children:diagram},idx));lastWasEmpty=false;lastWasSection=true;}}return;}// Collect diagram lines\nif(inDiagram){diagramLines.push(line);return;}// Highlight section headers (bold text with **)\nif(line.match(/^\\*\\*.*\\*\\*:?$/)){const sectionName=line.replace(/\\*\\*/g,'').replace(/:/g,'').trim().toLowerCase();currentSection=sectionName;elements.push(/*#__PURE__*/_jsx(\"h4\",{className:\"solution-section-header\",children:line.replace(/\\*\\*/g,'').replace(/:/g,'')},idx));lastWasEmpty=false;lastWasSection=true;return;}// Highlight final answer\nif(line.match(/FINAL ANSWER:/i)){elements.push(/*#__PURE__*/_jsxs(\"div\",{className:\"final-answer-box\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"final-answer-icon\",children:\"\\uD83C\\uDFAF\"}),/*#__PURE__*/_jsx(\"div\",{className:\"final-answer-text\",dangerouslySetInnerHTML:{__html:line.replace(/FINAL ANSWER:/i,'').trim()}})]},idx));lastWasEmpty=false;lastWasSection=true;return;}// Highlight step numbers\nif(line.match(/^(Step \\d+:|^\\d+\\.)/)){elements.push(/*#__PURE__*/_jsx(\"div\",{className:\"solution-step\",dangerouslySetInnerHTML:{__html:line}},idx));lastWasEmpty=false;lastWasSection=false;return;}// Handle empty lines - only add one between sections\nif(!line.trim()){// Don't add spacers within compact sections (given, find, formula)\nconst compactSections=['given','find','formula','concept','formula/concept'];const isCompactSection=compactSections.some(s=>currentSection&&currentSection.includes(s));if(!lastWasEmpty&&lastWasSection&&!isCompactSection){elements.push(/*#__PURE__*/_jsx(\"div\",{className:\"section-spacer\"},idx));lastWasEmpty=true;}return;}// Format mathematical/scientific expressions\nconst formatExpression=text=>{return text// Preserve existing HTML entities\n.replace(/&/g,'&amp;').replace(/</g,'&lt;').replace(/>/g,'&gt;')// Keep special characters as-is (they're already Unicode)\n.replace(/\\*\\*(.+?)\\*\\*/g,'<strong>$1</strong>')// Bold\n.replace(/\\*(.+?)\\*/g,'<em>$1</em>');// Italic\n};// Regular text with formatting\nconst compactSections=['given','find','formula','concept','formula/concept'];const isCompactSection=compactSections.some(s=>currentSection&&currentSection.includes(s));const textClass=isCompactSection?'solution-text compact':'solution-text';elements.push(/*#__PURE__*/_jsx(\"p\",{className:textClass,dangerouslySetInnerHTML:{__html:formatExpression(line)}},idx));lastWasEmpty=false;lastWasSection=false;});return elements;})()})]})]})}),selectedDiagram&&/*#__PURE__*/_jsx(\"div\",{className:\"diagram-modal-overlay\",onClick:()=>setSelectedDiagram(null),children:/*#__PURE__*/_jsxs(\"div\",{className:\"diagram-modal-content\",onClick:e=>e.stopPropagation(),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"diagram-modal-header\",children:[/*#__PURE__*/_jsxs(\"h3\",{children:[\"\\uD83D\\uDCCA Diagram - Q\",selectedDiagram.questionNumber]}),/*#__PURE__*/_jsx(\"button\",{className:\"close-diagram-btn\",onClick:()=>setSelectedDiagram(null),children:\"\\u2715\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"diagram-modal-body\",children:selectedDiagram.diagrams.map((diagram,idx)=>/*#__PURE__*/_jsxs(\"div\",{className:\"diagram-container\",children:[/*#__PURE__*/_jsx(\"img\",{src:\"http://localhost:5000\".concat(diagram),alt:\"Diagram \".concat(idx+1),className:\"diagram-image\",onError:e=>{e.target.style.display='none';e.target.nextSibling.style.display='block';}}),/*#__PURE__*/_jsx(\"div\",{className:\"diagram-error\",style:{display:'none'},children:\"\\u26A0\\uFE0F Failed to load diagram\"})]},idx))})]})})]});};export default ChapterQuestions;","map":{"version":3,"names":["React","useState","useEffect","axios","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","ChapterQuestions","papers","setPapers","textbooks","setTextbooks","selectedPaper","setSelectedPaper","selectedTextbook","setSelectedTextbook","chapters","setChapters","chapterStats","setChapterStats","selectedChapter","setSelectedChapter","questions","setQuestions","loading","setLoading","message","setMessage","type","text","showTextbookModal","setShowTextbookModal","textbookPageToShow","setTextbookPageToShow","currentPage","setCurrentPage","pdfLoading","setPdfLoading","semanticSearchResults","setSemanticSearchResults","isSearching","setIsSearching","selectedReasoning","setSelectedReasoning","selectedSolution","setSelectedSolution","solvingQuestion","setSolvingQuestion","selectedDiagram","setSelectedDiagram","defaultTextbooks","name","pdfUrl","externalUrl","imageBasePath","pages","fetchPapers","fetchAllTextbooks","calculateChapterStats","response","get","data","err","console","error","uploadedTextbooks","textbooksToDisplay","map","uploaded","_defaultTextbooks$upl","defaultForSubject","subject","title","uploadedFile","file_path","uploadedId","id","uploadedTitle","length","handlePaperSelect","paper","handleTextbookSelect","textbook","log","concat","allQuestions","stats","chapter","chapterQuestions","filterQuestionsByChapter","_objectSpread","questionCount","handleClearResults","handleIndexAndMatch","needsIndexing","_err$response","_err$response2","_err$response2$data","_err$response2$data$e","status","includes","indexResponse","post","success","Error","chapters_count","questionsResponse","mappingResponse","textbook_id","mappedQuestions","mapped_questions","chapterGroups","unmatchedQuestions","forEach","q","topChapter","chapterKey","chapter_title","push","chapter_number","page_start","page_end","similarity_score","totalQuestions","Object","values","reduce","sum","keys","saveSearchResults","_err$response3","_err$response3$data","errorMsg","handleIndexTextbook","_err$response4","_err$response4$data","handleRunSemanticSearch","_err$response5","_err$response5$data","paper_id","search_results","_error$response","handleLoadLastMatch","total_chapters","total_questions","unmatched_count","created_at","date","Date","timeAgo","getTimeAgo","_err$response6","_err$response7","_err$response7$data","seconds","Math","floor","toLocaleDateString","handleChapterSelect","chapterData","chapterInfo","warn","handleSolveQuestion","question","chapterContext","question_text","question_type","chapter_context","questionNumber","question_number","questionText","questionType","solution","parsedSolution","parsed_solution","source","chapter_name","timestamp","toISOString","saveErr","alert","_error$response2","_error$response2$data","estimateQuestionPageNumber","startPage","endPage","split","p","parseInt","trim","totalPages","subTopicPositions","lowerText","toLowerCase","estimatedPosition","matchFound","subTopic","position","entries","estimatedPage","round","rangeStart","max","rangeEnd","min","handlePageClick","pageRange","handleNextPage","nextPage","setTimeout","handlePrevPage","prevPage","handleCloseModal","chapterKeywords","primary","secondary","keywords","filter","some","keyword","score","className","children","style","width","index","onClick","checked","onChange","disabled","e","stopPropagation","_ref","chapterName","avgConfidence","isUnmatched","toFixed","pageInfo","aiChapter","toUpperCase","marks","has_math","has_diagram","diagram_files","diagram_files_type","diagramFiles","JSON","parse","Array","isArray","preventDefault","diagrams","cursor","pointerEvents","hasChapterReasoning","llm_reasoning","reasoning","chapterTitle","confidence","parsedData","parsed_data","llmResponse","stringify","subParts","sub_parts","join","src","frameBorder","allow","onLoad","lines","inDiagram","diagramLines","lastWasEmpty","lastWasSection","currentSection","elements","line","idx","isAsciiArt","match","diagram","sectionName","replace","dangerouslySetInnerHTML","__html","compactSections","isCompactSection","s","formatExpression","textClass","alt","onError","target","display","nextSibling"],"sources":["D:/AI/_Programs/CBSE/aqnamic/frontend/src/components/ChapterQuestions.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './ChapterQuestions.css';\n\nconst ChapterQuestions = () => {\n  const [papers, setPapers] = useState([]);\n  const [textbooks, setTextbooks] = useState([]);\n  const [selectedPaper, setSelectedPaper] = useState(null);\n  const [selectedTextbook, setSelectedTextbook] = useState(null);\n  const [chapters, setChapters] = useState([]);\n  const [chapterStats, setChapterStats] = useState([]);\n  const [selectedChapter, setSelectedChapter] = useState(null);\n  const [questions, setQuestions] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState({ type: '', text: '' });\n  const [showTextbookModal, setShowTextbookModal] = useState(false);\n  const [textbookPageToShow, setTextbookPageToShow] = useState(null);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [pdfLoading, setPdfLoading] = useState(false);\n  const [semanticSearchResults, setSemanticSearchResults] = useState(null);\n  const [isSearching, setIsSearching] = useState(false);\n  const [selectedReasoning, setSelectedReasoning] = useState(null);\n  const [selectedSolution, setSelectedSolution] = useState(null);\n  const [solvingQuestion, setSolvingQuestion] = useState(false);\n  const [selectedDiagram, setSelectedDiagram] = useState(null);\n\n  // Predefined textbooks with chapters and page numbers\n  const defaultTextbooks = {\n    'Physics': [\n      {\n        name: 'NCERT Physics Class 10',\n        pdfUrl: 'https://ncert.nic.in/textbook/pdf/keph101.pdf',\n        externalUrl: 'https://ncert.nic.in/textbook.php?keph1=0-8',\n        imageBasePath: '/textbooks/physics-class10/pages/',\n        chapters: [\n          { name: 'Electricity', pages: '1-20' },\n          { name: 'Magnetic Effects of Current', pages: '21-40' },\n          { name: 'Light - Reflection and Refraction', pages: '41-65' },\n          { name: 'Human Eye and Colourful World', pages: '66-85' },\n          { name: 'Sources of Energy', pages: '86-105' }\n        ]\n      }\n    ],\n    'Chemistry': [\n      {\n        name: 'NCERT Chemistry Class 10',\n        pdfUrl: 'https://ncert.nic.in/textbook/pdf/kesc101.pdf',\n        externalUrl: 'https://ncert.nic.in/textbook.php?kesc1=0-8',\n        imageBasePath: '/textbooks/chemistry-class10/pages/',\n        chapters: [\n          { name: 'Chemical Reactions and Equations', pages: '1-18' },\n          { name: 'Acids, Bases and Salts', pages: '19-35' },\n          { name: 'Metals and Non-metals', pages: '36-55' },\n          { name: 'Carbon and its Compounds', pages: '56-80' },\n          { name: 'Periodic Classification of Elements', pages: '81-95' }\n        ]\n      }\n    ],\n    'Biology': [\n      {\n        name: 'NCERT Biology Class 10',\n        pdfUrl: 'https://ncert.nic.in/textbook/pdf/kebo101.pdf',\n        externalUrl: 'https://ncert.nic.in/textbook.php?kebo1=0-8',\n        imageBasePath: '/textbooks/biology-class10/pages/',\n        chapters: [\n          { name: 'Life Processes', pages: '1-25' },\n          { name: 'Control and Coordination', pages: '26-45' },\n          { name: 'How do Organisms Reproduce', pages: '46-70' },\n          { name: 'Heredity and Evolution', pages: '71-90' },\n          { name: 'Our Environment', pages: '91-110' }\n        ]\n      }\n    ],\n    'Mathematics': [\n      {\n        name: 'NCERT Mathematics Class 10',\n        pdfUrl: 'https://ncert.nic.in/textbook/pdf/kemh101.pdf',\n        externalUrl: 'https://ncert.nic.in/textbook.php?kemh1=0-16',\n        imageBasePath: '/textbooks/mathematics-class10/pages/',\n        chapters: [\n          { name: 'Real Numbers', pages: '1-15' },\n          { name: 'Polynomials', pages: '16-30' },\n          { name: 'Pair of Linear Equations in Two Variables', pages: '31-50' },\n          { name: 'Quadratic Equations', pages: '51-70' },\n          { name: 'Arithmetic Progressions', pages: '71-85' },\n          { name: 'Triangles', pages: '86-110' },\n          { name: 'Coordinate Geometry', pages: '111-130' },\n          { name: 'Introduction to Trigonometry', pages: '131-150' },\n          { name: 'Some Applications of Trigonometry', pages: '151-165' },\n          { name: 'Circles', pages: '166-185' },\n          { name: 'Areas Related to Circles', pages: '186-200' },\n          { name: 'Surface Areas and Volumes', pages: '201-225' },\n          { name: 'Statistics', pages: '226-245' },\n          { name: 'Probability', pages: '246-260' }\n        ]\n      }\n    ]\n  };\n\n  useEffect(() => {\n    fetchPapers();\n    fetchAllTextbooks();\n  }, []);\n\n  useEffect(() => {\n    if (selectedPaper && selectedTextbook) {\n      calculateChapterStats();\n    }\n  }, [selectedPaper, selectedTextbook]);\n\n  const fetchPapers = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/uploaded-papers');\n      setPapers(response.data);\n    } catch (err) {\n      console.error('Error fetching papers:', err);\n      setMessage({ type: 'error', text: 'Failed to load papers' });\n    }\n  };\n\n  const fetchAllTextbooks = async () => {\n    try {\n      // Fetch all uploaded textbooks\n      const response = await axios.get('http://localhost:5000/api/textbooks');\n      const uploadedTextbooks = response.data || [];\n      \n      // Use uploaded textbooks directly, with default chapter structure as fallback\n      const textbooksToDisplay = uploadedTextbooks.map(uploaded => {\n        // Get default chapters for this subject if available\n        const defaultForSubject = defaultTextbooks[uploaded.subject]?.[0];\n        \n        return {\n          name: uploaded.title,  // Use actual uploaded title\n          subject: uploaded.subject,\n          uploadedFile: uploaded.file_path,\n          uploadedId: uploaded.id,\n          uploadedTitle: uploaded.title,\n          chapters: defaultForSubject?.chapters || [],  // Use default chapters as template\n          pdfUrl: '',\n          externalUrl: '',\n          imageBasePath: ''\n        };\n      });\n      \n      setTextbooks(textbooksToDisplay);\n      \n      // If no textbooks uploaded, show message\n      if (textbooksToDisplay.length === 0) {\n        setMessage({ \n          type: 'info', \n          text: 'No textbooks uploaded yet. Please upload a textbook first.' \n        });\n      }\n    } catch (err) {\n      console.error('Error fetching textbooks:', err);\n      setMessage({ \n        type: 'error', \n        text: 'Failed to load textbooks. Please try again.' \n      });\n      setTextbooks([]);\n    }\n  };\n\n  const handlePaperSelect = (paper) => {\n    setSelectedPaper(paper);\n    setSelectedTextbook(null);\n    setSelectedChapter(null);\n    setQuestions([]);\n    setChapters([]);\n    setChapterStats([]);\n    setSemanticSearchResults(null);  // Clear previous search results\n    \n    // Don't reload textbooks - they're already loaded with correct names\n    // Just clear the selection and let user select from existing list\n  };\n\n  const handleTextbookSelect = (textbook) => {\n    setSelectedTextbook(textbook);\n    setSelectedChapter(null);\n    setQuestions([]);\n    setChapters(textbook.chapters);\n    setSemanticSearchResults(null);  // Clear previous search results when textbook changes\n    \n    // Log textbook info for debugging\n    console.log('Selected textbook:', textbook.name);\n    console.log('Has uploaded file:', !!textbook.uploadedId);\n    \n    // Don't show selection message - table selection is clear enough\n  };\n\n  const calculateChapterStats = async () => {\n    if (!selectedPaper || !selectedTextbook) return;\n\n    try {\n      // Fetch all questions from the selected paper\n      const response = await axios.get(\n        `http://localhost:5000/api/parsed-questions?paper_id=${selectedPaper.id}`\n      );\n      \n      const allQuestions = response.data;\n      \n      // Calculate question count for each chapter\n      const stats = selectedTextbook.chapters.map(chapter => {\n        const chapterQuestions = filterQuestionsByChapter(allQuestions, chapter.name);\n        return {\n          ...chapter,\n          questionCount: chapterQuestions.length\n        };\n      });\n      \n      setChapterStats(stats);\n    } catch (err) {\n      console.error('Error calculating chapter stats:', err);\n    }\n  };\n\n  const handleClearResults = () => {\n    setSemanticSearchResults(null);\n    setQuestions([]);\n    setSelectedChapter(null);\n    setChapterStats([]); // Clear the chapter stats table\n    setMessage({ type: 'info', text: 'Search results cleared. Ready for new search.' });\n  };\n\n  const handleIndexAndMatch = async () => {\n    // Unified workflow: Index textbook (if needed) + Run AI Search\n    if (!selectedPaper || !selectedTextbook) {\n      setMessage({ type: 'warning', text: 'Please select both a question paper and textbook first' });\n      return;\n    }\n\n    if (!selectedTextbook.uploadedId) {\n      setMessage({ type: 'warning', text: 'Please upload the textbook first' });\n      return;\n    }\n\n    setIsSearching(true);\n\n    try {\n      // Step 1: Check if textbook is already indexed by trying to run search\n      console.log('🚀 Starting Index & Match workflow...');\n      setMessage({ type: 'info', text: '🔍 Checking if textbook is indexed...' });\n\n      let needsIndexing = false;\n\n      // Try to get chapters to see if indexed\n      try {\n        await axios.get(`http://localhost:5000/api/textbook-chapters/${selectedTextbook.uploadedId}`);\n        console.log('✓ Textbook already indexed');\n        setMessage({ type: 'info', text: '✓ Textbook already indexed. Running AI search...' });\n      } catch (err) {\n        if (err.response?.status === 404 || err.response?.data?.error?.includes('No vector index')) {\n          needsIndexing = true;\n          console.log('⚠ Textbook not indexed, will index now');\n        } else {\n          throw err;\n        }\n      }\n\n      // Step 2: Index if needed\n      if (needsIndexing) {\n        setMessage({ type: 'info', text: '📚 Indexing textbook... This may take a few minutes.' });\n        \n        const indexResponse = await axios.post(\n          `http://localhost:5000/api/index-textbook/${selectedTextbook.uploadedId}`\n        );\n\n        if (!indexResponse.data.success) {\n          throw new Error(indexResponse.data.error || 'Indexing failed');\n        }\n\n        console.log(`✓ Indexed ${indexResponse.data.chapters_count} chapters`);\n        setMessage({ \n          type: 'info', \n          text: `✅ Indexed ${indexResponse.data.chapters_count} chapters. Now matching questions...` \n        });\n      }\n\n      // Step 3: Run AI Search\n      setMessage({ type: 'info', text: '🤖 Running AI Search with LLM analysis...' });\n\n      // Fetch all questions from the selected paper\n      const questionsResponse = await axios.get(\n        `http://localhost:5000/api/parsed-questions?paper_id=${selectedPaper.id}`\n      );\n      \n      const allQuestions = questionsResponse.data;\n\n      // Use semantic search to map questions to chapters\n      const mappingResponse = await axios.post(\n        'http://localhost:5000/api/map-questions-to-chapters',\n        {\n          questions: allQuestions,\n          textbook_id: selectedTextbook.uploadedId\n        }\n      );\n      \n      if (mappingResponse.data.success) {\n        const mappedQuestions = mappingResponse.data.mapped_questions;\n        \n        // Group questions by chapter\n        const chapterGroups = {};\n        const unmatchedQuestions = [];\n        \n        mappedQuestions.forEach(q => {\n          if (q.chapters && q.chapters.length > 0) {\n            const topChapter = q.chapters[0];\n            const chapterKey = topChapter.chapter_title;\n            \n            if (!chapterGroups[chapterKey]) {\n              chapterGroups[chapterKey] = {\n                chapter: topChapter,\n                questions: []\n              };\n            }\n            chapterGroups[chapterKey].questions.push(q);\n          } else {\n            unmatchedQuestions.push(q);\n          }\n        });\n        \n        // Add unmatched questions if any\n        if (unmatchedQuestions.length > 0) {\n          chapterGroups['Unmatched Questions'] = {\n            chapter: {\n              chapter_number: 0,\n              chapter_title: 'Unmatched Questions',\n              page_start: 'N/A',\n              page_end: 'N/A',\n              similarity_score: 0\n            },\n            questions: unmatchedQuestions\n          };\n        }\n        \n        const totalQuestions = Object.values(chapterGroups).reduce((sum, data) => sum + data.questions.length, 0);\n        \n        // Clear old chapter stats\n        setChapterStats([]);\n        \n        setSemanticSearchResults(chapterGroups);\n        setMessage({\n          type: 'success',\n          text: `🎉 Complete! Found ${Object.keys(chapterGroups).length} chapters with ${totalQuestions} questions (${unmatchedQuestions.length} unmatched). Click a chapter below.`\n        });\n        \n        // Save results to database\n        await saveSearchResults(chapterGroups);\n      } else {\n        throw new Error('AI search failed');\n      }\n    } catch (err) {\n      console.error('Error in Index & Match workflow:', err);\n      const errorMsg = err.response?.data?.error || err.message;\n      \n      setMessage({ \n        type: 'error', \n        text: `Failed: ${errorMsg}` \n      });\n    } finally {\n      setIsSearching(false);\n    }\n  };\n\n  const handleIndexTextbook = async () => {\n    // Legacy function - kept for backward compatibility\n    if (!selectedTextbook || !selectedTextbook.uploadedId) {\n      setMessage({ type: 'warning', text: 'Please select a textbook first' });\n      return;\n    }\n\n    setIsSearching(true);\n    setMessage({ type: 'info', text: '📚 Indexing textbook... This may take a few minutes.' });\n\n    try {\n      const response = await axios.post(\n        `http://localhost:5000/api/index-textbook/${selectedTextbook.uploadedId}`\n      );\n\n      if (response.data.success) {\n        setMessage({\n          type: 'success',\n          text: `✅ Textbook indexed successfully! ${response.data.chapters_count} chapters indexed. You can now run AI semantic search.`\n        });\n      } else {\n        throw new Error(response.data.error || 'Indexing failed');\n      }\n    } catch (err) {\n      console.error('Error indexing textbook:', err);\n      setMessage({\n        type: 'error',\n        text: `Failed to index textbook: ${err.response?.data?.error || err.message}`\n      });\n    } finally {\n      setIsSearching(false);\n    }\n  };\n\n  const handleRunSemanticSearch = async () => {\n    if (!selectedPaper || !selectedTextbook) {\n      setMessage({ type: 'warning', text: 'Please select both a question paper and textbook first' });\n      return;\n    }\n\n    if (!selectedTextbook.uploadedId) {\n      setMessage({ type: 'warning', text: 'Please upload the textbook to use AI semantic search' });\n      return;\n    }\n\n    setIsSearching(true);\n    setMessage({ type: 'info', text: '🤖 Running AI Search with LLM analysis...' });\n\n    try {\n      // Fetch all questions from the selected paper\n      const response = await axios.get(\n        `http://localhost:5000/api/parsed-questions?paper_id=${selectedPaper.id}`\n      );\n      \n      const allQuestions = response.data;\n\n      // Use semantic search to map questions to chapters\n      const mappingResponse = await axios.post(\n        'http://localhost:5000/api/map-questions-to-chapters',\n        {\n          questions: allQuestions,\n          textbook_id: selectedTextbook.uploadedId\n        }\n      );\n      \n      if (mappingResponse.data.success) {\n        const mappedQuestions = mappingResponse.data.mapped_questions;\n        \n        // Group questions by chapter\n        const chapterGroups = {};\n        const unmatchedQuestions = [];\n        \n        mappedQuestions.forEach(q => {\n          if (q.chapters && q.chapters.length > 0) {\n            const topChapter = q.chapters[0]; // Use best match\n            const chapterKey = topChapter.chapter_title;\n            \n            if (!chapterGroups[chapterKey]) {\n              chapterGroups[chapterKey] = {\n                chapter: topChapter,\n                questions: []\n              };\n            }\n            chapterGroups[chapterKey].questions.push(q);\n          } else {\n            // No chapter match found\n            unmatchedQuestions.push(q);\n          }\n        });\n        \n        // Add unmatched questions as a separate group if any exist\n        if (unmatchedQuestions.length > 0) {\n          chapterGroups['Unmatched Questions'] = {\n            chapter: {\n              chapter_number: 0,\n              chapter_title: 'Unmatched Questions',\n              page_start: 'N/A',\n              page_end: 'N/A',\n              similarity_score: 0\n            },\n            questions: unmatchedQuestions\n          };\n        }\n        \n        const totalQuestions = Object.values(chapterGroups).reduce((sum, data) => sum + data.questions.length, 0);\n        \n        console.log('Chapter groups created:', Object.keys(chapterGroups));\n        console.log('Full chapter groups:', chapterGroups);\n        \n        // Clear old chapter stats to show only AI results\n        setChapterStats([]);\n        \n        setSemanticSearchResults(chapterGroups);\n        setMessage({\n          type: 'success',\n          text: `🤖 AI Search Complete! Found ${Object.keys(chapterGroups).length} chapters with ${totalQuestions} questions (${unmatchedQuestions.length} unmatched). Click on a chapter below to view questions.`\n        });\n        \n        // Save results to database\n        await saveSearchResults(chapterGroups);\n      } else {\n        throw new Error('Semantic search failed');\n      }\n    } catch (err) {\n      console.error('Error in semantic search:', err);\n      const errorMsg = err.response?.data?.error || err.message;\n      \n      // Check if it's an indexing issue\n      if (errorMsg.includes('No vector index found') || errorMsg.includes('index')) {\n        setMessage({ \n          type: 'error', \n          text: '⚠️ Textbook not indexed. Please click \"Index Textbook\" button first.' \n        });\n      } else {\n        setMessage({ \n          type: 'error', \n          text: `AI semantic search failed: ${errorMsg}` \n        });\n      }\n    } finally {\n      setIsSearching(false);\n    }\n  };\n\n  const saveSearchResults = async (chapterGroups) => {\n    try {\n      console.log('💾 Saving search results to database...');\n      console.log('  Paper ID:', selectedPaper.id);\n      console.log('  Textbook ID:', selectedTextbook.uploadedId);\n      console.log('  Chapters:', Object.keys(chapterGroups).length);\n      \n      const response = await axios.post('http://localhost:5000/api/save-ai-search-results', {\n        paper_id: selectedPaper.id,\n        textbook_id: selectedTextbook.uploadedId,\n        search_results: chapterGroups\n      });\n      \n      console.log('✓ Search results saved to database:', response.data);\n    } catch (error) {\n      console.error('❌ Failed to save search results:', error);\n      console.error('  Error details:', error.response?.data);\n      // Don't show error to user - this is a background operation\n    }\n  };\n\n  const handleLoadLastMatch = async () => {\n    if (!selectedPaper || !selectedTextbook || !selectedTextbook.uploadedId) {\n      setMessage({ type: 'warning', text: 'Please select both a question paper and textbook first' });\n      return;\n    }\n\n    setIsSearching(true);\n    setMessage({ type: 'info', text: '📋 Loading last AI search results...' });\n\n    console.log('📋 Loading last match...');\n    console.log('  Paper ID:', selectedPaper.id);\n    console.log('  Textbook ID:', selectedTextbook.uploadedId);\n\n    try {\n      const response = await axios.get(\n        `http://localhost:5000/api/get-last-ai-search?paper_id=${selectedPaper.id}&textbook_id=${selectedTextbook.uploadedId}`\n      );\n      \n      console.log('  Response:', response.data);\n\n      if (response.data.success) {\n        const { search_results, total_chapters, total_questions, unmatched_count, created_at } = response.data;\n        \n        // Clear old chapter stats\n        setChapterStats([]);\n        \n        setSemanticSearchResults(search_results);\n        \n        // Format the date\n        const date = new Date(created_at);\n        const timeAgo = getTimeAgo(date);\n        \n        setMessage({\n          type: 'success',\n          text: `📋 Loaded previous results (${timeAgo}): ${total_chapters} chapters with ${total_questions} questions (${unmatched_count} unmatched)`\n        });\n      }\n    } catch (err) {\n      console.error('Error loading last match:', err);\n      if (err.response?.status === 404) {\n        // Clear any existing results since no match found for this combination\n        setSemanticSearchResults(null);\n        setChapterStats([]);\n        \n        setMessage({ \n          type: 'info', \n          text: `No previous results found for \"${selectedPaper.title}\" with \"${selectedTextbook.name}\". Please run \"Index & Match Questions\" first.` \n        });\n      } else {\n        setMessage({ \n          type: 'error', \n          text: `Failed to load previous results: ${err.response?.data?.error || err.message}` \n        });\n      }\n    } finally {\n      setIsSearching(false);\n    }\n  };\n\n  const getTimeAgo = (date) => {\n    const seconds = Math.floor((new Date() - date) / 1000);\n    \n    if (seconds < 60) return 'just now';\n    if (seconds < 3600) return `${Math.floor(seconds / 60)} minutes ago`;\n    if (seconds < 86400) return `${Math.floor(seconds / 3600)} hours ago`;\n    if (seconds < 604800) return `${Math.floor(seconds / 86400)} days ago`;\n    return date.toLocaleDateString();\n  };\n\n  const handleChapterSelect = (chapterData) => {\n    console.log('Selected chapter:', chapterData);\n    console.log('Available chapters in semanticSearchResults:', semanticSearchResults ? Object.keys(semanticSearchResults) : 'None');\n    \n    setSelectedChapter(chapterData);\n    \n    if (semanticSearchResults && semanticSearchResults[chapterData.name]) {\n      // Use semantic search results\n      const chapterQuestions = semanticSearchResults[chapterData.name].questions;\n      const chapterInfo = semanticSearchResults[chapterData.name].chapter;\n      \n      console.log('Found chapter questions:', chapterQuestions.length);\n      console.log('Chapter info:', chapterInfo);\n      \n      setQuestions(chapterQuestions);\n      setMessage({\n        type: 'success',\n        text: `Showing ${chapterQuestions.length} questions for: ${chapterData.name} (AI matched)`\n      });\n    } else {\n      console.warn('Chapter not found in semantic search results:', chapterData.name);\n      setMessage({\n        type: 'info',\n        text: 'Run AI Search to find questions for this chapter'\n      });\n      setQuestions([]);\n    }\n  };\n\n  const handleSolveQuestion = async (question) => {\n    setSolvingQuestion(true);\n    try {\n      const chapterContext = question.chapters && question.chapters.length > 0 \n        ? question.chapters[0].chapter_title \n        : selectedChapter?.name;\n      \n      const response = await axios.post('http://localhost:5000/api/solve-question', {\n        question_text: question.question_text,\n        question_type: question.question_type,\n        subject: selectedPaper?.subject,\n        chapter_context: chapterContext\n      });\n      \n      if (response.data.success) {\n        setSelectedSolution({\n          questionNumber: question.question_number,\n          questionText: question.question_text,\n          questionType: question.question_type,\n          solution: response.data.solution,\n          parsedSolution: response.data.parsed_solution\n        });\n        \n        // Save to Question Bank\n        try {\n          await axios.post('http://localhost:5000/api/save-solved-question', {\n            question_text: question.question_text,\n            solution: response.data.solution,\n            source: 'answer_chapterwise',\n            paper_id: selectedPaper?.id,\n            textbook_id: selectedTextbook?.uploadedId || selectedTextbook?.id,\n            chapter_name: chapterContext,\n            timestamp: new Date().toISOString()\n          });\n          console.log('✅ Question saved to Question Bank');\n        } catch (saveErr) {\n          console.error('Failed to save to Question Bank:', saveErr);\n          // Don't show error to user, just log it\n        }\n      } else {\n        alert('Failed to solve question: ' + (response.data.error || 'Unknown error'));\n      }\n    } catch (error) {\n      console.error('Error solving question:', error);\n      alert('Error solving question: ' + (error.response?.data?.error || error.message));\n    } finally {\n      setSolvingQuestion(false);\n    }\n  };\n\n  const estimateQuestionPageNumber = (questionText, chapterData) => {\n    // Estimate specific page range within chapter based on question content\n    if (!chapterData || !chapterData.pages) {\n      return 'N/A'; // Return default if no page data\n    }\n    \n    const { pages } = chapterData;\n    const [startPage, endPage] = pages.split('-').map(p => parseInt(p.trim()));\n    const totalPages = endPage - startPage + 1;\n    \n    // Define sub-topics with their relative position in chapter (0-1)\n    const subTopicPositions = {\n      // Electricity sub-topics\n      'electric current': 0.1,\n      'potential difference': 0.2,\n      'ohm law': 0.3,\n      'resistance': 0.3,\n      'series circuit': 0.5,\n      'parallel circuit': 0.6,\n      'heating effect': 0.7,\n      'electric power': 0.8,\n      'joule law': 0.9,\n      \n      // Magnetic Effects\n      'magnetic field': 0.1,\n      'right hand rule': 0.2,\n      'electromagnet': 0.3,\n      'solenoid': 0.4,\n      'force on conductor': 0.5,\n      'electric motor': 0.6,\n      'electromagnetic induction': 0.7,\n      'generator': 0.8,\n      'fleming': 0.8,\n      \n      // Light - Reflection and Refraction\n      'law of reflection': 0.1,\n      'plane mirror': 0.15,\n      'spherical mirror': 0.2,\n      'concave mirror': 0.3,\n      'convex mirror': 0.4,\n      'mirror formula': 0.45,\n      'refraction': 0.5,\n      'refractive index': 0.55,\n      'snell law': 0.6,\n      'lens': 0.65,\n      'concave lens': 0.7,\n      'convex lens': 0.75,\n      'lens formula': 0.8,\n      'power of lens': 0.9,\n      \n      // Quadratic Equations\n      'standard form': 0.1,\n      'factorization': 0.2,\n      'completing square': 0.4,\n      'quadratic formula': 0.6,\n      'discriminant': 0.7,\n      'nature of roots': 0.8,\n      'word problem': 0.9,\n      \n      // Triangles\n      'similar triangle': 0.2,\n      'basic proportionality': 0.3,\n      'criteria for similarity': 0.4,\n      'area of similar': 0.5,\n      'pythagoras theorem': 0.6,\n      'converse of pythagoras': 0.7,\n      'triangle inequality': 0.8,\n      \n      // Coordinate Geometry\n      'distance formula': 0.2,\n      'section formula': 0.4,\n      'midpoint': 0.5,\n      'area of triangle': 0.6,\n      'collinear': 0.7,\n      'slope': 0.8,\n      \n      // Trigonometry\n      'trigonometric ratio': 0.1,\n      'sine': 0.2,\n      'cosine': 0.3,\n      'tangent': 0.4,\n      'complementary angle': 0.5,\n      'trigonometric identity': 0.6,\n      'angle of elevation': 0.7,\n      'angle of depression': 0.8,\n      'height and distance': 0.9,\n      \n      // Statistics\n      'mean': 0.2,\n      'median': 0.4,\n      'mode': 0.6,\n      'cumulative frequency': 0.7,\n      'ogive': 0.8,\n      \n      // Probability\n      'theoretical probability': 0.3,\n      'experimental probability': 0.5,\n      'sample space': 0.6,\n      'mutually exclusive': 0.8,\n      \n      // Chemistry - Acids, Bases and Salts\n      'acid': 0.1,\n      'base': 0.2,\n      'indicator': 0.3,\n      'ph scale': 0.4,\n      'neutralization': 0.5,\n      'salt': 0.6,\n      'water of crystallization': 0.8,\n      \n      // Biology - Life Processes\n      'nutrition': 0.1,\n      'autotrophic': 0.15,\n      'heterotrophic': 0.2,\n      'photosynthesis': 0.25,\n      'digestion': 0.3,\n      'respiration': 0.5,\n      'aerobic': 0.55,\n      'anaerobic': 0.6,\n      'transportation': 0.7,\n      'excretion': 0.85\n    };\n    \n    const lowerText = questionText.toLowerCase();\n    let estimatedPosition = 0.5; // Default to middle\n    let matchFound = false;\n    \n    // Find the most specific sub-topic match\n    for (const [subTopic, position] of Object.entries(subTopicPositions)) {\n      if (lowerText.includes(subTopic)) {\n        estimatedPosition = position;\n        matchFound = true;\n        break; // Use first match (most specific)\n      }\n    }\n    \n    // Calculate estimated page range (±2 pages from estimated position)\n    const estimatedPage = Math.round(startPage + (totalPages * estimatedPosition));\n    const rangeStart = Math.max(startPage, estimatedPage - 2);\n    const rangeEnd = Math.min(endPage, estimatedPage + 2);\n    \n    return matchFound ? `${rangeStart}-${rangeEnd}` : pages;\n  };\n\n  const handlePageClick = (pageRange) => {\n    const [startPage, endPage] = pageRange.split('-').map(p => parseInt(p.trim()));\n    setCurrentPage(startPage);\n    setTextbookPageToShow({\n      textbook: selectedTextbook,\n      chapter: selectedChapter.name,\n      pageRange: pageRange,\n      startPage: startPage,\n      endPage: endPage || startPage\n    });\n    setShowTextbookModal(true);\n  };\n\n  const handleNextPage = () => {\n    if (currentPage < textbookPageToShow.endPage) {\n      const nextPage = currentPage + 1;\n      console.log('Next page:', nextPage);\n      setPdfLoading(true);\n      setCurrentPage(nextPage);\n      setTimeout(() => setPdfLoading(false), 1000);\n    }\n  };\n\n  const handlePrevPage = () => {\n    if (currentPage > textbookPageToShow.startPage) {\n      const prevPage = currentPage - 1;\n      console.log('Previous page:', prevPage);\n      setPdfLoading(true);\n      setCurrentPage(prevPage);\n      setTimeout(() => setPdfLoading(false), 1000);\n    }\n  };\n\n  const handleCloseModal = () => {\n    setShowTextbookModal(false);\n    setTextbookPageToShow(null);\n    setCurrentPage(1);\n  };\n\n  const filterQuestionsByChapter = (questions, chapter) => {\n    // Enhanced keyword matching with scoring system for more focused results\n    const chapterKeywords = {\n      'Electricity': {\n        primary: ['current', 'voltage', 'resistance', 'ohm', 'circuit', 'electric power', 'electrical energy'],\n        secondary: ['joule', 'watt', 'ampere', 'volt', 'resistor', 'conductor', 'insulator']\n      },\n      'Magnetic Effects of Current': {\n        primary: ['magnetic field', 'electromagnet', 'solenoid', 'motor', 'generator', 'fleming'],\n        secondary: ['magnet', 'electromagnetic induction', 'armature', 'commutator']\n      },\n      'Light - Reflection and Refraction': {\n        primary: ['reflection', 'refraction', 'mirror', 'lens', 'focal length', 'image formation'],\n        secondary: ['concave', 'convex', 'ray diagram', 'optical', 'refractive index']\n      },\n      'Human Eye and Colourful World': {\n        primary: ['eye', 'retina', 'cornea', 'spectrum', 'dispersion', 'rainbow', 'prism'],\n        secondary: ['vision', 'myopia', 'hypermetropia', 'presbyopia', 'cataract']\n      },\n      'Sources of Energy': {\n        primary: ['renewable energy', 'solar energy', 'wind energy', 'fossil fuel', 'nuclear energy'],\n        secondary: ['biogas', 'hydroelectric', 'geothermal', 'tidal energy']\n      },\n      'Chemical Reactions and Equations': {\n        primary: ['chemical reaction', 'chemical equation', 'reactant', 'product', 'balanced equation'],\n        secondary: ['oxidation', 'reduction', 'decomposition', 'combination', 'displacement']\n      },\n      'Acids, Bases and Salts': {\n        primary: ['acid', 'base', 'salt', 'ph scale', 'neutralization'],\n        secondary: ['alkali', 'indicator', 'litmus', 'acidic', 'basic']\n      },\n      'Metals and Non-metals': {\n        primary: ['metal', 'non-metal', 'metalloid', 'reactivity series', 'corrosion'],\n        secondary: ['alloy', 'ore', 'extraction', 'metallic', 'ionic bond']\n      },\n      'Carbon and its Compounds': {\n        primary: ['carbon compound', 'organic compound', 'hydrocarbon', 'functional group'],\n        secondary: ['alkane', 'alkene', 'alkyne', 'alcohol', 'carboxylic acid', 'ester']\n      },\n      'Life Processes': {\n        primary: ['nutrition', 'respiration', 'transportation', 'excretion', 'photosynthesis'],\n        secondary: ['digestion', 'cellular respiration', 'transpiration', 'kidney']\n      },\n      'Control and Coordination': {\n        primary: ['nervous system', 'hormone', 'endocrine', 'reflex action', 'neuron'],\n        secondary: ['brain', 'spinal cord', 'synapse', 'receptor', 'effector']\n      },\n      'How do Organisms Reproduce': {\n        primary: ['reproduction', 'sexual reproduction', 'asexual reproduction', 'fertilization'],\n        secondary: ['gamete', 'zygote', 'fission', 'budding', 'vegetative propagation']\n      },\n      'Heredity and Evolution': {\n        primary: ['heredity', 'inheritance', 'gene', 'chromosome', 'evolution', 'natural selection'],\n        secondary: ['dna', 'darwin', 'variation', 'speciation', 'fossil']\n      },\n      'Our Environment': {\n        primary: ['ecosystem', 'food chain', 'food web', 'biodegradable', 'ozone layer'],\n        secondary: ['environment', 'pollution', 'greenhouse effect', 'decomposer']\n      },\n      'Real Numbers': {\n        primary: ['real number', 'rational number', 'irrational number', 'euclid', 'hcf', 'lcm'],\n        secondary: ['prime', 'composite', 'fundamental theorem']\n      },\n      'Polynomials': {\n        primary: ['polynomial', 'degree of polynomial', 'zero of polynomial', 'coefficient'],\n        secondary: ['quadratic polynomial', 'cubic polynomial', 'factorization']\n      },\n      'Pair of Linear Equations in Two Variables': {\n        primary: ['linear equation', 'simultaneous equation', 'substitution method', 'elimination method'],\n        secondary: ['cross multiplication', 'graphical method', 'consistent', 'inconsistent']\n      },\n      'Quadratic Equations': {\n        primary: ['quadratic equation', 'discriminant', 'roots of equation', 'quadratic formula'],\n        secondary: ['x²', 'x^2', 'factorization', 'completing square']\n      },\n      'Arithmetic Progressions': {\n        primary: ['arithmetic progression', 'common difference', 'nth term', 'sum of ap'],\n        secondary: ['ap', 'arithmetic sequence', 'series']\n      },\n      'Triangles': {\n        primary: ['similar triangle', 'congruent triangle', 'pythagoras theorem', 'triangle theorem'],\n        secondary: ['area of triangle', 'perimeter', 'altitude', 'median']\n      },\n      'Coordinate Geometry': {\n        primary: ['coordinate', 'distance formula', 'section formula', 'midpoint formula'],\n        secondary: ['slope', 'x-axis', 'y-axis', 'cartesian plane']\n      },\n      'Introduction to Trigonometry': {\n        primary: ['trigonometry', 'trigonometric ratio', 'sine', 'cosine', 'tangent'],\n        secondary: ['sin', 'cos', 'tan', 'angle', 'θ', 'theta']\n      },\n      'Some Applications of Trigonometry': {\n        primary: ['height and distance', 'angle of elevation', 'angle of depression', 'line of sight'],\n        secondary: ['trigonometric application', 'tower', 'building height']\n      },\n      'Circles': {\n        primary: ['circle', 'tangent to circle', 'chord', 'secant', 'circle theorem'],\n        secondary: ['radius', 'diameter', 'arc', 'segment']\n      },\n      'Areas Related to Circles': {\n        primary: ['area of circle', 'sector', 'segment of circle', 'circumference'],\n        secondary: ['π', 'pi', 'circular region', 'annulus']\n      },\n      'Surface Areas and Volumes': {\n        primary: ['surface area', 'volume', 'total surface area', 'curved surface area'],\n        secondary: ['cube', 'cuboid', 'cylinder', 'cone', 'sphere', 'hemisphere']\n      },\n      'Statistics': {\n        primary: ['mean', 'median', 'mode', 'frequency distribution', 'cumulative frequency'],\n        secondary: ['data', 'class interval', 'grouped data', 'ogive']\n      },\n      'Probability': {\n        primary: ['probability', 'theoretical probability', 'experimental probability', 'random experiment'],\n        secondary: ['event', 'outcome', 'sample space', 'certain', 'impossible']\n      }\n    };\n\n    const chapterData = chapterKeywords[chapter];\n    if (!chapterData) {\n      // Fallback to simple keyword matching\n      const keywords = chapter.toLowerCase().split(' ');\n      return questions.filter(q => {\n        const questionText = q.question_text.toLowerCase();\n        return keywords.some(keyword => questionText.includes(keyword));\n      });\n    }\n\n    // Score-based filtering for more focused results\n    return questions.filter(q => {\n      const questionText = q.question_text.toLowerCase();\n      let score = 0;\n\n      // Primary keywords are worth 3 points\n      chapterData.primary.forEach(keyword => {\n        if (questionText.includes(keyword.toLowerCase())) {\n          score += 3;\n        }\n      });\n\n      // Secondary keywords are worth 1 point\n      chapterData.secondary.forEach(keyword => {\n        if (questionText.includes(keyword.toLowerCase())) {\n          score += 1;\n        }\n      });\n\n      // Require minimum score of 2 for more focused results\n      return score >= 2;\n    });\n  };\n\n  return (\n    <div className=\"chapter-questions\">\n      <div className=\"chapter-header\">\n        <h2>📖 Answer Chapterwise</h2>\n        <p>Select a question paper, textbook, and chapter to view related questions</p>\n      </div>\n\n      {message.text && (\n        <div className={`message ${message.type}`}>\n          {message.text}\n        </div>\n      )}\n\n      <div className=\"chapter-content\">\n        {/* Side by Side Selection Tables */}\n        <div className=\"selection-grid\">\n          {/* Textbook Selection - Left Side */}\n          <div className=\"selection-section textbook-selection-table\">\n            <h3>📚 Step 1: Select Textbook</h3>\n            {textbooks.length === 0 ? (\n              <p className=\"no-data\">No textbooks available. Please upload a textbook first.</p>\n            ) : (\n              <div className=\"selection-table-container\">\n                <table className=\"selection-table\">\n                  <thead>\n                    <tr>\n                      <th style={{width: '50px'}}>Select</th>\n                      <th>Textbook Name</th>\n                      <th>Subject</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {textbooks.map((textbook, index) => (\n                      <tr\n                        key={index}\n                        className={`selection-row ${selectedTextbook?.name === textbook.name ? 'selected' : ''} ${!textbook.uploadedId ? 'disabled' : ''}`}\n                        onClick={() => textbook.uploadedId && handleTextbookSelect(textbook)}\n                      >\n                        <td className=\"checkbox-cell\">\n                          <input\n                            type=\"checkbox\"\n                            checked={selectedTextbook?.name === textbook.name}\n                            onChange={() => textbook.uploadedId && handleTextbookSelect(textbook)}\n                            disabled={!textbook.uploadedId}\n                            onClick={(e) => e.stopPropagation()}\n                          />\n                        </td>\n                        <td className=\"name-cell\">\n                          <div className=\"cell-content\">\n                            <span className=\"icon\">{textbook.uploadedId ? '📕' : '📘'}</span>\n                            <span className=\"text\">{textbook.name}</span>\n                          </div>\n                        </td>\n                        <td className=\"subject-cell\">\n                          <span className=\"subject-badge\">{textbook.subject}</span>\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </div>\n            )}\n          </div>\n\n          {/* Paper Selection - Right Side */}\n          <div className=\"selection-section paper-selection-table\">\n            <h3>📄 Step 2: Select Question Paper</h3>\n            {papers.length === 0 ? (\n              <p className=\"no-data\">No question papers uploaded yet</p>\n            ) : (\n              <div className=\"selection-table-container\">\n                <table className=\"selection-table\">\n                  <thead>\n                    <tr>\n                      <th style={{width: '50px'}}>Select</th>\n                      <th>Paper Title</th>\n                      <th>Subject</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {papers.map(paper => (\n                      <tr\n                        key={paper.id}\n                        className={`selection-row ${selectedPaper?.id === paper.id ? 'selected' : ''}`}\n                        onClick={() => handlePaperSelect(paper)}\n                      >\n                        <td className=\"checkbox-cell\">\n                          <input\n                            type=\"checkbox\"\n                            checked={selectedPaper?.id === paper.id}\n                            onChange={() => handlePaperSelect(paper)}\n                            onClick={(e) => e.stopPropagation()}\n                          />\n                        </td>\n                        <td className=\"name-cell\">\n                          <div className=\"cell-content\">\n                            <span className=\"icon\">📝</span>\n                            <span className=\"text\">{paper.title}</span>\n                          </div>\n                        </td>\n                        <td className=\"subject-cell\">\n                          <span className=\"subject-badge\">{paper.subject}</span>\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </div>\n            )}\n          </div>\n        </div>\n\n        {/* AI Semantic Search Section */}\n        {selectedPaper && selectedTextbook && (\n          <div className=\"semantic-search-section\">\n            <div className=\"search-buttons\">\n              <button \n                className=\"load-last-btn\"\n                onClick={handleLoadLastMatch}\n                disabled={isSearching || !selectedTextbook.uploadedId}\n                title=\"Load previously saved AI search results (instant)\"\n              >\n                {isSearching ? (\n                  <>\n                    <span className=\"spinner-small\"></span>\n                    Loading...\n                  </>\n                ) : (\n                  <>\n                    📋 Show Last Match\n                  </>\n                )}\n              </button>\n              <button \n                className=\"index-and-match-btn\"\n                onClick={handleIndexAndMatch}\n                disabled={isSearching || !selectedTextbook.uploadedId || !selectedPaper}\n                title=\"Index textbook (if needed) and match questions with AI\"\n              >\n                {isSearching ? (\n                  <>\n                    <span className=\"spinner-small\"></span>\n                    Processing...\n                  </>\n                ) : (\n                  <>\n                    🚀 Index & Match Questions\n                  </>\n                )}\n              </button>\n            </div>\n          </div>\n        )}\n\n        {/* AI Search Results - Chapter List */}\n        {semanticSearchResults && Object.keys(semanticSearchResults).length > 0 && (\n          <div className=\"chapter-table-section ai-results\">\n            <h3>🤖 AI Search Results - Chapters with Questions</h3>\n            <div className=\"chapter-table-container\">\n              <table className=\"chapter-table\">\n                <thead>\n                  <tr>\n                    <th>#</th>\n                    <th>Chapter Name</th>\n                    <th>Pages</th>\n                    <th>Questions</th>\n                    <th>Action</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {Object.entries(semanticSearchResults).map(([chapterName, data], index) => {\n                    const avgConfidence = data.questions.reduce((sum, q) => {\n                      return sum + (q.chapters && q.chapters[0] ? q.chapters[0].similarity_score : 0);\n                    }, 0) / data.questions.length;\n                    \n                    const isUnmatched = chapterName === 'Unmatched Questions';\n                    \n                    return (\n                    <tr \n                      key={index}\n                      className={`${selectedChapter?.name === chapterName ? 'selected-row' : ''} ${isUnmatched ? 'unmatched-row' : ''}`}\n                    >\n                      <td className=\"chapter-num\">\n                        {isUnmatched ? '⚠️' : (data.chapter.chapter_number || (index + 1))}\n                      </td>\n                      <td className=\"chapter-name-cell\">\n                        <strong>{chapterName}</strong>\n                        {avgConfidence > 0 && !isUnmatched && (\n                          <div className=\"confidence-badge\" title={`Average AI confidence: ${avgConfidence.toFixed(1)}%`}>\n                            🎯 {avgConfidence.toFixed(0)}%\n                          </div>\n                        )}\n                        {isUnmatched && (\n                          <div className=\"unmatched-badge\" title=\"Questions that could not be matched to any chapter\">\n                            ⚠️ Needs Review\n                          </div>\n                        )}\n                      </td>\n                      <td className=\"pages-cell\">\n                        {isUnmatched ? 'N/A' : `${data.chapter.page_start}-${data.chapter.page_end}`}\n                      </td>\n                      <td className=\"count-cell\">\n                        <span className={`question-count ${isUnmatched ? 'unmatched-count' : 'has-questions'}`}>\n                          {data.questions.length}\n                        </span>\n                      </td>\n                      <td className=\"action-cell\">\n                        <button\n                          className={`view-btn ${isUnmatched ? 'unmatched-btn' : ''}`}\n                          onClick={() => handleChapterSelect({ name: chapterName })}\n                        >\n                          View Questions\n                        </button>\n                      </td>\n                    </tr>\n                    );\n                  })}\n                </tbody>\n              </table>\n            </div>\n            <div className=\"table-summary\">\n              <p>\n                <strong>Total Chapters:</strong> {Object.keys(semanticSearchResults).length} | \n                <strong> Total Questions:</strong> {Object.values(semanticSearchResults).reduce((sum, data) => sum + data.questions.length, 0)}\n              </p>\n            </div>\n          </div>\n        )}\n\n        {/* Questions Display */}\n        {selectedChapter && (\n          <div className=\"questions-display\">\n            <div className=\"questions-header-info\">\n              <h3>❓ Questions from: {selectedChapter.name}</h3>\n              <div className=\"chapter-meta\">\n                <span className=\"meta-item\">📖 <strong>Textbook:</strong> {selectedTextbook.name}</span>\n                <span className=\"meta-item\">📄 <strong>Pages:</strong> {selectedChapter.pages}</span>\n                <span className=\"meta-item\">📝 <strong>Paper:</strong> {selectedPaper.title}</span>\n              </div>\n            </div>\n            \n            {loading ? (\n              <div className=\"loading\">\n                <div className=\"spinner\"></div>\n                <p>Loading questions...</p>\n              </div>\n            ) : questions.length === 0 ? (\n              <div className=\"no-questions\">\n                <p>No questions found for this chapter</p>\n                <p className=\"hint\">Try selecting a different chapter</p>\n              </div>\n            ) : (\n              <div className=\"questions-list\">\n                {questions.map((q, index) => {\n                  // Use AI chapter data if available, otherwise use selected chapter\n                  let pageInfo = 'N/A';\n                  if (q.chapters && q.chapters.length > 0) {\n                    // AI search result - use first matched chapter\n                    const aiChapter = q.chapters[0];\n                    pageInfo = `${aiChapter.page_start}-${aiChapter.page_end}`;\n                  } else if (selectedChapter && selectedChapter.pages) {\n                    // Regular chapter selection - estimate pages\n                    pageInfo = estimateQuestionPageNumber(q.question_text, selectedChapter);\n                  }\n                  \n                  return (\n                  <div key={q.id} className=\"question-item\">\n                    <div className=\"question-header\">\n                      <span className=\"question-number\">Q{q.question_number}</span>\n                      <span \n                        className=\"chapter-page-badge clickable\"\n                        onClick={() => handlePageClick(pageInfo)}\n                        title=\"Click to view textbook pages\"\n                      >\n                        📖 Pages: {pageInfo}\n                      </span>\n                      {q.question_type && (\n                        <span className={`question-type ${q.question_type}`}>\n                          {q.question_type.toUpperCase()}\n                        </span>\n                      )}\n                      {q.marks && (\n                        <span className=\"question-marks\">{q.marks} marks</span>\n                      )}\n                      {q.has_math && (\n                        <span className=\"math-badge\">📐 Math</span>\n                      )}\n                      {(() => {\n                        // Always show debug info for has_diagram\n                        if (q.has_diagram) {\n                          console.log('Question has diagram:', {\n                            questionNumber: q.question_number,\n                            has_diagram: q.has_diagram,\n                            diagram_files: q.diagram_files,\n                            diagram_files_type: typeof q.diagram_files\n                          });\n                        }\n                        \n                        if (!q.has_diagram) return null;\n                        \n                        // Parse diagram_files if it's a string\n                        let diagramFiles = q.diagram_files;\n                        if (typeof diagramFiles === 'string') {\n                          try {\n                            diagramFiles = JSON.parse(diagramFiles);\n                          } catch (e) {\n                            console.error('Failed to parse diagram_files:', e);\n                            diagramFiles = [];\n                          }\n                        }\n                        \n                        // Ensure it's an array\n                        if (!Array.isArray(diagramFiles)) {\n                          diagramFiles = diagramFiles ? [diagramFiles] : [];\n                        }\n                        \n                        console.log('Processed diagram files:', diagramFiles);\n                        \n                        if (diagramFiles && diagramFiles.length > 0) {\n                          console.log('Rendering CLICKABLE diagram badge');\n                          return (\n                            <button \n                              type=\"button\"\n                              className=\"diagram-badge clickable\"\n                              onClick={(e) => {\n                                e.preventDefault();\n                                e.stopPropagation();\n                                console.log('🎯 DIAGRAM BUTTON CLICKED!', diagramFiles);\n                                setSelectedDiagram({\n                                  questionNumber: q.question_number,\n                                  diagrams: diagramFiles\n                                });\n                              }}\n                              title=\"Click to view diagram\"\n                              style={{\n                                cursor: 'pointer',\n                                pointerEvents: 'auto'\n                              }}\n                            >\n                              📊 Diagram\n                            </button>\n                          );\n                        } else {\n                          console.log('Rendering STATIC diagram badge (no files)');\n                          return <span className=\"diagram-badge\">📊 Diagram</span>;\n                        }\n                      })()}\n                      {(() => {\n                        // Check if question has chapter match reasoning\n                        const hasChapterReasoning = q.chapters && q.chapters.length > 0 && q.chapters[0].llm_reasoning;\n                        \n                        if (hasChapterReasoning) {\n                          return (\n                            <button \n                              className=\"reasoning-btn\"\n                              onClick={() => setSelectedReasoning({\n                                questionNumber: q.question_number,\n                                reasoning: q.chapters[0].llm_reasoning,\n                                chapterTitle: q.chapters[0].chapter_title,\n                                confidence: q.chapters[0].similarity_score,\n                                pageRange: `${q.chapters[0].page_start}-${q.chapters[0].page_end}`\n                              })}\n                              title=\"View AI chapter matching reasoning\"\n                            >\n                              🧠 Why This Chapter?\n                            </button>\n                          );\n                        }\n                        \n                        // Fallback: show parsed data if available\n                        let parsedData = q.parsed_data;\n                        if (typeof parsedData === 'string') {\n                          try {\n                            parsedData = JSON.parse(parsedData);\n                          } catch (e) {\n                            parsedData = {};\n                          }\n                        }\n                        return parsedData && Object.keys(parsedData).length > 0 && (\n                          <button \n                            className=\"reasoning-btn\"\n                            onClick={() => setSelectedReasoning({\n                              questionNumber: q.question_number,\n                              reasoning: 'No chapter matching reasoning available',\n                              llmResponse: JSON.stringify(parsedData, null, 2)\n                            })}\n                            title=\"View AI parsed data\"\n                          >\n                            🧠 AI Data\n                          </button>\n                        );\n                      })()}\n                      <button \n                        className=\"solve-btn\"\n                        onClick={() => handleSolveQuestion(q)}\n                        disabled={solvingQuestion}\n                        title=\"Get detailed step-by-step solution\"\n                      >\n                        {solvingQuestion ? '⏳ Solving...' : '✨ Solve Question'}\n                      </button>\n                    </div>\n                    <div className=\"question-text\">\n                      {q.question_text}\n                    </div>\n                    {(() => {\n                      // Parse sub_parts if it's a string\n                      let subParts = q.sub_parts;\n                      if (typeof subParts === 'string') {\n                        try {\n                          subParts = JSON.parse(subParts);\n                        } catch (e) {\n                          subParts = [];\n                        }\n                      }\n                      return subParts && Array.isArray(subParts) && subParts.length > 0 && (\n                        <div className=\"sub-parts\">\n                          <strong>Sub-parts:</strong> {subParts.join(', ')}\n                        </div>\n                      );\n                    })()}\n                  </div>\n                  );\n                })}\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n\n      {/* Textbook Page Modal */}\n      {showTextbookModal && textbookPageToShow && (\n        <div className=\"textbook-modal-overlay\" onClick={handleCloseModal}>\n          <div className=\"textbook-modal-content\" onClick={(e) => e.stopPropagation()}>\n            <div className=\"textbook-modal-header\">\n              <div className=\"modal-title-section\">\n                <h2>📖 {textbookPageToShow.textbook.name}</h2>\n                <p className=\"modal-subtitle\">\n                  Chapter: {textbookPageToShow.chapter} | Pages: {textbookPageToShow.pageRange}\n                </p>\n              </div>\n              <button \n                className=\"modal-close-btn\"\n                onClick={handleCloseModal}\n              >\n                ✕\n              </button>\n            </div>\n            \n            <div className=\"textbook-modal-body\">\n              <div className=\"textbook-viewer\">\n                <div className=\"page-info\">\n                  <span className=\"current-page-indicator\">\n                    📄 Page {currentPage} of {textbookPageToShow.pageRange}\n                  </span>\n                </div>\n                \n                {/* PDF Viewer - Using uploaded textbook */}\n                {textbookPageToShow.textbook.uploadedFile ? (\n                  <div className=\"pdf-embed-container\">\n                    {pdfLoading && (\n                      <div className=\"pdf-loading-overlay\">\n                        <div className=\"spinner\"></div>\n                        <p>Loading page {currentPage}...</p>\n                      </div>\n                    )}\n                    <iframe\n                      key={`pdf-${currentPage}`}\n                      src={`http://localhost:5000/api/textbook-pdf/${textbookPageToShow.textbook.uploadedId}#page=${currentPage}&zoom=page-fit`}\n                      title={`Textbook Page ${currentPage}`}\n                      className=\"textbook-pdf-iframe\"\n                      frameBorder=\"0\"\n                      allow=\"fullscreen\"\n                      onLoad={() => setPdfLoading(false)}\n                    />\n                  </div>\n                ) : (\n                  <div className=\"no-textbook-message\">\n                    <div className=\"external-icon\">📚</div>\n                    <h3>No Textbook Uploaded</h3>\n                    <p className=\"viewer-description\">\n                      Please upload a textbook file for {textbookPageToShow.textbook.name} to view pages.\n                    </p>\n                    <div className=\"link-info\">\n                      <p><strong>Textbook:</strong> {textbookPageToShow.textbook.name}</p>\n                      <p><strong>Chapter:</strong> {textbookPageToShow.chapter}</p>\n                      <p><strong>Pages:</strong> {textbookPageToShow.pageRange}</p>\n                      <p className=\"upload-hint\">Go to \"Upload Papers\" menu to upload textbook PDFs</p>\n                    </div>\n                  </div>\n                )}\n\n                {/* Page Navigation */}\n                <div className=\"page-navigation\">\n                  <button \n                    className=\"nav-btn\"\n                    onClick={handlePrevPage}\n                    disabled={currentPage <= textbookPageToShow.startPage}\n                  >\n                    ← Previous\n                  </button>\n                  <span className=\"page-display\">\n                    Page {currentPage}\n                  </span>\n                  <button \n                    className=\"nav-btn\"\n                    onClick={handleNextPage}\n                    disabled={currentPage >= textbookPageToShow.endPage}\n                  >\n                    Next →\n                  </button>\n                </div>\n              </div>\n            </div>\n            \n            <div className=\"textbook-modal-footer\">\n              <div className=\"footer-info\">\n                <span className=\"page-count\">\n                  {textbookPageToShow.endPage - textbookPageToShow.startPage + 1} pages in range\n                </span>\n              </div>\n              <button \n                className=\"close-modal-btn\"\n                onClick={handleCloseModal}\n              >\n                Close\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Reasoning Modal */}\n      {selectedReasoning && (\n        <div className=\"reasoning-modal\" onClick={() => setSelectedReasoning(null)}>\n          <div className=\"reasoning-modal-content\" onClick={(e) => e.stopPropagation()}>\n            <div className=\"reasoning-modal-header\">\n              <h3>🧠 Chapter Matching Analysis - Q{selectedReasoning.questionNumber}</h3>\n              <button className=\"close-reasoning-btn\" onClick={() => setSelectedReasoning(null)}>✕</button>\n            </div>\n            \n            <div className=\"reasoning-modal-body\">\n              {selectedReasoning.chapterTitle && (\n                <div className=\"chapter-match-info\">\n                  <div className=\"match-detail\">\n                    <span className=\"match-label\">📚 Matched Chapter:</span>\n                    <span className=\"match-value\">{selectedReasoning.chapterTitle}</span>\n                  </div>\n                  <div className=\"match-detail\">\n                    <span className=\"match-label\">📄 Pages:</span>\n                    <span className=\"match-value\">{selectedReasoning.pageRange}</span>\n                  </div>\n                  {selectedReasoning.confidence && (\n                    <div className=\"match-detail\">\n                      <span className=\"match-label\">🎯 Confidence:</span>\n                      <span className=\"match-value\">{selectedReasoning.confidence}%</span>\n                    </div>\n                  )}\n                </div>\n              )}\n              \n              <div className=\"reasoning-section\">\n                <h4>💭 AI Reasoning:</h4>\n                <div className=\"reasoning-content\">\n                  {selectedReasoning.reasoning}\n                </div>\n              </div>\n              \n              {selectedReasoning.llmResponse && (\n                <div className=\"llm-response-section\">\n                  <h4>🤖 Technical Details (JSON):</h4>\n                  <div className=\"llm-response-content\">\n                    <pre>{selectedReasoning.llmResponse}</pre>\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Solution Modal */}\n      {selectedSolution && (\n        <div className=\"solution-modal\" onClick={() => setSelectedSolution(null)}>\n          <div className=\"solution-modal-content\" onClick={(e) => e.stopPropagation()}>\n            <div className=\"solution-modal-header\">\n              <div>\n                <h3>✨ Step-by-Step Solution - Q{selectedSolution.questionNumber}</h3>\n                <span className=\"solution-type-badge\">{selectedSolution.questionType}</span>\n              </div>\n              <button className=\"close-solution-btn\" onClick={() => setSelectedSolution(null)}>✕</button>\n            </div>\n            \n            <div className=\"solution-modal-body\">\n              {/* Question Display */}\n              <div className=\"solution-question-box\">\n                <h4>📝 Question:</h4>\n                <p>{selectedSolution.questionText}</p>\n              </div>\n\n              {/* Full Solution */}\n              <div className=\"solution-content\">\n                {(() => {\n                  const lines = selectedSolution.solution.split('\\n');\n                  let inDiagram = false;\n                  let diagramLines = [];\n                  let lastWasEmpty = false;\n                  let lastWasSection = false;\n                  let currentSection = null;\n                  const elements = [];\n                  \n                  lines.forEach((line, idx) => {\n                    // Detect ASCII art diagram patterns (box drawing characters)\n                    const isAsciiArt = line.match(/^[\\s]*[\\+\\-\\|\\/\\\\<>]+[\\s\\+\\-\\|\\/\\\\<>]*$/) || \n                                      line.match(/^[\\s]*[\\+\\-\\|]{3,}/) ||\n                                      line.match(/[\\+\\-]{5,}/) ||\n                                      (line.includes('|') && line.includes('+'));\n                    \n                    // Detect diagram start/end\n                    if (line.match(/^\\*\\*Diagram/i) || line.includes('```') || (!inDiagram && isAsciiArt)) {\n                      if (!inDiagram) {\n                        // Starting a diagram\n                        inDiagram = true;\n                        if (isAsciiArt) {\n                          diagramLines.push(line);\n                        }\n                      } else {\n                        // Ending a diagram\n                        if (line.includes('```') || line.match(/^\\*\\*Diagram/i)) {\n                          inDiagram = false;\n                        } else if (isAsciiArt) {\n                          diagramLines.push(line);\n                        } else {\n                          // End of ASCII art\n                          inDiagram = false;\n                        }\n                        \n                        if (!inDiagram && diagramLines.length > 0) {\n                          const diagram = diagramLines.join('\\n');\n                          diagramLines = [];\n                          elements.push(<pre key={idx} className=\"solution-diagram\">{diagram}</pre>);\n                          lastWasEmpty = false;\n                          lastWasSection = true;\n                        }\n                      }\n                      return;\n                    }\n                    \n                    // Collect diagram lines\n                    if (inDiagram) {\n                      diagramLines.push(line);\n                      return;\n                    }\n                    \n                    // Highlight section headers (bold text with **)\n                    if (line.match(/^\\*\\*.*\\*\\*:?$/)) {\n                      const sectionName = line.replace(/\\*\\*/g, '').replace(/:/g, '').trim().toLowerCase();\n                      currentSection = sectionName;\n                      elements.push(<h4 key={idx} className=\"solution-section-header\">{line.replace(/\\*\\*/g, '').replace(/:/g, '')}</h4>);\n                      lastWasEmpty = false;\n                      lastWasSection = true;\n                      return;\n                    }\n                    \n                    // Highlight final answer\n                    if (line.match(/FINAL ANSWER:/i)) {\n                      elements.push(\n                        <div key={idx} className=\"final-answer-box\">\n                          <div className=\"final-answer-icon\">🎯</div>\n                          <div className=\"final-answer-text\" dangerouslySetInnerHTML={{\n                            __html: line.replace(/FINAL ANSWER:/i, '').trim()\n                          }}></div>\n                        </div>\n                      );\n                      lastWasEmpty = false;\n                      lastWasSection = true;\n                      return;\n                    }\n                    \n                    // Highlight step numbers\n                    if (line.match(/^(Step \\d+:|^\\d+\\.)/)) {\n                      elements.push(\n                        <div key={idx} className=\"solution-step\" dangerouslySetInnerHTML={{\n                          __html: line\n                        }}></div>\n                      );\n                      lastWasEmpty = false;\n                      lastWasSection = false;\n                      return;\n                    }\n                    \n                    // Handle empty lines - only add one between sections\n                    if (!line.trim()) {\n                      // Don't add spacers within compact sections (given, find, formula)\n                      const compactSections = ['given', 'find', 'formula', 'concept', 'formula/concept'];\n                      const isCompactSection = compactSections.some(s => currentSection && currentSection.includes(s));\n                      \n                      if (!lastWasEmpty && lastWasSection && !isCompactSection) {\n                        elements.push(<div key={idx} className=\"section-spacer\"></div>);\n                        lastWasEmpty = true;\n                      }\n                      return;\n                    }\n                    \n                    // Format mathematical/scientific expressions\n                    const formatExpression = (text) => {\n                      return text\n                        // Preserve existing HTML entities\n                        .replace(/&/g, '&amp;')\n                        .replace(/</g, '&lt;')\n                        .replace(/>/g, '&gt;')\n                        // Keep special characters as-is (they're already Unicode)\n                        .replace(/\\*\\*(.+?)\\*\\*/g, '<strong>$1</strong>') // Bold\n                        .replace(/\\*(.+?)\\*/g, '<em>$1</em>'); // Italic\n                    };\n                    \n                    // Regular text with formatting\n                    const compactSections = ['given', 'find', 'formula', 'concept', 'formula/concept'];\n                    const isCompactSection = compactSections.some(s => currentSection && currentSection.includes(s));\n                    const textClass = isCompactSection ? 'solution-text compact' : 'solution-text';\n                    \n                    elements.push(\n                      <p key={idx} className={textClass} dangerouslySetInnerHTML={{\n                        __html: formatExpression(line)\n                      }}></p>\n                    );\n                    lastWasEmpty = false;\n                    lastWasSection = false;\n                  });\n                  \n                  return elements;\n                })()}\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Diagram Modal */}\n      {selectedDiagram && (\n        <div className=\"diagram-modal-overlay\" onClick={() => setSelectedDiagram(null)}>\n          <div className=\"diagram-modal-content\" onClick={(e) => e.stopPropagation()}>\n            <div className=\"diagram-modal-header\">\n              <h3>📊 Diagram - Q{selectedDiagram.questionNumber}</h3>\n              <button className=\"close-diagram-btn\" onClick={() => setSelectedDiagram(null)}>✕</button>\n            </div>\n            <div className=\"diagram-modal-body\">\n              {selectedDiagram.diagrams.map((diagram, idx) => (\n                <div key={idx} className=\"diagram-container\">\n                  <img \n                    src={`http://localhost:5000${diagram}`} \n                    alt={`Diagram ${idx + 1}`}\n                    className=\"diagram-image\"\n                    onError={(e) => {\n                      e.target.style.display = 'none';\n                      e.target.nextSibling.style.display = 'block';\n                    }}\n                  />\n                  <div className=\"diagram-error\" style={{display: 'none'}}>\n                    ⚠️ Failed to load diagram\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ChapterQuestions;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}