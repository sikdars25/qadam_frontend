{"ast":null,"code":"var _jsxFileName = \"D:\\\\AI\\\\_Programs\\\\CBSE\\\\aqnamic\\\\frontend\\\\src\\\\components\\\\ChapterQuestions.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './ChapterQuestions.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ChapterQuestions = () => {\n  _s();\n  const [papers, setPapers] = useState([]);\n  const [textbooks, setTextbooks] = useState([]);\n  const [selectedPaper, setSelectedPaper] = useState(null);\n  const [selectedTextbook, setSelectedTextbook] = useState(null);\n  const [chapters, setChapters] = useState([]);\n  const [chapterStats, setChapterStats] = useState([]);\n  const [selectedChapter, setSelectedChapter] = useState(null);\n  const [questions, setQuestions] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState({\n    type: '',\n    text: ''\n  });\n  const [showTextbookModal, setShowTextbookModal] = useState(false);\n  const [textbookPageToShow, setTextbookPageToShow] = useState(null);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [pdfLoading, setPdfLoading] = useState(false);\n  const [semanticSearchResults, setSemanticSearchResults] = useState(null);\n  const [isSearching, setIsSearching] = useState(false);\n  const [selectedReasoning, setSelectedReasoning] = useState(null);\n  const [selectedSolution, setSelectedSolution] = useState(null);\n  const [solvingQuestion, setSolvingQuestion] = useState(false);\n\n  // Predefined textbooks with chapters and page numbers\n  const defaultTextbooks = {\n    'Physics': [{\n      name: 'NCERT Physics Class 10',\n      pdfUrl: 'https://ncert.nic.in/textbook/pdf/keph101.pdf',\n      externalUrl: 'https://ncert.nic.in/textbook.php?keph1=0-8',\n      imageBasePath: '/textbooks/physics-class10/pages/',\n      chapters: [{\n        name: 'Electricity',\n        pages: '1-20'\n      }, {\n        name: 'Magnetic Effects of Current',\n        pages: '21-40'\n      }, {\n        name: 'Light - Reflection and Refraction',\n        pages: '41-65'\n      }, {\n        name: 'Human Eye and Colourful World',\n        pages: '66-85'\n      }, {\n        name: 'Sources of Energy',\n        pages: '86-105'\n      }]\n    }],\n    'Chemistry': [{\n      name: 'NCERT Chemistry Class 10',\n      pdfUrl: 'https://ncert.nic.in/textbook/pdf/kesc101.pdf',\n      externalUrl: 'https://ncert.nic.in/textbook.php?kesc1=0-8',\n      imageBasePath: '/textbooks/chemistry-class10/pages/',\n      chapters: [{\n        name: 'Chemical Reactions and Equations',\n        pages: '1-18'\n      }, {\n        name: 'Acids, Bases and Salts',\n        pages: '19-35'\n      }, {\n        name: 'Metals and Non-metals',\n        pages: '36-55'\n      }, {\n        name: 'Carbon and its Compounds',\n        pages: '56-80'\n      }, {\n        name: 'Periodic Classification of Elements',\n        pages: '81-95'\n      }]\n    }],\n    'Biology': [{\n      name: 'NCERT Biology Class 10',\n      pdfUrl: 'https://ncert.nic.in/textbook/pdf/kebo101.pdf',\n      externalUrl: 'https://ncert.nic.in/textbook.php?kebo1=0-8',\n      imageBasePath: '/textbooks/biology-class10/pages/',\n      chapters: [{\n        name: 'Life Processes',\n        pages: '1-25'\n      }, {\n        name: 'Control and Coordination',\n        pages: '26-45'\n      }, {\n        name: 'How do Organisms Reproduce',\n        pages: '46-70'\n      }, {\n        name: 'Heredity and Evolution',\n        pages: '71-90'\n      }, {\n        name: 'Our Environment',\n        pages: '91-110'\n      }]\n    }],\n    'Mathematics': [{\n      name: 'NCERT Mathematics Class 10',\n      pdfUrl: 'https://ncert.nic.in/textbook/pdf/kemh101.pdf',\n      externalUrl: 'https://ncert.nic.in/textbook.php?kemh1=0-16',\n      imageBasePath: '/textbooks/mathematics-class10/pages/',\n      chapters: [{\n        name: 'Real Numbers',\n        pages: '1-15'\n      }, {\n        name: 'Polynomials',\n        pages: '16-30'\n      }, {\n        name: 'Pair of Linear Equations in Two Variables',\n        pages: '31-50'\n      }, {\n        name: 'Quadratic Equations',\n        pages: '51-70'\n      }, {\n        name: 'Arithmetic Progressions',\n        pages: '71-85'\n      }, {\n        name: 'Triangles',\n        pages: '86-110'\n      }, {\n        name: 'Coordinate Geometry',\n        pages: '111-130'\n      }, {\n        name: 'Introduction to Trigonometry',\n        pages: '131-150'\n      }, {\n        name: 'Some Applications of Trigonometry',\n        pages: '151-165'\n      }, {\n        name: 'Circles',\n        pages: '166-185'\n      }, {\n        name: 'Areas Related to Circles',\n        pages: '186-200'\n      }, {\n        name: 'Surface Areas and Volumes',\n        pages: '201-225'\n      }, {\n        name: 'Statistics',\n        pages: '226-245'\n      }, {\n        name: 'Probability',\n        pages: '246-260'\n      }]\n    }]\n  };\n  useEffect(() => {\n    fetchPapers();\n    fetchAllTextbooks();\n  }, []);\n  useEffect(() => {\n    if (selectedPaper && selectedTextbook) {\n      calculateChapterStats();\n    }\n  }, [selectedPaper, selectedTextbook]);\n  const fetchPapers = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/uploaded-papers');\n      setPapers(response.data);\n    } catch (err) {\n      console.error('Error fetching papers:', err);\n      setMessage({\n        type: 'error',\n        text: 'Failed to load papers'\n      });\n    }\n  };\n  const fetchAllTextbooks = async () => {\n    try {\n      // Fetch all uploaded textbooks\n      const response = await axios.get('http://localhost:5000/api/textbooks');\n      const uploadedTextbooks = response.data || [];\n\n      // Use uploaded textbooks directly, with default chapter structure as fallback\n      const textbooksToDisplay = uploadedTextbooks.map(uploaded => {\n        var _defaultTextbooks$upl;\n        // Get default chapters for this subject if available\n        const defaultForSubject = (_defaultTextbooks$upl = defaultTextbooks[uploaded.subject]) === null || _defaultTextbooks$upl === void 0 ? void 0 : _defaultTextbooks$upl[0];\n        return {\n          name: uploaded.title,\n          // Use actual uploaded title\n          subject: uploaded.subject,\n          uploadedFile: uploaded.file_path,\n          uploadedId: uploaded.id,\n          uploadedTitle: uploaded.title,\n          chapters: (defaultForSubject === null || defaultForSubject === void 0 ? void 0 : defaultForSubject.chapters) || [],\n          // Use default chapters as template\n          pdfUrl: '',\n          externalUrl: '',\n          imageBasePath: ''\n        };\n      });\n      setTextbooks(textbooksToDisplay);\n\n      // If no textbooks uploaded, show message\n      if (textbooksToDisplay.length === 0) {\n        setMessage({\n          type: 'info',\n          text: 'No textbooks uploaded yet. Please upload a textbook first.'\n        });\n      }\n    } catch (err) {\n      console.error('Error fetching textbooks:', err);\n      setMessage({\n        type: 'error',\n        text: 'Failed to load textbooks. Please try again.'\n      });\n      setTextbooks([]);\n    }\n  };\n  const handlePaperSelect = paper => {\n    setSelectedPaper(paper);\n    setSelectedTextbook(null);\n    setSelectedChapter(null);\n    setQuestions([]);\n    setChapters([]);\n    setChapterStats([]);\n    setSemanticSearchResults(null); // Clear previous search results\n\n    // Don't reload textbooks - they're already loaded with correct names\n    // Just clear the selection and let user select from existing list\n  };\n  const handleTextbookSelect = textbook => {\n    setSelectedTextbook(textbook);\n    setSelectedChapter(null);\n    setQuestions([]);\n    setChapters(textbook.chapters);\n    setSemanticSearchResults(null); // Clear previous search results when textbook changes\n\n    // Log textbook info for debugging\n    console.log('Selected textbook:', textbook.name);\n    console.log('Has uploaded file:', !!textbook.uploadedId);\n\n    // Don't show selection message - table selection is clear enough\n  };\n  const calculateChapterStats = async () => {\n    if (!selectedPaper || !selectedTextbook) return;\n    try {\n      // Fetch all questions from the selected paper\n      const response = await axios.get(`http://localhost:5000/api/parsed-questions?paper_id=${selectedPaper.id}`);\n      const allQuestions = response.data;\n\n      // Calculate question count for each chapter\n      const stats = selectedTextbook.chapters.map(chapter => {\n        const chapterQuestions = filterQuestionsByChapter(allQuestions, chapter.name);\n        return {\n          ...chapter,\n          questionCount: chapterQuestions.length\n        };\n      });\n      setChapterStats(stats);\n    } catch (err) {\n      console.error('Error calculating chapter stats:', err);\n    }\n  };\n  const handleClearResults = () => {\n    setSemanticSearchResults(null);\n    setQuestions([]);\n    setSelectedChapter(null);\n    setChapterStats([]); // Clear the chapter stats table\n    setMessage({\n      type: 'info',\n      text: 'Search results cleared. Ready for new search.'\n    });\n  };\n  const handleIndexAndMatch = async () => {\n    // Unified workflow: Index textbook (if needed) + Run AI Search\n    if (!selectedPaper || !selectedTextbook) {\n      setMessage({\n        type: 'warning',\n        text: 'Please select both a question paper and textbook first'\n      });\n      return;\n    }\n    if (!selectedTextbook.uploadedId) {\n      setMessage({\n        type: 'warning',\n        text: 'Please upload the textbook first'\n      });\n      return;\n    }\n    setIsSearching(true);\n    try {\n      // Step 1: Check if textbook is already indexed by trying to run search\n      console.log('🚀 Starting Index & Match workflow...');\n      setMessage({\n        type: 'info',\n        text: '🔍 Checking if textbook is indexed...'\n      });\n      let needsIndexing = false;\n\n      // Try to get chapters to see if indexed\n      try {\n        await axios.get(`http://localhost:5000/api/textbook-chapters/${selectedTextbook.uploadedId}`);\n        console.log('✓ Textbook already indexed');\n        setMessage({\n          type: 'info',\n          text: '✓ Textbook already indexed. Running AI search...'\n        });\n      } catch (err) {\n        var _err$response, _err$response2, _err$response2$data, _err$response2$data$e;\n        if (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.status) === 404 || (_err$response2 = err.response) !== null && _err$response2 !== void 0 && (_err$response2$data = _err$response2.data) !== null && _err$response2$data !== void 0 && (_err$response2$data$e = _err$response2$data.error) !== null && _err$response2$data$e !== void 0 && _err$response2$data$e.includes('No vector index')) {\n          needsIndexing = true;\n          console.log('⚠ Textbook not indexed, will index now');\n        } else {\n          throw err;\n        }\n      }\n\n      // Step 2: Index if needed\n      if (needsIndexing) {\n        setMessage({\n          type: 'info',\n          text: '📚 Indexing textbook... This may take a few minutes.'\n        });\n        const indexResponse = await axios.post(`http://localhost:5000/api/index-textbook/${selectedTextbook.uploadedId}`);\n        if (!indexResponse.data.success) {\n          throw new Error(indexResponse.data.error || 'Indexing failed');\n        }\n        console.log(`✓ Indexed ${indexResponse.data.chapters_count} chapters`);\n        setMessage({\n          type: 'info',\n          text: `✅ Indexed ${indexResponse.data.chapters_count} chapters. Now matching questions...`\n        });\n      }\n\n      // Step 3: Run AI Search\n      setMessage({\n        type: 'info',\n        text: '🤖 Running AI Search with LLM analysis...'\n      });\n\n      // Fetch all questions from the selected paper\n      const questionsResponse = await axios.get(`http://localhost:5000/api/parsed-questions?paper_id=${selectedPaper.id}`);\n      const allQuestions = questionsResponse.data;\n\n      // Use semantic search to map questions to chapters\n      const mappingResponse = await axios.post('http://localhost:5000/api/map-questions-to-chapters', {\n        questions: allQuestions,\n        textbook_id: selectedTextbook.uploadedId\n      });\n      if (mappingResponse.data.success) {\n        const mappedQuestions = mappingResponse.data.mapped_questions;\n\n        // Group questions by chapter\n        const chapterGroups = {};\n        const unmatchedQuestions = [];\n        mappedQuestions.forEach(q => {\n          if (q.chapters && q.chapters.length > 0) {\n            const topChapter = q.chapters[0];\n            const chapterKey = topChapter.chapter_title;\n            if (!chapterGroups[chapterKey]) {\n              chapterGroups[chapterKey] = {\n                chapter: topChapter,\n                questions: []\n              };\n            }\n            chapterGroups[chapterKey].questions.push(q);\n          } else {\n            unmatchedQuestions.push(q);\n          }\n        });\n\n        // Add unmatched questions if any\n        if (unmatchedQuestions.length > 0) {\n          chapterGroups['Unmatched Questions'] = {\n            chapter: {\n              chapter_number: 0,\n              chapter_title: 'Unmatched Questions',\n              page_start: 'N/A',\n              page_end: 'N/A',\n              similarity_score: 0\n            },\n            questions: unmatchedQuestions\n          };\n        }\n        const totalQuestions = Object.values(chapterGroups).reduce((sum, data) => sum + data.questions.length, 0);\n\n        // Clear old chapter stats\n        setChapterStats([]);\n        setSemanticSearchResults(chapterGroups);\n        setMessage({\n          type: 'success',\n          text: `🎉 Complete! Found ${Object.keys(chapterGroups).length} chapters with ${totalQuestions} questions (${unmatchedQuestions.length} unmatched). Click a chapter below.`\n        });\n\n        // Save results to database\n        await saveSearchResults(chapterGroups);\n      } else {\n        throw new Error('AI search failed');\n      }\n    } catch (err) {\n      var _err$response3, _err$response3$data;\n      console.error('Error in Index & Match workflow:', err);\n      const errorMsg = ((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : (_err$response3$data = _err$response3.data) === null || _err$response3$data === void 0 ? void 0 : _err$response3$data.error) || err.message;\n      setMessage({\n        type: 'error',\n        text: `Failed: ${errorMsg}`\n      });\n    } finally {\n      setIsSearching(false);\n    }\n  };\n  const handleIndexTextbook = async () => {\n    // Legacy function - kept for backward compatibility\n    if (!selectedTextbook || !selectedTextbook.uploadedId) {\n      setMessage({\n        type: 'warning',\n        text: 'Please select a textbook first'\n      });\n      return;\n    }\n    setIsSearching(true);\n    setMessage({\n      type: 'info',\n      text: '📚 Indexing textbook... This may take a few minutes.'\n    });\n    try {\n      const response = await axios.post(`http://localhost:5000/api/index-textbook/${selectedTextbook.uploadedId}`);\n      if (response.data.success) {\n        setMessage({\n          type: 'success',\n          text: `✅ Textbook indexed successfully! ${response.data.chapters_count} chapters indexed. You can now run AI semantic search.`\n        });\n      } else {\n        throw new Error(response.data.error || 'Indexing failed');\n      }\n    } catch (err) {\n      var _err$response4, _err$response4$data;\n      console.error('Error indexing textbook:', err);\n      setMessage({\n        type: 'error',\n        text: `Failed to index textbook: ${((_err$response4 = err.response) === null || _err$response4 === void 0 ? void 0 : (_err$response4$data = _err$response4.data) === null || _err$response4$data === void 0 ? void 0 : _err$response4$data.error) || err.message}`\n      });\n    } finally {\n      setIsSearching(false);\n    }\n  };\n  const handleRunSemanticSearch = async () => {\n    if (!selectedPaper || !selectedTextbook) {\n      setMessage({\n        type: 'warning',\n        text: 'Please select both a question paper and textbook first'\n      });\n      return;\n    }\n    if (!selectedTextbook.uploadedId) {\n      setMessage({\n        type: 'warning',\n        text: 'Please upload the textbook to use AI semantic search'\n      });\n      return;\n    }\n    setIsSearching(true);\n    setMessage({\n      type: 'info',\n      text: '🤖 Running AI Search with LLM analysis...'\n    });\n    try {\n      // Fetch all questions from the selected paper\n      const response = await axios.get(`http://localhost:5000/api/parsed-questions?paper_id=${selectedPaper.id}`);\n      const allQuestions = response.data;\n\n      // Use semantic search to map questions to chapters\n      const mappingResponse = await axios.post('http://localhost:5000/api/map-questions-to-chapters', {\n        questions: allQuestions,\n        textbook_id: selectedTextbook.uploadedId\n      });\n      if (mappingResponse.data.success) {\n        const mappedQuestions = mappingResponse.data.mapped_questions;\n\n        // Group questions by chapter\n        const chapterGroups = {};\n        const unmatchedQuestions = [];\n        mappedQuestions.forEach(q => {\n          if (q.chapters && q.chapters.length > 0) {\n            const topChapter = q.chapters[0]; // Use best match\n            const chapterKey = topChapter.chapter_title;\n            if (!chapterGroups[chapterKey]) {\n              chapterGroups[chapterKey] = {\n                chapter: topChapter,\n                questions: []\n              };\n            }\n            chapterGroups[chapterKey].questions.push(q);\n          } else {\n            // No chapter match found\n            unmatchedQuestions.push(q);\n          }\n        });\n\n        // Add unmatched questions as a separate group if any exist\n        if (unmatchedQuestions.length > 0) {\n          chapterGroups['Unmatched Questions'] = {\n            chapter: {\n              chapter_number: 0,\n              chapter_title: 'Unmatched Questions',\n              page_start: 'N/A',\n              page_end: 'N/A',\n              similarity_score: 0\n            },\n            questions: unmatchedQuestions\n          };\n        }\n        const totalQuestions = Object.values(chapterGroups).reduce((sum, data) => sum + data.questions.length, 0);\n        console.log('Chapter groups created:', Object.keys(chapterGroups));\n        console.log('Full chapter groups:', chapterGroups);\n\n        // Clear old chapter stats to show only AI results\n        setChapterStats([]);\n        setSemanticSearchResults(chapterGroups);\n        setMessage({\n          type: 'success',\n          text: `🤖 AI Search Complete! Found ${Object.keys(chapterGroups).length} chapters with ${totalQuestions} questions (${unmatchedQuestions.length} unmatched). Click on a chapter below to view questions.`\n        });\n\n        // Save results to database\n        await saveSearchResults(chapterGroups);\n      } else {\n        throw new Error('Semantic search failed');\n      }\n    } catch (err) {\n      var _err$response5, _err$response5$data;\n      console.error('Error in semantic search:', err);\n      const errorMsg = ((_err$response5 = err.response) === null || _err$response5 === void 0 ? void 0 : (_err$response5$data = _err$response5.data) === null || _err$response5$data === void 0 ? void 0 : _err$response5$data.error) || err.message;\n\n      // Check if it's an indexing issue\n      if (errorMsg.includes('No vector index found') || errorMsg.includes('index')) {\n        setMessage({\n          type: 'error',\n          text: '⚠️ Textbook not indexed. Please click \"Index Textbook\" button first.'\n        });\n      } else {\n        setMessage({\n          type: 'error',\n          text: `AI semantic search failed: ${errorMsg}`\n        });\n      }\n    } finally {\n      setIsSearching(false);\n    }\n  };\n  const saveSearchResults = async chapterGroups => {\n    try {\n      console.log('💾 Saving search results to database...');\n      console.log('  Paper ID:', selectedPaper.id);\n      console.log('  Textbook ID:', selectedTextbook.uploadedId);\n      console.log('  Chapters:', Object.keys(chapterGroups).length);\n      const response = await axios.post('http://localhost:5000/api/save-ai-search-results', {\n        paper_id: selectedPaper.id,\n        textbook_id: selectedTextbook.uploadedId,\n        search_results: chapterGroups\n      });\n      console.log('✓ Search results saved to database:', response.data);\n    } catch (error) {\n      var _error$response;\n      console.error('❌ Failed to save search results:', error);\n      console.error('  Error details:', (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data);\n      // Don't show error to user - this is a background operation\n    }\n  };\n  const handleLoadLastMatch = async () => {\n    if (!selectedPaper || !selectedTextbook || !selectedTextbook.uploadedId) {\n      setMessage({\n        type: 'warning',\n        text: 'Please select both a question paper and textbook first'\n      });\n      return;\n    }\n    setIsSearching(true);\n    setMessage({\n      type: 'info',\n      text: '📋 Loading last AI search results...'\n    });\n    console.log('📋 Loading last match...');\n    console.log('  Paper ID:', selectedPaper.id);\n    console.log('  Textbook ID:', selectedTextbook.uploadedId);\n    try {\n      const response = await axios.get(`http://localhost:5000/api/get-last-ai-search?paper_id=${selectedPaper.id}&textbook_id=${selectedTextbook.uploadedId}`);\n      console.log('  Response:', response.data);\n      if (response.data.success) {\n        const {\n          search_results,\n          total_chapters,\n          total_questions,\n          unmatched_count,\n          created_at\n        } = response.data;\n\n        // Clear old chapter stats\n        setChapterStats([]);\n        setSemanticSearchResults(search_results);\n\n        // Format the date\n        const date = new Date(created_at);\n        const timeAgo = getTimeAgo(date);\n        setMessage({\n          type: 'success',\n          text: `📋 Loaded previous results (${timeAgo}): ${total_chapters} chapters with ${total_questions} questions (${unmatched_count} unmatched)`\n        });\n      }\n    } catch (err) {\n      var _err$response6;\n      console.error('Error loading last match:', err);\n      if (((_err$response6 = err.response) === null || _err$response6 === void 0 ? void 0 : _err$response6.status) === 404) {\n        // Clear any existing results since no match found for this combination\n        setSemanticSearchResults(null);\n        setChapterStats([]);\n        setMessage({\n          type: 'info',\n          text: `No previous results found for \"${selectedPaper.title}\" with \"${selectedTextbook.name}\". Please run \"Index & Match Questions\" first.`\n        });\n      } else {\n        var _err$response7, _err$response7$data;\n        setMessage({\n          type: 'error',\n          text: `Failed to load previous results: ${((_err$response7 = err.response) === null || _err$response7 === void 0 ? void 0 : (_err$response7$data = _err$response7.data) === null || _err$response7$data === void 0 ? void 0 : _err$response7$data.error) || err.message}`\n        });\n      }\n    } finally {\n      setIsSearching(false);\n    }\n  };\n  const getTimeAgo = date => {\n    const seconds = Math.floor((new Date() - date) / 1000);\n    if (seconds < 60) return 'just now';\n    if (seconds < 3600) return `${Math.floor(seconds / 60)} minutes ago`;\n    if (seconds < 86400) return `${Math.floor(seconds / 3600)} hours ago`;\n    if (seconds < 604800) return `${Math.floor(seconds / 86400)} days ago`;\n    return date.toLocaleDateString();\n  };\n  const handleChapterSelect = chapterData => {\n    console.log('Selected chapter:', chapterData);\n    console.log('Available chapters in semanticSearchResults:', semanticSearchResults ? Object.keys(semanticSearchResults) : 'None');\n    setSelectedChapter(chapterData);\n    if (semanticSearchResults && semanticSearchResults[chapterData.name]) {\n      // Use semantic search results\n      const chapterQuestions = semanticSearchResults[chapterData.name].questions;\n      const chapterInfo = semanticSearchResults[chapterData.name].chapter;\n      console.log('Found chapter questions:', chapterQuestions.length);\n      console.log('Chapter info:', chapterInfo);\n      setQuestions(chapterQuestions);\n      setMessage({\n        type: 'success',\n        text: `Showing ${chapterQuestions.length} questions for: ${chapterData.name} (AI matched)`\n      });\n    } else {\n      console.warn('Chapter not found in semantic search results:', chapterData.name);\n      setMessage({\n        type: 'info',\n        text: 'Run AI Search to find questions for this chapter'\n      });\n      setQuestions([]);\n    }\n  };\n  const estimateQuestionPageNumber = (questionText, chapterData) => {\n    // Estimate specific page range within chapter based on question content\n    if (!chapterData || !chapterData.pages) {\n      return 'N/A'; // Return default if no page data\n    }\n    const {\n      pages\n    } = chapterData;\n    const [startPage, endPage] = pages.split('-').map(p => parseInt(p.trim()));\n    const totalPages = endPage - startPage + 1;\n\n    // Define sub-topics with their relative position in chapter (0-1)\n    const subTopicPositions = {\n      // Electricity sub-topics\n      'electric current': 0.1,\n      'potential difference': 0.2,\n      'ohm law': 0.3,\n      'resistance': 0.3,\n      'series circuit': 0.5,\n      'parallel circuit': 0.6,\n      'heating effect': 0.7,\n      'electric power': 0.8,\n      'joule law': 0.9,\n      // Magnetic Effects\n      'magnetic field': 0.1,\n      'right hand rule': 0.2,\n      'electromagnet': 0.3,\n      'solenoid': 0.4,\n      'force on conductor': 0.5,\n      'electric motor': 0.6,\n      'electromagnetic induction': 0.7,\n      'generator': 0.8,\n      'fleming': 0.8,\n      // Light - Reflection and Refraction\n      'law of reflection': 0.1,\n      'plane mirror': 0.15,\n      'spherical mirror': 0.2,\n      'concave mirror': 0.3,\n      'convex mirror': 0.4,\n      'mirror formula': 0.45,\n      'refraction': 0.5,\n      'refractive index': 0.55,\n      'snell law': 0.6,\n      'lens': 0.65,\n      'concave lens': 0.7,\n      'convex lens': 0.75,\n      'lens formula': 0.8,\n      'power of lens': 0.9,\n      // Quadratic Equations\n      'standard form': 0.1,\n      'factorization': 0.2,\n      'completing square': 0.4,\n      'quadratic formula': 0.6,\n      'discriminant': 0.7,\n      'nature of roots': 0.8,\n      'word problem': 0.9,\n      // Triangles\n      'similar triangle': 0.2,\n      'basic proportionality': 0.3,\n      'criteria for similarity': 0.4,\n      'area of similar': 0.5,\n      'pythagoras theorem': 0.6,\n      'converse of pythagoras': 0.7,\n      'triangle inequality': 0.8,\n      // Coordinate Geometry\n      'distance formula': 0.2,\n      'section formula': 0.4,\n      'midpoint': 0.5,\n      'area of triangle': 0.6,\n      'collinear': 0.7,\n      'slope': 0.8,\n      // Trigonometry\n      'trigonometric ratio': 0.1,\n      'sine': 0.2,\n      'cosine': 0.3,\n      'tangent': 0.4,\n      'complementary angle': 0.5,\n      'trigonometric identity': 0.6,\n      'angle of elevation': 0.7,\n      'angle of depression': 0.8,\n      'height and distance': 0.9,\n      // Statistics\n      'mean': 0.2,\n      'median': 0.4,\n      'mode': 0.6,\n      'cumulative frequency': 0.7,\n      'ogive': 0.8,\n      // Probability\n      'theoretical probability': 0.3,\n      'experimental probability': 0.5,\n      'sample space': 0.6,\n      'mutually exclusive': 0.8,\n      // Chemistry - Acids, Bases and Salts\n      'acid': 0.1,\n      'base': 0.2,\n      'indicator': 0.3,\n      'ph scale': 0.4,\n      'neutralization': 0.5,\n      'salt': 0.6,\n      'water of crystallization': 0.8,\n      // Biology - Life Processes\n      'nutrition': 0.1,\n      'autotrophic': 0.15,\n      'heterotrophic': 0.2,\n      'photosynthesis': 0.25,\n      'digestion': 0.3,\n      'respiration': 0.5,\n      'aerobic': 0.55,\n      'anaerobic': 0.6,\n      'transportation': 0.7,\n      'excretion': 0.85\n    };\n    const lowerText = questionText.toLowerCase();\n    let estimatedPosition = 0.5; // Default to middle\n    let matchFound = false;\n\n    // Find the most specific sub-topic match\n    for (const [subTopic, position] of Object.entries(subTopicPositions)) {\n      if (lowerText.includes(subTopic)) {\n        estimatedPosition = position;\n        matchFound = true;\n        break; // Use first match (most specific)\n      }\n    }\n\n    // Calculate estimated page range (±2 pages from estimated position)\n    const estimatedPage = Math.round(startPage + totalPages * estimatedPosition);\n    const rangeStart = Math.max(startPage, estimatedPage - 2);\n    const rangeEnd = Math.min(endPage, estimatedPage + 2);\n    return matchFound ? `${rangeStart}-${rangeEnd}` : pages;\n  };\n  const handlePageClick = pageRange => {\n    const [startPage, endPage] = pageRange.split('-').map(p => parseInt(p.trim()));\n    setCurrentPage(startPage);\n    setTextbookPageToShow({\n      textbook: selectedTextbook,\n      chapter: selectedChapter.name,\n      pageRange: pageRange,\n      startPage: startPage,\n      endPage: endPage || startPage\n    });\n    setShowTextbookModal(true);\n  };\n  const handleNextPage = () => {\n    if (currentPage < textbookPageToShow.endPage) {\n      const nextPage = currentPage + 1;\n      console.log('Next page:', nextPage);\n      setPdfLoading(true);\n      setCurrentPage(nextPage);\n      setTimeout(() => setPdfLoading(false), 1000);\n    }\n  };\n  const handlePrevPage = () => {\n    if (currentPage > textbookPageToShow.startPage) {\n      const prevPage = currentPage - 1;\n      console.log('Previous page:', prevPage);\n      setPdfLoading(true);\n      setCurrentPage(prevPage);\n      setTimeout(() => setPdfLoading(false), 1000);\n    }\n  };\n  const handleCloseModal = () => {\n    setShowTextbookModal(false);\n    setTextbookPageToShow(null);\n    setCurrentPage(1);\n  };\n  const filterQuestionsByChapter = (questions, chapter) => {\n    // Enhanced keyword matching with scoring system for more focused results\n    const chapterKeywords = {\n      'Electricity': {\n        primary: ['current', 'voltage', 'resistance', 'ohm', 'circuit', 'electric power', 'electrical energy'],\n        secondary: ['joule', 'watt', 'ampere', 'volt', 'resistor', 'conductor', 'insulator']\n      },\n      'Magnetic Effects of Current': {\n        primary: ['magnetic field', 'electromagnet', 'solenoid', 'motor', 'generator', 'fleming'],\n        secondary: ['magnet', 'electromagnetic induction', 'armature', 'commutator']\n      },\n      'Light - Reflection and Refraction': {\n        primary: ['reflection', 'refraction', 'mirror', 'lens', 'focal length', 'image formation'],\n        secondary: ['concave', 'convex', 'ray diagram', 'optical', 'refractive index']\n      },\n      'Human Eye and Colourful World': {\n        primary: ['eye', 'retina', 'cornea', 'spectrum', 'dispersion', 'rainbow', 'prism'],\n        secondary: ['vision', 'myopia', 'hypermetropia', 'presbyopia', 'cataract']\n      },\n      'Sources of Energy': {\n        primary: ['renewable energy', 'solar energy', 'wind energy', 'fossil fuel', 'nuclear energy'],\n        secondary: ['biogas', 'hydroelectric', 'geothermal', 'tidal energy']\n      },\n      'Chemical Reactions and Equations': {\n        primary: ['chemical reaction', 'chemical equation', 'reactant', 'product', 'balanced equation'],\n        secondary: ['oxidation', 'reduction', 'decomposition', 'combination', 'displacement']\n      },\n      'Acids, Bases and Salts': {\n        primary: ['acid', 'base', 'salt', 'ph scale', 'neutralization'],\n        secondary: ['alkali', 'indicator', 'litmus', 'acidic', 'basic']\n      },\n      'Metals and Non-metals': {\n        primary: ['metal', 'non-metal', 'metalloid', 'reactivity series', 'corrosion'],\n        secondary: ['alloy', 'ore', 'extraction', 'metallic', 'ionic bond']\n      },\n      'Carbon and its Compounds': {\n        primary: ['carbon compound', 'organic compound', 'hydrocarbon', 'functional group'],\n        secondary: ['alkane', 'alkene', 'alkyne', 'alcohol', 'carboxylic acid', 'ester']\n      },\n      'Life Processes': {\n        primary: ['nutrition', 'respiration', 'transportation', 'excretion', 'photosynthesis'],\n        secondary: ['digestion', 'cellular respiration', 'transpiration', 'kidney']\n      },\n      'Control and Coordination': {\n        primary: ['nervous system', 'hormone', 'endocrine', 'reflex action', 'neuron'],\n        secondary: ['brain', 'spinal cord', 'synapse', 'receptor', 'effector']\n      },\n      'How do Organisms Reproduce': {\n        primary: ['reproduction', 'sexual reproduction', 'asexual reproduction', 'fertilization'],\n        secondary: ['gamete', 'zygote', 'fission', 'budding', 'vegetative propagation']\n      },\n      'Heredity and Evolution': {\n        primary: ['heredity', 'inheritance', 'gene', 'chromosome', 'evolution', 'natural selection'],\n        secondary: ['dna', 'darwin', 'variation', 'speciation', 'fossil']\n      },\n      'Our Environment': {\n        primary: ['ecosystem', 'food chain', 'food web', 'biodegradable', 'ozone layer'],\n        secondary: ['environment', 'pollution', 'greenhouse effect', 'decomposer']\n      },\n      'Real Numbers': {\n        primary: ['real number', 'rational number', 'irrational number', 'euclid', 'hcf', 'lcm'],\n        secondary: ['prime', 'composite', 'fundamental theorem']\n      },\n      'Polynomials': {\n        primary: ['polynomial', 'degree of polynomial', 'zero of polynomial', 'coefficient'],\n        secondary: ['quadratic polynomial', 'cubic polynomial', 'factorization']\n      },\n      'Pair of Linear Equations in Two Variables': {\n        primary: ['linear equation', 'simultaneous equation', 'substitution method', 'elimination method'],\n        secondary: ['cross multiplication', 'graphical method', 'consistent', 'inconsistent']\n      },\n      'Quadratic Equations': {\n        primary: ['quadratic equation', 'discriminant', 'roots of equation', 'quadratic formula'],\n        secondary: ['x²', 'x^2', 'factorization', 'completing square']\n      },\n      'Arithmetic Progressions': {\n        primary: ['arithmetic progression', 'common difference', 'nth term', 'sum of ap'],\n        secondary: ['ap', 'arithmetic sequence', 'series']\n      },\n      'Triangles': {\n        primary: ['similar triangle', 'congruent triangle', 'pythagoras theorem', 'triangle theorem'],\n        secondary: ['area of triangle', 'perimeter', 'altitude', 'median']\n      },\n      'Coordinate Geometry': {\n        primary: ['coordinate', 'distance formula', 'section formula', 'midpoint formula'],\n        secondary: ['slope', 'x-axis', 'y-axis', 'cartesian plane']\n      },\n      'Introduction to Trigonometry': {\n        primary: ['trigonometry', 'trigonometric ratio', 'sine', 'cosine', 'tangent'],\n        secondary: ['sin', 'cos', 'tan', 'angle', 'θ', 'theta']\n      },\n      'Some Applications of Trigonometry': {\n        primary: ['height and distance', 'angle of elevation', 'angle of depression', 'line of sight'],\n        secondary: ['trigonometric application', 'tower', 'building height']\n      },\n      'Circles': {\n        primary: ['circle', 'tangent to circle', 'chord', 'secant', 'circle theorem'],\n        secondary: ['radius', 'diameter', 'arc', 'segment']\n      },\n      'Areas Related to Circles': {\n        primary: ['area of circle', 'sector', 'segment of circle', 'circumference'],\n        secondary: ['π', 'pi', 'circular region', 'annulus']\n      },\n      'Surface Areas and Volumes': {\n        primary: ['surface area', 'volume', 'total surface area', 'curved surface area'],\n        secondary: ['cube', 'cuboid', 'cylinder', 'cone', 'sphere', 'hemisphere']\n      },\n      'Statistics': {\n        primary: ['mean', 'median', 'mode', 'frequency distribution', 'cumulative frequency'],\n        secondary: ['data', 'class interval', 'grouped data', 'ogive']\n      },\n      'Probability': {\n        primary: ['probability', 'theoretical probability', 'experimental probability', 'random experiment'],\n        secondary: ['event', 'outcome', 'sample space', 'certain', 'impossible']\n      }\n    };\n    const chapterData = chapterKeywords[chapter];\n    if (!chapterData) {\n      // Fallback to simple keyword matching\n      const keywords = chapter.toLowerCase().split(' ');\n      return questions.filter(q => {\n        const questionText = q.question_text.toLowerCase();\n        return keywords.some(keyword => questionText.includes(keyword));\n      });\n    }\n\n    // Score-based filtering for more focused results\n    return questions.filter(q => {\n      const questionText = q.question_text.toLowerCase();\n      let score = 0;\n\n      // Primary keywords are worth 3 points\n      chapterData.primary.forEach(keyword => {\n        if (questionText.includes(keyword.toLowerCase())) {\n          score += 3;\n        }\n      });\n\n      // Secondary keywords are worth 1 point\n      chapterData.secondary.forEach(keyword => {\n        if (questionText.includes(keyword.toLowerCase())) {\n          score += 1;\n        }\n      });\n\n      // Require minimum score of 2 for more focused results\n      return score >= 2;\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chapter-questions\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chapter-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uD83D\\uDCD6 Questions by Chapter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 963,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Select a question paper, textbook, and chapter to view related questions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 964,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 962,\n      columnNumber: 7\n    }, this), message.text && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `message ${message.type}`,\n      children: message.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 968,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chapter-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"selection-grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"selection-section textbook-selection-table\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"\\uD83D\\uDCDA Step 1: Select Textbook\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 978,\n            columnNumber: 13\n          }, this), textbooks.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"no-data\",\n            children: \"No textbooks available. Please upload a textbook first.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 980,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"selection-table-container\",\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"selection-table\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    style: {\n                      width: '50px'\n                    },\n                    children: \"Select\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 986,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Textbook Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 987,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Subject\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 988,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 985,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 984,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: textbooks.map((textbook, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  className: `selection-row ${(selectedTextbook === null || selectedTextbook === void 0 ? void 0 : selectedTextbook.name) === textbook.name ? 'selected' : ''} ${!textbook.uploadedId ? 'disabled' : ''}`,\n                  onClick: () => textbook.uploadedId && handleTextbookSelect(textbook),\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"checkbox-cell\",\n                    children: /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"checkbox\",\n                      checked: (selectedTextbook === null || selectedTextbook === void 0 ? void 0 : selectedTextbook.name) === textbook.name,\n                      onChange: () => textbook.uploadedId && handleTextbookSelect(textbook),\n                      disabled: !textbook.uploadedId,\n                      onClick: e => e.stopPropagation()\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 999,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 998,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"name-cell\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"cell-content\",\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"icon\",\n                        children: textbook.uploadedId ? '📕' : '📘'\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1009,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"text\",\n                        children: textbook.name\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1010,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1008,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1007,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"subject-cell\",\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"subject-badge\",\n                      children: textbook.subject\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1014,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1013,\n                    columnNumber: 25\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 993,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 991,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 983,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 982,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 977,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"selection-section paper-selection-table\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"\\uD83D\\uDCC4 Step 2: Select Question Paper\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1026,\n            columnNumber: 13\n          }, this), papers.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"no-data\",\n            children: \"No question papers uploaded yet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1028,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"selection-table-container\",\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"selection-table\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    style: {\n                      width: '50px'\n                    },\n                    children: \"Select\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1034,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Paper Title\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1035,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Subject\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1036,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1033,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1032,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: papers.map(paper => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  className: `selection-row ${(selectedPaper === null || selectedPaper === void 0 ? void 0 : selectedPaper.id) === paper.id ? 'selected' : ''}`,\n                  onClick: () => handlePaperSelect(paper),\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"checkbox-cell\",\n                    children: /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"checkbox\",\n                      checked: (selectedPaper === null || selectedPaper === void 0 ? void 0 : selectedPaper.id) === paper.id,\n                      onChange: () => handlePaperSelect(paper),\n                      onClick: e => e.stopPropagation()\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1047,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1046,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"name-cell\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"cell-content\",\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"icon\",\n                        children: \"\\uD83D\\uDCDD\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1056,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"text\",\n                        children: paper.title\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1057,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1055,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1054,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"subject-cell\",\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"subject-badge\",\n                      children: paper.subject\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1061,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1060,\n                    columnNumber: 25\n                  }, this)]\n                }, paper.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1041,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1039,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1031,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1030,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1025,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 975,\n        columnNumber: 9\n      }, this), selectedPaper && selectedTextbook && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"semantic-search-section\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"load-last-btn\",\n            onClick: handleLoadLastMatch,\n            disabled: isSearching || !selectedTextbook.uploadedId,\n            title: \"Load previously saved AI search results (instant)\",\n            children: isSearching ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"spinner-small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1084,\n                columnNumber: 21\n              }, this), \"Loading...\"]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: \"\\uD83D\\uDCCB Show Last Match\"\n            }, void 0, false)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1076,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"index-and-match-btn\",\n            onClick: handleIndexAndMatch,\n            disabled: isSearching || !selectedTextbook.uploadedId || !selectedPaper,\n            title: \"Index textbook (if needed) and match questions with AI\",\n            children: isSearching ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"spinner-small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1101,\n                columnNumber: 21\n              }, this), \"Processing...\"]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: \"\\uD83D\\uDE80 Index & Match Questions\"\n            }, void 0, false)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1093,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1075,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1074,\n        columnNumber: 11\n      }, this), semanticSearchResults && Object.keys(semanticSearchResults).length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chapter-table-section ai-results\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\uD83E\\uDD16 AI Search Results - Chapters with Questions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1117,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chapter-table-container\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"chapter-table\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"#\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1122,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Chapter Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1123,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Pages\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1124,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Questions\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1125,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Action\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1126,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1121,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1120,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: Object.entries(semanticSearchResults).map(([chapterName, data], index) => {\n                const avgConfidence = data.questions.reduce((sum, q) => {\n                  return sum + (q.chapters && q.chapters[0] ? q.chapters[0].similarity_score : 0);\n                }, 0) / data.questions.length;\n                const isUnmatched = chapterName === 'Unmatched Questions';\n                return /*#__PURE__*/_jsxDEV(\"tr\", {\n                  className: `${(selectedChapter === null || selectedChapter === void 0 ? void 0 : selectedChapter.name) === chapterName ? 'selected-row' : ''} ${isUnmatched ? 'unmatched-row' : ''}`,\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"chapter-num\",\n                    children: isUnmatched ? '⚠️' : data.chapter.chapter_number || index + 1\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1142,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"chapter-name-cell\",\n                    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: chapterName\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1146,\n                      columnNumber: 25\n                    }, this), avgConfidence > 0 && !isUnmatched && /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"confidence-badge\",\n                      title: `Average AI confidence: ${avgConfidence.toFixed(1)}%`,\n                      children: [\"\\uD83C\\uDFAF \", avgConfidence.toFixed(0), \"%\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1148,\n                      columnNumber: 27\n                    }, this), isUnmatched && /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"unmatched-badge\",\n                      title: \"Questions that could not be matched to any chapter\",\n                      children: \"\\u26A0\\uFE0F Needs Review\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1153,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1145,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"pages-cell\",\n                    children: isUnmatched ? 'N/A' : `${data.chapter.page_start}-${data.chapter.page_end}`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1158,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"count-cell\",\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: `question-count ${isUnmatched ? 'unmatched-count' : 'has-questions'}`,\n                      children: data.questions.length\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1162,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1161,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"action-cell\",\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: `view-btn ${isUnmatched ? 'unmatched-btn' : ''}`,\n                      onClick: () => handleChapterSelect({\n                        name: chapterName\n                      }),\n                      children: \"View Questions\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1167,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1166,\n                    columnNumber: 23\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1138,\n                  columnNumber: 21\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1129,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1119,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1118,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"table-summary\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Total Chapters:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1182,\n              columnNumber: 17\n            }, this), \" \", Object.keys(semanticSearchResults).length, \" |\", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \" Total Questions:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1183,\n              columnNumber: 17\n            }, this), \" \", Object.values(semanticSearchResults).reduce((sum, data) => sum + data.questions.length, 0)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1181,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1180,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1116,\n        columnNumber: 11\n      }, this), selectedChapter && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"questions-display\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"questions-header-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"\\u2753 Questions from: \", selectedChapter.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1193,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chapter-meta\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"meta-item\",\n              children: [\"\\uD83D\\uDCD6 \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Textbook:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1195,\n                columnNumber: 48\n              }, this), \" \", selectedTextbook.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1195,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"meta-item\",\n              children: [\"\\uD83D\\uDCC4 \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Pages:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1196,\n                columnNumber: 48\n              }, this), \" \", selectedChapter.pages]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1196,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"meta-item\",\n              children: [\"\\uD83D\\uDCDD \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Paper:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1197,\n                columnNumber: 48\n              }, this), \" \", selectedPaper.title]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1197,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1194,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1192,\n          columnNumber: 13\n        }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"spinner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1203,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Loading questions...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1204,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1202,\n          columnNumber: 15\n        }, this) : questions.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-questions\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No questions found for this chapter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1208,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"hint\",\n            children: \"Try selecting a different chapter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1209,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1207,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"questions-list\",\n          children: questions.map((q, index) => {\n            // Use AI chapter data if available, otherwise use selected chapter\n            let pageInfo = 'N/A';\n            if (q.chapters && q.chapters.length > 0) {\n              // AI search result - use first matched chapter\n              const aiChapter = q.chapters[0];\n              pageInfo = `${aiChapter.page_start}-${aiChapter.page_end}`;\n            } else if (selectedChapter && selectedChapter.pages) {\n              // Regular chapter selection - estimate pages\n              pageInfo = estimateQuestionPageNumber(q.question_text, selectedChapter);\n            }\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"question-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"question-header\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"question-number\",\n                  children: [\"Q\", q.question_number]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1228,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"chapter-page-badge clickable\",\n                  onClick: () => handlePageClick(pageInfo),\n                  title: \"Click to view textbook pages\",\n                  children: [\"\\uD83D\\uDCD6 Pages: \", pageInfo]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1229,\n                  columnNumber: 23\n                }, this), q.question_type && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `question-type ${q.question_type}`,\n                  children: q.question_type.toUpperCase()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1237,\n                  columnNumber: 25\n                }, this), q.marks && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"question-marks\",\n                  children: [q.marks, \" marks\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1242,\n                  columnNumber: 25\n                }, this), q.has_math && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"math-badge\",\n                  children: \"\\uD83D\\uDCD0 Math\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1245,\n                  columnNumber: 25\n                }, this), q.has_diagram && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"diagram-badge\",\n                  children: \"\\uD83D\\uDCCA Diagram\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1248,\n                  columnNumber: 25\n                }, this), (() => {\n                  // Check if question has chapter match reasoning\n                  const hasChapterReasoning = q.chapters && q.chapters.length > 0 && q.chapters[0].llm_reasoning;\n                  if (hasChapterReasoning) {\n                    return /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"reasoning-btn\",\n                      onClick: () => setSelectedReasoning({\n                        questionNumber: q.question_number,\n                        reasoning: q.chapters[0].llm_reasoning,\n                        chapterTitle: q.chapters[0].chapter_title,\n                        confidence: q.chapters[0].similarity_score,\n                        pageRange: `${q.chapters[0].page_start}-${q.chapters[0].page_end}`\n                      }),\n                      title: \"View AI chapter matching reasoning\",\n                      children: \"\\uD83E\\uDDE0 Why This Chapter?\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1256,\n                      columnNumber: 29\n                    }, this);\n                  }\n\n                  // Fallback: show parsed data if available\n                  let parsedData = q.parsed_data;\n                  if (typeof parsedData === 'string') {\n                    try {\n                      parsedData = JSON.parse(parsedData);\n                    } catch (e) {\n                      parsedData = {};\n                    }\n                  }\n                  return parsedData && Object.keys(parsedData).length > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"reasoning-btn\",\n                    onClick: () => setSelectedReasoning({\n                      questionNumber: q.question_number,\n                      reasoning: 'No chapter matching reasoning available',\n                      llmResponse: JSON.stringify(parsedData, null, 2)\n                    }),\n                    title: \"View AI parsed data\",\n                    children: \"\\uD83E\\uDDE0 AI Data\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1282,\n                    columnNumber: 27\n                  }, this);\n                })()]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1227,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"question-text\",\n                children: q.question_text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1296,\n                columnNumber: 21\n              }, this), (() => {\n                // Parse sub_parts if it's a string\n                let subParts = q.sub_parts;\n                if (typeof subParts === 'string') {\n                  try {\n                    subParts = JSON.parse(subParts);\n                  } catch (e) {\n                    subParts = [];\n                  }\n                }\n                return subParts && Array.isArray(subParts) && subParts.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"sub-parts\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Sub-parts:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1311,\n                    columnNumber: 27\n                  }, this), \" \", subParts.join(', ')]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1310,\n                  columnNumber: 25\n                }, this);\n              })()]\n            }, q.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1226,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1212,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1191,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 973,\n      columnNumber: 7\n    }, this), showTextbookModal && textbookPageToShow && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"textbook-modal-overlay\",\n      onClick: handleCloseModal,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"textbook-modal-content\",\n        onClick: e => e.stopPropagation(),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"textbook-modal-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-title-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: [\"\\uD83D\\uDCD6 \", textbookPageToShow.textbook.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1330,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"modal-subtitle\",\n              children: [\"Chapter: \", textbookPageToShow.chapter, \" | Pages: \", textbookPageToShow.pageRange]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1331,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1329,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"modal-close-btn\",\n            onClick: handleCloseModal,\n            children: \"\\u2715\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1335,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1328,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"textbook-modal-body\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"textbook-viewer\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"page-info\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"current-page-indicator\",\n                children: [\"\\uD83D\\uDCC4 Page \", currentPage, \" of \", textbookPageToShow.pageRange]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1346,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1345,\n              columnNumber: 17\n            }, this), textbookPageToShow.textbook.uploadedFile ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"pdf-embed-container\",\n              children: [pdfLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"pdf-loading-overlay\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"spinner\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1356,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Loading page \", currentPage, \"...\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1357,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1355,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"iframe\", {\n                src: `http://localhost:5000/api/textbook-pdf/${textbookPageToShow.textbook.uploadedId}#page=${currentPage}&zoom=page-fit`,\n                title: `Textbook Page ${currentPage}`,\n                className: \"textbook-pdf-iframe\",\n                frameBorder: \"0\",\n                allow: \"fullscreen\",\n                onLoad: () => setPdfLoading(false)\n              }, `pdf-${currentPage}`, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1360,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1353,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"no-textbook-message\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"external-icon\",\n                children: \"\\uD83D\\uDCDA\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1372,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"No Textbook Uploaded\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1373,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"viewer-description\",\n                children: [\"Please upload a textbook file for \", textbookPageToShow.textbook.name, \" to view pages.\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1374,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"link-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Textbook:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1378,\n                    columnNumber: 26\n                  }, this), \" \", textbookPageToShow.textbook.name]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1378,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Chapter:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1379,\n                    columnNumber: 26\n                  }, this), \" \", textbookPageToShow.chapter]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1379,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Pages:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1380,\n                    columnNumber: 26\n                  }, this), \" \", textbookPageToShow.pageRange]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1380,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"upload-hint\",\n                  children: \"Go to \\\"Upload Papers\\\" menu to upload textbook PDFs\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1381,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1377,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1371,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"page-navigation\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"nav-btn\",\n                onClick: handlePrevPage,\n                disabled: currentPage <= textbookPageToShow.startPage,\n                children: \"\\u2190 Previous\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1388,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"page-display\",\n                children: [\"Page \", currentPage]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1395,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"nav-btn\",\n                onClick: handleNextPage,\n                disabled: currentPage >= textbookPageToShow.endPage,\n                children: \"Next \\u2192\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1398,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1387,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1344,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1343,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"textbook-modal-footer\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"footer-info\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"page-count\",\n              children: [textbookPageToShow.endPage - textbookPageToShow.startPage + 1, \" pages in range\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1411,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1410,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"close-modal-btn\",\n            onClick: handleCloseModal,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1415,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1409,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1327,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1326,\n      columnNumber: 9\n    }, this), selectedReasoning && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"reasoning-modal\",\n      onClick: () => setSelectedReasoning(null),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reasoning-modal-content\",\n        onClick: e => e.stopPropagation(),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"reasoning-modal-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"\\uD83E\\uDDE0 Chapter Matching Analysis - Q\", selectedReasoning.questionNumber]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1431,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"close-reasoning-btn\",\n            onClick: () => setSelectedReasoning(null),\n            children: \"\\u2715\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1432,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1430,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"reasoning-modal-body\",\n          children: [selectedReasoning.chapterTitle && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chapter-match-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"match-detail\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"match-label\",\n                children: \"\\uD83D\\uDCDA Matched Chapter:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1439,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"match-value\",\n                children: selectedReasoning.chapterTitle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1440,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1438,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"match-detail\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"match-label\",\n                children: \"\\uD83D\\uDCC4 Pages:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1443,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"match-value\",\n                children: selectedReasoning.pageRange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1444,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1442,\n              columnNumber: 19\n            }, this), selectedReasoning.confidence && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"match-detail\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"match-label\",\n                children: \"\\uD83C\\uDFAF Confidence:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1448,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"match-value\",\n                children: [selectedReasoning.confidence, \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1449,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1447,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1437,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"reasoning-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"\\uD83D\\uDCAD AI Reasoning:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1456,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"reasoning-content\",\n              children: selectedReasoning.reasoning\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1457,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1455,\n            columnNumber: 15\n          }, this), selectedReasoning.llmResponse && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"llm-response-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"\\uD83E\\uDD16 Technical Details (JSON):\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1464,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"llm-response-content\",\n              children: /*#__PURE__*/_jsxDEV(\"pre\", {\n                children: selectedReasoning.llmResponse\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1466,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1465,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1463,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1435,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1429,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1428,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 961,\n    columnNumber: 5\n  }, this);\n};\n_s(ChapterQuestions, \"i4GooELZrQLSGWQXLI7swWAjIzY=\");\n_c = ChapterQuestions;\nexport default ChapterQuestions;\nvar _c;\n$RefreshReg$(_c, \"ChapterQuestions\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","ChapterQuestions","_s","papers","setPapers","textbooks","setTextbooks","selectedPaper","setSelectedPaper","selectedTextbook","setSelectedTextbook","chapters","setChapters","chapterStats","setChapterStats","selectedChapter","setSelectedChapter","questions","setQuestions","loading","setLoading","message","setMessage","type","text","showTextbookModal","setShowTextbookModal","textbookPageToShow","setTextbookPageToShow","currentPage","setCurrentPage","pdfLoading","setPdfLoading","semanticSearchResults","setSemanticSearchResults","isSearching","setIsSearching","selectedReasoning","setSelectedReasoning","selectedSolution","setSelectedSolution","solvingQuestion","setSolvingQuestion","defaultTextbooks","name","pdfUrl","externalUrl","imageBasePath","pages","fetchPapers","fetchAllTextbooks","calculateChapterStats","response","get","data","err","console","error","uploadedTextbooks","textbooksToDisplay","map","uploaded","_defaultTextbooks$upl","defaultForSubject","subject","title","uploadedFile","file_path","uploadedId","id","uploadedTitle","length","handlePaperSelect","paper","handleTextbookSelect","textbook","log","allQuestions","stats","chapter","chapterQuestions","filterQuestionsByChapter","questionCount","handleClearResults","handleIndexAndMatch","needsIndexing","_err$response","_err$response2","_err$response2$data","_err$response2$data$e","status","includes","indexResponse","post","success","Error","chapters_count","questionsResponse","mappingResponse","textbook_id","mappedQuestions","mapped_questions","chapterGroups","unmatchedQuestions","forEach","q","topChapter","chapterKey","chapter_title","push","chapter_number","page_start","page_end","similarity_score","totalQuestions","Object","values","reduce","sum","keys","saveSearchResults","_err$response3","_err$response3$data","errorMsg","handleIndexTextbook","_err$response4","_err$response4$data","handleRunSemanticSearch","_err$response5","_err$response5$data","paper_id","search_results","_error$response","handleLoadLastMatch","total_chapters","total_questions","unmatched_count","created_at","date","Date","timeAgo","getTimeAgo","_err$response6","_err$response7","_err$response7$data","seconds","Math","floor","toLocaleDateString","handleChapterSelect","chapterData","chapterInfo","warn","estimateQuestionPageNumber","questionText","startPage","endPage","split","p","parseInt","trim","totalPages","subTopicPositions","lowerText","toLowerCase","estimatedPosition","matchFound","subTopic","position","entries","estimatedPage","round","rangeStart","max","rangeEnd","min","handlePageClick","pageRange","handleNextPage","nextPage","setTimeout","handlePrevPage","prevPage","handleCloseModal","chapterKeywords","primary","secondary","keywords","filter","question_text","some","keyword","score","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","width","index","onClick","checked","onChange","disabled","e","stopPropagation","chapterName","avgConfidence","isUnmatched","toFixed","pageInfo","aiChapter","question_number","question_type","toUpperCase","marks","has_math","has_diagram","hasChapterReasoning","llm_reasoning","questionNumber","reasoning","chapterTitle","confidence","parsedData","parsed_data","JSON","parse","llmResponse","stringify","subParts","sub_parts","Array","isArray","join","src","frameBorder","allow","onLoad","_c","$RefreshReg$"],"sources":["D:/AI/_Programs/CBSE/aqnamic/frontend/src/components/ChapterQuestions.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './ChapterQuestions.css';\n\nconst ChapterQuestions = () => {\n  const [papers, setPapers] = useState([]);\n  const [textbooks, setTextbooks] = useState([]);\n  const [selectedPaper, setSelectedPaper] = useState(null);\n  const [selectedTextbook, setSelectedTextbook] = useState(null);\n  const [chapters, setChapters] = useState([]);\n  const [chapterStats, setChapterStats] = useState([]);\n  const [selectedChapter, setSelectedChapter] = useState(null);\n  const [questions, setQuestions] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState({ type: '', text: '' });\n  const [showTextbookModal, setShowTextbookModal] = useState(false);\n  const [textbookPageToShow, setTextbookPageToShow] = useState(null);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [pdfLoading, setPdfLoading] = useState(false);\n  const [semanticSearchResults, setSemanticSearchResults] = useState(null);\n  const [isSearching, setIsSearching] = useState(false);\n  const [selectedReasoning, setSelectedReasoning] = useState(null);\n  const [selectedSolution, setSelectedSolution] = useState(null);\n  const [solvingQuestion, setSolvingQuestion] = useState(false);\n\n  // Predefined textbooks with chapters and page numbers\n  const defaultTextbooks = {\n    'Physics': [\n      {\n        name: 'NCERT Physics Class 10',\n        pdfUrl: 'https://ncert.nic.in/textbook/pdf/keph101.pdf',\n        externalUrl: 'https://ncert.nic.in/textbook.php?keph1=0-8',\n        imageBasePath: '/textbooks/physics-class10/pages/',\n        chapters: [\n          { name: 'Electricity', pages: '1-20' },\n          { name: 'Magnetic Effects of Current', pages: '21-40' },\n          { name: 'Light - Reflection and Refraction', pages: '41-65' },\n          { name: 'Human Eye and Colourful World', pages: '66-85' },\n          { name: 'Sources of Energy', pages: '86-105' }\n        ]\n      }\n    ],\n    'Chemistry': [\n      {\n        name: 'NCERT Chemistry Class 10',\n        pdfUrl: 'https://ncert.nic.in/textbook/pdf/kesc101.pdf',\n        externalUrl: 'https://ncert.nic.in/textbook.php?kesc1=0-8',\n        imageBasePath: '/textbooks/chemistry-class10/pages/',\n        chapters: [\n          { name: 'Chemical Reactions and Equations', pages: '1-18' },\n          { name: 'Acids, Bases and Salts', pages: '19-35' },\n          { name: 'Metals and Non-metals', pages: '36-55' },\n          { name: 'Carbon and its Compounds', pages: '56-80' },\n          { name: 'Periodic Classification of Elements', pages: '81-95' }\n        ]\n      }\n    ],\n    'Biology': [\n      {\n        name: 'NCERT Biology Class 10',\n        pdfUrl: 'https://ncert.nic.in/textbook/pdf/kebo101.pdf',\n        externalUrl: 'https://ncert.nic.in/textbook.php?kebo1=0-8',\n        imageBasePath: '/textbooks/biology-class10/pages/',\n        chapters: [\n          { name: 'Life Processes', pages: '1-25' },\n          { name: 'Control and Coordination', pages: '26-45' },\n          { name: 'How do Organisms Reproduce', pages: '46-70' },\n          { name: 'Heredity and Evolution', pages: '71-90' },\n          { name: 'Our Environment', pages: '91-110' }\n        ]\n      }\n    ],\n    'Mathematics': [\n      {\n        name: 'NCERT Mathematics Class 10',\n        pdfUrl: 'https://ncert.nic.in/textbook/pdf/kemh101.pdf',\n        externalUrl: 'https://ncert.nic.in/textbook.php?kemh1=0-16',\n        imageBasePath: '/textbooks/mathematics-class10/pages/',\n        chapters: [\n          { name: 'Real Numbers', pages: '1-15' },\n          { name: 'Polynomials', pages: '16-30' },\n          { name: 'Pair of Linear Equations in Two Variables', pages: '31-50' },\n          { name: 'Quadratic Equations', pages: '51-70' },\n          { name: 'Arithmetic Progressions', pages: '71-85' },\n          { name: 'Triangles', pages: '86-110' },\n          { name: 'Coordinate Geometry', pages: '111-130' },\n          { name: 'Introduction to Trigonometry', pages: '131-150' },\n          { name: 'Some Applications of Trigonometry', pages: '151-165' },\n          { name: 'Circles', pages: '166-185' },\n          { name: 'Areas Related to Circles', pages: '186-200' },\n          { name: 'Surface Areas and Volumes', pages: '201-225' },\n          { name: 'Statistics', pages: '226-245' },\n          { name: 'Probability', pages: '246-260' }\n        ]\n      }\n    ]\n  };\n\n  useEffect(() => {\n    fetchPapers();\n    fetchAllTextbooks();\n  }, []);\n\n  useEffect(() => {\n    if (selectedPaper && selectedTextbook) {\n      calculateChapterStats();\n    }\n  }, [selectedPaper, selectedTextbook]);\n\n  const fetchPapers = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/uploaded-papers');\n      setPapers(response.data);\n    } catch (err) {\n      console.error('Error fetching papers:', err);\n      setMessage({ type: 'error', text: 'Failed to load papers' });\n    }\n  };\n\n  const fetchAllTextbooks = async () => {\n    try {\n      // Fetch all uploaded textbooks\n      const response = await axios.get('http://localhost:5000/api/textbooks');\n      const uploadedTextbooks = response.data || [];\n      \n      // Use uploaded textbooks directly, with default chapter structure as fallback\n      const textbooksToDisplay = uploadedTextbooks.map(uploaded => {\n        // Get default chapters for this subject if available\n        const defaultForSubject = defaultTextbooks[uploaded.subject]?.[0];\n        \n        return {\n          name: uploaded.title,  // Use actual uploaded title\n          subject: uploaded.subject,\n          uploadedFile: uploaded.file_path,\n          uploadedId: uploaded.id,\n          uploadedTitle: uploaded.title,\n          chapters: defaultForSubject?.chapters || [],  // Use default chapters as template\n          pdfUrl: '',\n          externalUrl: '',\n          imageBasePath: ''\n        };\n      });\n      \n      setTextbooks(textbooksToDisplay);\n      \n      // If no textbooks uploaded, show message\n      if (textbooksToDisplay.length === 0) {\n        setMessage({ \n          type: 'info', \n          text: 'No textbooks uploaded yet. Please upload a textbook first.' \n        });\n      }\n    } catch (err) {\n      console.error('Error fetching textbooks:', err);\n      setMessage({ \n        type: 'error', \n        text: 'Failed to load textbooks. Please try again.' \n      });\n      setTextbooks([]);\n    }\n  };\n\n  const handlePaperSelect = (paper) => {\n    setSelectedPaper(paper);\n    setSelectedTextbook(null);\n    setSelectedChapter(null);\n    setQuestions([]);\n    setChapters([]);\n    setChapterStats([]);\n    setSemanticSearchResults(null);  // Clear previous search results\n    \n    // Don't reload textbooks - they're already loaded with correct names\n    // Just clear the selection and let user select from existing list\n  };\n\n  const handleTextbookSelect = (textbook) => {\n    setSelectedTextbook(textbook);\n    setSelectedChapter(null);\n    setQuestions([]);\n    setChapters(textbook.chapters);\n    setSemanticSearchResults(null);  // Clear previous search results when textbook changes\n    \n    // Log textbook info for debugging\n    console.log('Selected textbook:', textbook.name);\n    console.log('Has uploaded file:', !!textbook.uploadedId);\n    \n    // Don't show selection message - table selection is clear enough\n  };\n\n  const calculateChapterStats = async () => {\n    if (!selectedPaper || !selectedTextbook) return;\n\n    try {\n      // Fetch all questions from the selected paper\n      const response = await axios.get(\n        `http://localhost:5000/api/parsed-questions?paper_id=${selectedPaper.id}`\n      );\n      \n      const allQuestions = response.data;\n      \n      // Calculate question count for each chapter\n      const stats = selectedTextbook.chapters.map(chapter => {\n        const chapterQuestions = filterQuestionsByChapter(allQuestions, chapter.name);\n        return {\n          ...chapter,\n          questionCount: chapterQuestions.length\n        };\n      });\n      \n      setChapterStats(stats);\n    } catch (err) {\n      console.error('Error calculating chapter stats:', err);\n    }\n  };\n\n  const handleClearResults = () => {\n    setSemanticSearchResults(null);\n    setQuestions([]);\n    setSelectedChapter(null);\n    setChapterStats([]); // Clear the chapter stats table\n    setMessage({ type: 'info', text: 'Search results cleared. Ready for new search.' });\n  };\n\n  const handleIndexAndMatch = async () => {\n    // Unified workflow: Index textbook (if needed) + Run AI Search\n    if (!selectedPaper || !selectedTextbook) {\n      setMessage({ type: 'warning', text: 'Please select both a question paper and textbook first' });\n      return;\n    }\n\n    if (!selectedTextbook.uploadedId) {\n      setMessage({ type: 'warning', text: 'Please upload the textbook first' });\n      return;\n    }\n\n    setIsSearching(true);\n\n    try {\n      // Step 1: Check if textbook is already indexed by trying to run search\n      console.log('🚀 Starting Index & Match workflow...');\n      setMessage({ type: 'info', text: '🔍 Checking if textbook is indexed...' });\n\n      let needsIndexing = false;\n\n      // Try to get chapters to see if indexed\n      try {\n        await axios.get(`http://localhost:5000/api/textbook-chapters/${selectedTextbook.uploadedId}`);\n        console.log('✓ Textbook already indexed');\n        setMessage({ type: 'info', text: '✓ Textbook already indexed. Running AI search...' });\n      } catch (err) {\n        if (err.response?.status === 404 || err.response?.data?.error?.includes('No vector index')) {\n          needsIndexing = true;\n          console.log('⚠ Textbook not indexed, will index now');\n        } else {\n          throw err;\n        }\n      }\n\n      // Step 2: Index if needed\n      if (needsIndexing) {\n        setMessage({ type: 'info', text: '📚 Indexing textbook... This may take a few minutes.' });\n        \n        const indexResponse = await axios.post(\n          `http://localhost:5000/api/index-textbook/${selectedTextbook.uploadedId}`\n        );\n\n        if (!indexResponse.data.success) {\n          throw new Error(indexResponse.data.error || 'Indexing failed');\n        }\n\n        console.log(`✓ Indexed ${indexResponse.data.chapters_count} chapters`);\n        setMessage({ \n          type: 'info', \n          text: `✅ Indexed ${indexResponse.data.chapters_count} chapters. Now matching questions...` \n        });\n      }\n\n      // Step 3: Run AI Search\n      setMessage({ type: 'info', text: '🤖 Running AI Search with LLM analysis...' });\n\n      // Fetch all questions from the selected paper\n      const questionsResponse = await axios.get(\n        `http://localhost:5000/api/parsed-questions?paper_id=${selectedPaper.id}`\n      );\n      \n      const allQuestions = questionsResponse.data;\n\n      // Use semantic search to map questions to chapters\n      const mappingResponse = await axios.post(\n        'http://localhost:5000/api/map-questions-to-chapters',\n        {\n          questions: allQuestions,\n          textbook_id: selectedTextbook.uploadedId\n        }\n      );\n      \n      if (mappingResponse.data.success) {\n        const mappedQuestions = mappingResponse.data.mapped_questions;\n        \n        // Group questions by chapter\n        const chapterGroups = {};\n        const unmatchedQuestions = [];\n        \n        mappedQuestions.forEach(q => {\n          if (q.chapters && q.chapters.length > 0) {\n            const topChapter = q.chapters[0];\n            const chapterKey = topChapter.chapter_title;\n            \n            if (!chapterGroups[chapterKey]) {\n              chapterGroups[chapterKey] = {\n                chapter: topChapter,\n                questions: []\n              };\n            }\n            chapterGroups[chapterKey].questions.push(q);\n          } else {\n            unmatchedQuestions.push(q);\n          }\n        });\n        \n        // Add unmatched questions if any\n        if (unmatchedQuestions.length > 0) {\n          chapterGroups['Unmatched Questions'] = {\n            chapter: {\n              chapter_number: 0,\n              chapter_title: 'Unmatched Questions',\n              page_start: 'N/A',\n              page_end: 'N/A',\n              similarity_score: 0\n            },\n            questions: unmatchedQuestions\n          };\n        }\n        \n        const totalQuestions = Object.values(chapterGroups).reduce((sum, data) => sum + data.questions.length, 0);\n        \n        // Clear old chapter stats\n        setChapterStats([]);\n        \n        setSemanticSearchResults(chapterGroups);\n        setMessage({\n          type: 'success',\n          text: `🎉 Complete! Found ${Object.keys(chapterGroups).length} chapters with ${totalQuestions} questions (${unmatchedQuestions.length} unmatched). Click a chapter below.`\n        });\n        \n        // Save results to database\n        await saveSearchResults(chapterGroups);\n      } else {\n        throw new Error('AI search failed');\n      }\n    } catch (err) {\n      console.error('Error in Index & Match workflow:', err);\n      const errorMsg = err.response?.data?.error || err.message;\n      \n      setMessage({ \n        type: 'error', \n        text: `Failed: ${errorMsg}` \n      });\n    } finally {\n      setIsSearching(false);\n    }\n  };\n\n  const handleIndexTextbook = async () => {\n    // Legacy function - kept for backward compatibility\n    if (!selectedTextbook || !selectedTextbook.uploadedId) {\n      setMessage({ type: 'warning', text: 'Please select a textbook first' });\n      return;\n    }\n\n    setIsSearching(true);\n    setMessage({ type: 'info', text: '📚 Indexing textbook... This may take a few minutes.' });\n\n    try {\n      const response = await axios.post(\n        `http://localhost:5000/api/index-textbook/${selectedTextbook.uploadedId}`\n      );\n\n      if (response.data.success) {\n        setMessage({\n          type: 'success',\n          text: `✅ Textbook indexed successfully! ${response.data.chapters_count} chapters indexed. You can now run AI semantic search.`\n        });\n      } else {\n        throw new Error(response.data.error || 'Indexing failed');\n      }\n    } catch (err) {\n      console.error('Error indexing textbook:', err);\n      setMessage({\n        type: 'error',\n        text: `Failed to index textbook: ${err.response?.data?.error || err.message}`\n      });\n    } finally {\n      setIsSearching(false);\n    }\n  };\n\n  const handleRunSemanticSearch = async () => {\n    if (!selectedPaper || !selectedTextbook) {\n      setMessage({ type: 'warning', text: 'Please select both a question paper and textbook first' });\n      return;\n    }\n\n    if (!selectedTextbook.uploadedId) {\n      setMessage({ type: 'warning', text: 'Please upload the textbook to use AI semantic search' });\n      return;\n    }\n\n    setIsSearching(true);\n    setMessage({ type: 'info', text: '🤖 Running AI Search with LLM analysis...' });\n\n    try {\n      // Fetch all questions from the selected paper\n      const response = await axios.get(\n        `http://localhost:5000/api/parsed-questions?paper_id=${selectedPaper.id}`\n      );\n      \n      const allQuestions = response.data;\n\n      // Use semantic search to map questions to chapters\n      const mappingResponse = await axios.post(\n        'http://localhost:5000/api/map-questions-to-chapters',\n        {\n          questions: allQuestions,\n          textbook_id: selectedTextbook.uploadedId\n        }\n      );\n      \n      if (mappingResponse.data.success) {\n        const mappedQuestions = mappingResponse.data.mapped_questions;\n        \n        // Group questions by chapter\n        const chapterGroups = {};\n        const unmatchedQuestions = [];\n        \n        mappedQuestions.forEach(q => {\n          if (q.chapters && q.chapters.length > 0) {\n            const topChapter = q.chapters[0]; // Use best match\n            const chapterKey = topChapter.chapter_title;\n            \n            if (!chapterGroups[chapterKey]) {\n              chapterGroups[chapterKey] = {\n                chapter: topChapter,\n                questions: []\n              };\n            }\n            chapterGroups[chapterKey].questions.push(q);\n          } else {\n            // No chapter match found\n            unmatchedQuestions.push(q);\n          }\n        });\n        \n        // Add unmatched questions as a separate group if any exist\n        if (unmatchedQuestions.length > 0) {\n          chapterGroups['Unmatched Questions'] = {\n            chapter: {\n              chapter_number: 0,\n              chapter_title: 'Unmatched Questions',\n              page_start: 'N/A',\n              page_end: 'N/A',\n              similarity_score: 0\n            },\n            questions: unmatchedQuestions\n          };\n        }\n        \n        const totalQuestions = Object.values(chapterGroups).reduce((sum, data) => sum + data.questions.length, 0);\n        \n        console.log('Chapter groups created:', Object.keys(chapterGroups));\n        console.log('Full chapter groups:', chapterGroups);\n        \n        // Clear old chapter stats to show only AI results\n        setChapterStats([]);\n        \n        setSemanticSearchResults(chapterGroups);\n        setMessage({\n          type: 'success',\n          text: `🤖 AI Search Complete! Found ${Object.keys(chapterGroups).length} chapters with ${totalQuestions} questions (${unmatchedQuestions.length} unmatched). Click on a chapter below to view questions.`\n        });\n        \n        // Save results to database\n        await saveSearchResults(chapterGroups);\n      } else {\n        throw new Error('Semantic search failed');\n      }\n    } catch (err) {\n      console.error('Error in semantic search:', err);\n      const errorMsg = err.response?.data?.error || err.message;\n      \n      // Check if it's an indexing issue\n      if (errorMsg.includes('No vector index found') || errorMsg.includes('index')) {\n        setMessage({ \n          type: 'error', \n          text: '⚠️ Textbook not indexed. Please click \"Index Textbook\" button first.' \n        });\n      } else {\n        setMessage({ \n          type: 'error', \n          text: `AI semantic search failed: ${errorMsg}` \n        });\n      }\n    } finally {\n      setIsSearching(false);\n    }\n  };\n\n  const saveSearchResults = async (chapterGroups) => {\n    try {\n      console.log('💾 Saving search results to database...');\n      console.log('  Paper ID:', selectedPaper.id);\n      console.log('  Textbook ID:', selectedTextbook.uploadedId);\n      console.log('  Chapters:', Object.keys(chapterGroups).length);\n      \n      const response = await axios.post('http://localhost:5000/api/save-ai-search-results', {\n        paper_id: selectedPaper.id,\n        textbook_id: selectedTextbook.uploadedId,\n        search_results: chapterGroups\n      });\n      \n      console.log('✓ Search results saved to database:', response.data);\n    } catch (error) {\n      console.error('❌ Failed to save search results:', error);\n      console.error('  Error details:', error.response?.data);\n      // Don't show error to user - this is a background operation\n    }\n  };\n\n  const handleLoadLastMatch = async () => {\n    if (!selectedPaper || !selectedTextbook || !selectedTextbook.uploadedId) {\n      setMessage({ type: 'warning', text: 'Please select both a question paper and textbook first' });\n      return;\n    }\n\n    setIsSearching(true);\n    setMessage({ type: 'info', text: '📋 Loading last AI search results...' });\n\n    console.log('📋 Loading last match...');\n    console.log('  Paper ID:', selectedPaper.id);\n    console.log('  Textbook ID:', selectedTextbook.uploadedId);\n\n    try {\n      const response = await axios.get(\n        `http://localhost:5000/api/get-last-ai-search?paper_id=${selectedPaper.id}&textbook_id=${selectedTextbook.uploadedId}`\n      );\n      \n      console.log('  Response:', response.data);\n\n      if (response.data.success) {\n        const { search_results, total_chapters, total_questions, unmatched_count, created_at } = response.data;\n        \n        // Clear old chapter stats\n        setChapterStats([]);\n        \n        setSemanticSearchResults(search_results);\n        \n        // Format the date\n        const date = new Date(created_at);\n        const timeAgo = getTimeAgo(date);\n        \n        setMessage({\n          type: 'success',\n          text: `📋 Loaded previous results (${timeAgo}): ${total_chapters} chapters with ${total_questions} questions (${unmatched_count} unmatched)`\n        });\n      }\n    } catch (err) {\n      console.error('Error loading last match:', err);\n      if (err.response?.status === 404) {\n        // Clear any existing results since no match found for this combination\n        setSemanticSearchResults(null);\n        setChapterStats([]);\n        \n        setMessage({ \n          type: 'info', \n          text: `No previous results found for \"${selectedPaper.title}\" with \"${selectedTextbook.name}\". Please run \"Index & Match Questions\" first.` \n        });\n      } else {\n        setMessage({ \n          type: 'error', \n          text: `Failed to load previous results: ${err.response?.data?.error || err.message}` \n        });\n      }\n    } finally {\n      setIsSearching(false);\n    }\n  };\n\n  const getTimeAgo = (date) => {\n    const seconds = Math.floor((new Date() - date) / 1000);\n    \n    if (seconds < 60) return 'just now';\n    if (seconds < 3600) return `${Math.floor(seconds / 60)} minutes ago`;\n    if (seconds < 86400) return `${Math.floor(seconds / 3600)} hours ago`;\n    if (seconds < 604800) return `${Math.floor(seconds / 86400)} days ago`;\n    return date.toLocaleDateString();\n  };\n\n  const handleChapterSelect = (chapterData) => {\n    console.log('Selected chapter:', chapterData);\n    console.log('Available chapters in semanticSearchResults:', semanticSearchResults ? Object.keys(semanticSearchResults) : 'None');\n    \n    setSelectedChapter(chapterData);\n    \n    if (semanticSearchResults && semanticSearchResults[chapterData.name]) {\n      // Use semantic search results\n      const chapterQuestions = semanticSearchResults[chapterData.name].questions;\n      const chapterInfo = semanticSearchResults[chapterData.name].chapter;\n      \n      console.log('Found chapter questions:', chapterQuestions.length);\n      console.log('Chapter info:', chapterInfo);\n      \n      setQuestions(chapterQuestions);\n      setMessage({\n        type: 'success',\n        text: `Showing ${chapterQuestions.length} questions for: ${chapterData.name} (AI matched)`\n      });\n    } else {\n      console.warn('Chapter not found in semantic search results:', chapterData.name);\n      setMessage({\n        type: 'info',\n        text: 'Run AI Search to find questions for this chapter'\n      });\n      setQuestions([]);\n    }\n  };\n\n  const estimateQuestionPageNumber = (questionText, chapterData) => {\n    // Estimate specific page range within chapter based on question content\n    if (!chapterData || !chapterData.pages) {\n      return 'N/A'; // Return default if no page data\n    }\n    \n    const { pages } = chapterData;\n    const [startPage, endPage] = pages.split('-').map(p => parseInt(p.trim()));\n    const totalPages = endPage - startPage + 1;\n    \n    // Define sub-topics with their relative position in chapter (0-1)\n    const subTopicPositions = {\n      // Electricity sub-topics\n      'electric current': 0.1,\n      'potential difference': 0.2,\n      'ohm law': 0.3,\n      'resistance': 0.3,\n      'series circuit': 0.5,\n      'parallel circuit': 0.6,\n      'heating effect': 0.7,\n      'electric power': 0.8,\n      'joule law': 0.9,\n      \n      // Magnetic Effects\n      'magnetic field': 0.1,\n      'right hand rule': 0.2,\n      'electromagnet': 0.3,\n      'solenoid': 0.4,\n      'force on conductor': 0.5,\n      'electric motor': 0.6,\n      'electromagnetic induction': 0.7,\n      'generator': 0.8,\n      'fleming': 0.8,\n      \n      // Light - Reflection and Refraction\n      'law of reflection': 0.1,\n      'plane mirror': 0.15,\n      'spherical mirror': 0.2,\n      'concave mirror': 0.3,\n      'convex mirror': 0.4,\n      'mirror formula': 0.45,\n      'refraction': 0.5,\n      'refractive index': 0.55,\n      'snell law': 0.6,\n      'lens': 0.65,\n      'concave lens': 0.7,\n      'convex lens': 0.75,\n      'lens formula': 0.8,\n      'power of lens': 0.9,\n      \n      // Quadratic Equations\n      'standard form': 0.1,\n      'factorization': 0.2,\n      'completing square': 0.4,\n      'quadratic formula': 0.6,\n      'discriminant': 0.7,\n      'nature of roots': 0.8,\n      'word problem': 0.9,\n      \n      // Triangles\n      'similar triangle': 0.2,\n      'basic proportionality': 0.3,\n      'criteria for similarity': 0.4,\n      'area of similar': 0.5,\n      'pythagoras theorem': 0.6,\n      'converse of pythagoras': 0.7,\n      'triangle inequality': 0.8,\n      \n      // Coordinate Geometry\n      'distance formula': 0.2,\n      'section formula': 0.4,\n      'midpoint': 0.5,\n      'area of triangle': 0.6,\n      'collinear': 0.7,\n      'slope': 0.8,\n      \n      // Trigonometry\n      'trigonometric ratio': 0.1,\n      'sine': 0.2,\n      'cosine': 0.3,\n      'tangent': 0.4,\n      'complementary angle': 0.5,\n      'trigonometric identity': 0.6,\n      'angle of elevation': 0.7,\n      'angle of depression': 0.8,\n      'height and distance': 0.9,\n      \n      // Statistics\n      'mean': 0.2,\n      'median': 0.4,\n      'mode': 0.6,\n      'cumulative frequency': 0.7,\n      'ogive': 0.8,\n      \n      // Probability\n      'theoretical probability': 0.3,\n      'experimental probability': 0.5,\n      'sample space': 0.6,\n      'mutually exclusive': 0.8,\n      \n      // Chemistry - Acids, Bases and Salts\n      'acid': 0.1,\n      'base': 0.2,\n      'indicator': 0.3,\n      'ph scale': 0.4,\n      'neutralization': 0.5,\n      'salt': 0.6,\n      'water of crystallization': 0.8,\n      \n      // Biology - Life Processes\n      'nutrition': 0.1,\n      'autotrophic': 0.15,\n      'heterotrophic': 0.2,\n      'photosynthesis': 0.25,\n      'digestion': 0.3,\n      'respiration': 0.5,\n      'aerobic': 0.55,\n      'anaerobic': 0.6,\n      'transportation': 0.7,\n      'excretion': 0.85\n    };\n    \n    const lowerText = questionText.toLowerCase();\n    let estimatedPosition = 0.5; // Default to middle\n    let matchFound = false;\n    \n    // Find the most specific sub-topic match\n    for (const [subTopic, position] of Object.entries(subTopicPositions)) {\n      if (lowerText.includes(subTopic)) {\n        estimatedPosition = position;\n        matchFound = true;\n        break; // Use first match (most specific)\n      }\n    }\n    \n    // Calculate estimated page range (±2 pages from estimated position)\n    const estimatedPage = Math.round(startPage + (totalPages * estimatedPosition));\n    const rangeStart = Math.max(startPage, estimatedPage - 2);\n    const rangeEnd = Math.min(endPage, estimatedPage + 2);\n    \n    return matchFound ? `${rangeStart}-${rangeEnd}` : pages;\n  };\n\n  const handlePageClick = (pageRange) => {\n    const [startPage, endPage] = pageRange.split('-').map(p => parseInt(p.trim()));\n    setCurrentPage(startPage);\n    setTextbookPageToShow({\n      textbook: selectedTextbook,\n      chapter: selectedChapter.name,\n      pageRange: pageRange,\n      startPage: startPage,\n      endPage: endPage || startPage\n    });\n    setShowTextbookModal(true);\n  };\n\n  const handleNextPage = () => {\n    if (currentPage < textbookPageToShow.endPage) {\n      const nextPage = currentPage + 1;\n      console.log('Next page:', nextPage);\n      setPdfLoading(true);\n      setCurrentPage(nextPage);\n      setTimeout(() => setPdfLoading(false), 1000);\n    }\n  };\n\n  const handlePrevPage = () => {\n    if (currentPage > textbookPageToShow.startPage) {\n      const prevPage = currentPage - 1;\n      console.log('Previous page:', prevPage);\n      setPdfLoading(true);\n      setCurrentPage(prevPage);\n      setTimeout(() => setPdfLoading(false), 1000);\n    }\n  };\n\n  const handleCloseModal = () => {\n    setShowTextbookModal(false);\n    setTextbookPageToShow(null);\n    setCurrentPage(1);\n  };\n\n  const filterQuestionsByChapter = (questions, chapter) => {\n    // Enhanced keyword matching with scoring system for more focused results\n    const chapterKeywords = {\n      'Electricity': {\n        primary: ['current', 'voltage', 'resistance', 'ohm', 'circuit', 'electric power', 'electrical energy'],\n        secondary: ['joule', 'watt', 'ampere', 'volt', 'resistor', 'conductor', 'insulator']\n      },\n      'Magnetic Effects of Current': {\n        primary: ['magnetic field', 'electromagnet', 'solenoid', 'motor', 'generator', 'fleming'],\n        secondary: ['magnet', 'electromagnetic induction', 'armature', 'commutator']\n      },\n      'Light - Reflection and Refraction': {\n        primary: ['reflection', 'refraction', 'mirror', 'lens', 'focal length', 'image formation'],\n        secondary: ['concave', 'convex', 'ray diagram', 'optical', 'refractive index']\n      },\n      'Human Eye and Colourful World': {\n        primary: ['eye', 'retina', 'cornea', 'spectrum', 'dispersion', 'rainbow', 'prism'],\n        secondary: ['vision', 'myopia', 'hypermetropia', 'presbyopia', 'cataract']\n      },\n      'Sources of Energy': {\n        primary: ['renewable energy', 'solar energy', 'wind energy', 'fossil fuel', 'nuclear energy'],\n        secondary: ['biogas', 'hydroelectric', 'geothermal', 'tidal energy']\n      },\n      'Chemical Reactions and Equations': {\n        primary: ['chemical reaction', 'chemical equation', 'reactant', 'product', 'balanced equation'],\n        secondary: ['oxidation', 'reduction', 'decomposition', 'combination', 'displacement']\n      },\n      'Acids, Bases and Salts': {\n        primary: ['acid', 'base', 'salt', 'ph scale', 'neutralization'],\n        secondary: ['alkali', 'indicator', 'litmus', 'acidic', 'basic']\n      },\n      'Metals and Non-metals': {\n        primary: ['metal', 'non-metal', 'metalloid', 'reactivity series', 'corrosion'],\n        secondary: ['alloy', 'ore', 'extraction', 'metallic', 'ionic bond']\n      },\n      'Carbon and its Compounds': {\n        primary: ['carbon compound', 'organic compound', 'hydrocarbon', 'functional group'],\n        secondary: ['alkane', 'alkene', 'alkyne', 'alcohol', 'carboxylic acid', 'ester']\n      },\n      'Life Processes': {\n        primary: ['nutrition', 'respiration', 'transportation', 'excretion', 'photosynthesis'],\n        secondary: ['digestion', 'cellular respiration', 'transpiration', 'kidney']\n      },\n      'Control and Coordination': {\n        primary: ['nervous system', 'hormone', 'endocrine', 'reflex action', 'neuron'],\n        secondary: ['brain', 'spinal cord', 'synapse', 'receptor', 'effector']\n      },\n      'How do Organisms Reproduce': {\n        primary: ['reproduction', 'sexual reproduction', 'asexual reproduction', 'fertilization'],\n        secondary: ['gamete', 'zygote', 'fission', 'budding', 'vegetative propagation']\n      },\n      'Heredity and Evolution': {\n        primary: ['heredity', 'inheritance', 'gene', 'chromosome', 'evolution', 'natural selection'],\n        secondary: ['dna', 'darwin', 'variation', 'speciation', 'fossil']\n      },\n      'Our Environment': {\n        primary: ['ecosystem', 'food chain', 'food web', 'biodegradable', 'ozone layer'],\n        secondary: ['environment', 'pollution', 'greenhouse effect', 'decomposer']\n      },\n      'Real Numbers': {\n        primary: ['real number', 'rational number', 'irrational number', 'euclid', 'hcf', 'lcm'],\n        secondary: ['prime', 'composite', 'fundamental theorem']\n      },\n      'Polynomials': {\n        primary: ['polynomial', 'degree of polynomial', 'zero of polynomial', 'coefficient'],\n        secondary: ['quadratic polynomial', 'cubic polynomial', 'factorization']\n      },\n      'Pair of Linear Equations in Two Variables': {\n        primary: ['linear equation', 'simultaneous equation', 'substitution method', 'elimination method'],\n        secondary: ['cross multiplication', 'graphical method', 'consistent', 'inconsistent']\n      },\n      'Quadratic Equations': {\n        primary: ['quadratic equation', 'discriminant', 'roots of equation', 'quadratic formula'],\n        secondary: ['x²', 'x^2', 'factorization', 'completing square']\n      },\n      'Arithmetic Progressions': {\n        primary: ['arithmetic progression', 'common difference', 'nth term', 'sum of ap'],\n        secondary: ['ap', 'arithmetic sequence', 'series']\n      },\n      'Triangles': {\n        primary: ['similar triangle', 'congruent triangle', 'pythagoras theorem', 'triangle theorem'],\n        secondary: ['area of triangle', 'perimeter', 'altitude', 'median']\n      },\n      'Coordinate Geometry': {\n        primary: ['coordinate', 'distance formula', 'section formula', 'midpoint formula'],\n        secondary: ['slope', 'x-axis', 'y-axis', 'cartesian plane']\n      },\n      'Introduction to Trigonometry': {\n        primary: ['trigonometry', 'trigonometric ratio', 'sine', 'cosine', 'tangent'],\n        secondary: ['sin', 'cos', 'tan', 'angle', 'θ', 'theta']\n      },\n      'Some Applications of Trigonometry': {\n        primary: ['height and distance', 'angle of elevation', 'angle of depression', 'line of sight'],\n        secondary: ['trigonometric application', 'tower', 'building height']\n      },\n      'Circles': {\n        primary: ['circle', 'tangent to circle', 'chord', 'secant', 'circle theorem'],\n        secondary: ['radius', 'diameter', 'arc', 'segment']\n      },\n      'Areas Related to Circles': {\n        primary: ['area of circle', 'sector', 'segment of circle', 'circumference'],\n        secondary: ['π', 'pi', 'circular region', 'annulus']\n      },\n      'Surface Areas and Volumes': {\n        primary: ['surface area', 'volume', 'total surface area', 'curved surface area'],\n        secondary: ['cube', 'cuboid', 'cylinder', 'cone', 'sphere', 'hemisphere']\n      },\n      'Statistics': {\n        primary: ['mean', 'median', 'mode', 'frequency distribution', 'cumulative frequency'],\n        secondary: ['data', 'class interval', 'grouped data', 'ogive']\n      },\n      'Probability': {\n        primary: ['probability', 'theoretical probability', 'experimental probability', 'random experiment'],\n        secondary: ['event', 'outcome', 'sample space', 'certain', 'impossible']\n      }\n    };\n\n    const chapterData = chapterKeywords[chapter];\n    if (!chapterData) {\n      // Fallback to simple keyword matching\n      const keywords = chapter.toLowerCase().split(' ');\n      return questions.filter(q => {\n        const questionText = q.question_text.toLowerCase();\n        return keywords.some(keyword => questionText.includes(keyword));\n      });\n    }\n\n    // Score-based filtering for more focused results\n    return questions.filter(q => {\n      const questionText = q.question_text.toLowerCase();\n      let score = 0;\n\n      // Primary keywords are worth 3 points\n      chapterData.primary.forEach(keyword => {\n        if (questionText.includes(keyword.toLowerCase())) {\n          score += 3;\n        }\n      });\n\n      // Secondary keywords are worth 1 point\n      chapterData.secondary.forEach(keyword => {\n        if (questionText.includes(keyword.toLowerCase())) {\n          score += 1;\n        }\n      });\n\n      // Require minimum score of 2 for more focused results\n      return score >= 2;\n    });\n  };\n\n  return (\n    <div className=\"chapter-questions\">\n      <div className=\"chapter-header\">\n        <h2>📖 Questions by Chapter</h2>\n        <p>Select a question paper, textbook, and chapter to view related questions</p>\n      </div>\n\n      {message.text && (\n        <div className={`message ${message.type}`}>\n          {message.text}\n        </div>\n      )}\n\n      <div className=\"chapter-content\">\n        {/* Side by Side Selection Tables */}\n        <div className=\"selection-grid\">\n          {/* Textbook Selection - Left Side */}\n          <div className=\"selection-section textbook-selection-table\">\n            <h3>📚 Step 1: Select Textbook</h3>\n            {textbooks.length === 0 ? (\n              <p className=\"no-data\">No textbooks available. Please upload a textbook first.</p>\n            ) : (\n              <div className=\"selection-table-container\">\n                <table className=\"selection-table\">\n                  <thead>\n                    <tr>\n                      <th style={{width: '50px'}}>Select</th>\n                      <th>Textbook Name</th>\n                      <th>Subject</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {textbooks.map((textbook, index) => (\n                      <tr\n                        key={index}\n                        className={`selection-row ${selectedTextbook?.name === textbook.name ? 'selected' : ''} ${!textbook.uploadedId ? 'disabled' : ''}`}\n                        onClick={() => textbook.uploadedId && handleTextbookSelect(textbook)}\n                      >\n                        <td className=\"checkbox-cell\">\n                          <input\n                            type=\"checkbox\"\n                            checked={selectedTextbook?.name === textbook.name}\n                            onChange={() => textbook.uploadedId && handleTextbookSelect(textbook)}\n                            disabled={!textbook.uploadedId}\n                            onClick={(e) => e.stopPropagation()}\n                          />\n                        </td>\n                        <td className=\"name-cell\">\n                          <div className=\"cell-content\">\n                            <span className=\"icon\">{textbook.uploadedId ? '📕' : '📘'}</span>\n                            <span className=\"text\">{textbook.name}</span>\n                          </div>\n                        </td>\n                        <td className=\"subject-cell\">\n                          <span className=\"subject-badge\">{textbook.subject}</span>\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </div>\n            )}\n          </div>\n\n          {/* Paper Selection - Right Side */}\n          <div className=\"selection-section paper-selection-table\">\n            <h3>📄 Step 2: Select Question Paper</h3>\n            {papers.length === 0 ? (\n              <p className=\"no-data\">No question papers uploaded yet</p>\n            ) : (\n              <div className=\"selection-table-container\">\n                <table className=\"selection-table\">\n                  <thead>\n                    <tr>\n                      <th style={{width: '50px'}}>Select</th>\n                      <th>Paper Title</th>\n                      <th>Subject</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {papers.map(paper => (\n                      <tr\n                        key={paper.id}\n                        className={`selection-row ${selectedPaper?.id === paper.id ? 'selected' : ''}`}\n                        onClick={() => handlePaperSelect(paper)}\n                      >\n                        <td className=\"checkbox-cell\">\n                          <input\n                            type=\"checkbox\"\n                            checked={selectedPaper?.id === paper.id}\n                            onChange={() => handlePaperSelect(paper)}\n                            onClick={(e) => e.stopPropagation()}\n                          />\n                        </td>\n                        <td className=\"name-cell\">\n                          <div className=\"cell-content\">\n                            <span className=\"icon\">📝</span>\n                            <span className=\"text\">{paper.title}</span>\n                          </div>\n                        </td>\n                        <td className=\"subject-cell\">\n                          <span className=\"subject-badge\">{paper.subject}</span>\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </div>\n            )}\n          </div>\n        </div>\n\n        {/* AI Semantic Search Section */}\n        {selectedPaper && selectedTextbook && (\n          <div className=\"semantic-search-section\">\n            <div className=\"search-buttons\">\n              <button \n                className=\"load-last-btn\"\n                onClick={handleLoadLastMatch}\n                disabled={isSearching || !selectedTextbook.uploadedId}\n                title=\"Load previously saved AI search results (instant)\"\n              >\n                {isSearching ? (\n                  <>\n                    <span className=\"spinner-small\"></span>\n                    Loading...\n                  </>\n                ) : (\n                  <>\n                    📋 Show Last Match\n                  </>\n                )}\n              </button>\n              <button \n                className=\"index-and-match-btn\"\n                onClick={handleIndexAndMatch}\n                disabled={isSearching || !selectedTextbook.uploadedId || !selectedPaper}\n                title=\"Index textbook (if needed) and match questions with AI\"\n              >\n                {isSearching ? (\n                  <>\n                    <span className=\"spinner-small\"></span>\n                    Processing...\n                  </>\n                ) : (\n                  <>\n                    🚀 Index & Match Questions\n                  </>\n                )}\n              </button>\n            </div>\n          </div>\n        )}\n\n        {/* AI Search Results - Chapter List */}\n        {semanticSearchResults && Object.keys(semanticSearchResults).length > 0 && (\n          <div className=\"chapter-table-section ai-results\">\n            <h3>🤖 AI Search Results - Chapters with Questions</h3>\n            <div className=\"chapter-table-container\">\n              <table className=\"chapter-table\">\n                <thead>\n                  <tr>\n                    <th>#</th>\n                    <th>Chapter Name</th>\n                    <th>Pages</th>\n                    <th>Questions</th>\n                    <th>Action</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {Object.entries(semanticSearchResults).map(([chapterName, data], index) => {\n                    const avgConfidence = data.questions.reduce((sum, q) => {\n                      return sum + (q.chapters && q.chapters[0] ? q.chapters[0].similarity_score : 0);\n                    }, 0) / data.questions.length;\n                    \n                    const isUnmatched = chapterName === 'Unmatched Questions';\n                    \n                    return (\n                    <tr \n                      key={index}\n                      className={`${selectedChapter?.name === chapterName ? 'selected-row' : ''} ${isUnmatched ? 'unmatched-row' : ''}`}\n                    >\n                      <td className=\"chapter-num\">\n                        {isUnmatched ? '⚠️' : (data.chapter.chapter_number || (index + 1))}\n                      </td>\n                      <td className=\"chapter-name-cell\">\n                        <strong>{chapterName}</strong>\n                        {avgConfidence > 0 && !isUnmatched && (\n                          <div className=\"confidence-badge\" title={`Average AI confidence: ${avgConfidence.toFixed(1)}%`}>\n                            🎯 {avgConfidence.toFixed(0)}%\n                          </div>\n                        )}\n                        {isUnmatched && (\n                          <div className=\"unmatched-badge\" title=\"Questions that could not be matched to any chapter\">\n                            ⚠️ Needs Review\n                          </div>\n                        )}\n                      </td>\n                      <td className=\"pages-cell\">\n                        {isUnmatched ? 'N/A' : `${data.chapter.page_start}-${data.chapter.page_end}`}\n                      </td>\n                      <td className=\"count-cell\">\n                        <span className={`question-count ${isUnmatched ? 'unmatched-count' : 'has-questions'}`}>\n                          {data.questions.length}\n                        </span>\n                      </td>\n                      <td className=\"action-cell\">\n                        <button\n                          className={`view-btn ${isUnmatched ? 'unmatched-btn' : ''}`}\n                          onClick={() => handleChapterSelect({ name: chapterName })}\n                        >\n                          View Questions\n                        </button>\n                      </td>\n                    </tr>\n                    );\n                  })}\n                </tbody>\n              </table>\n            </div>\n            <div className=\"table-summary\">\n              <p>\n                <strong>Total Chapters:</strong> {Object.keys(semanticSearchResults).length} | \n                <strong> Total Questions:</strong> {Object.values(semanticSearchResults).reduce((sum, data) => sum + data.questions.length, 0)}\n              </p>\n            </div>\n          </div>\n        )}\n\n        {/* Questions Display */}\n        {selectedChapter && (\n          <div className=\"questions-display\">\n            <div className=\"questions-header-info\">\n              <h3>❓ Questions from: {selectedChapter.name}</h3>\n              <div className=\"chapter-meta\">\n                <span className=\"meta-item\">📖 <strong>Textbook:</strong> {selectedTextbook.name}</span>\n                <span className=\"meta-item\">📄 <strong>Pages:</strong> {selectedChapter.pages}</span>\n                <span className=\"meta-item\">📝 <strong>Paper:</strong> {selectedPaper.title}</span>\n              </div>\n            </div>\n            \n            {loading ? (\n              <div className=\"loading\">\n                <div className=\"spinner\"></div>\n                <p>Loading questions...</p>\n              </div>\n            ) : questions.length === 0 ? (\n              <div className=\"no-questions\">\n                <p>No questions found for this chapter</p>\n                <p className=\"hint\">Try selecting a different chapter</p>\n              </div>\n            ) : (\n              <div className=\"questions-list\">\n                {questions.map((q, index) => {\n                  // Use AI chapter data if available, otherwise use selected chapter\n                  let pageInfo = 'N/A';\n                  if (q.chapters && q.chapters.length > 0) {\n                    // AI search result - use first matched chapter\n                    const aiChapter = q.chapters[0];\n                    pageInfo = `${aiChapter.page_start}-${aiChapter.page_end}`;\n                  } else if (selectedChapter && selectedChapter.pages) {\n                    // Regular chapter selection - estimate pages\n                    pageInfo = estimateQuestionPageNumber(q.question_text, selectedChapter);\n                  }\n                  \n                  return (\n                  <div key={q.id} className=\"question-item\">\n                    <div className=\"question-header\">\n                      <span className=\"question-number\">Q{q.question_number}</span>\n                      <span \n                        className=\"chapter-page-badge clickable\"\n                        onClick={() => handlePageClick(pageInfo)}\n                        title=\"Click to view textbook pages\"\n                      >\n                        📖 Pages: {pageInfo}\n                      </span>\n                      {q.question_type && (\n                        <span className={`question-type ${q.question_type}`}>\n                          {q.question_type.toUpperCase()}\n                        </span>\n                      )}\n                      {q.marks && (\n                        <span className=\"question-marks\">{q.marks} marks</span>\n                      )}\n                      {q.has_math && (\n                        <span className=\"math-badge\">📐 Math</span>\n                      )}\n                      {q.has_diagram && (\n                        <span className=\"diagram-badge\">📊 Diagram</span>\n                      )}\n                      {(() => {\n                        // Check if question has chapter match reasoning\n                        const hasChapterReasoning = q.chapters && q.chapters.length > 0 && q.chapters[0].llm_reasoning;\n                        \n                        if (hasChapterReasoning) {\n                          return (\n                            <button \n                              className=\"reasoning-btn\"\n                              onClick={() => setSelectedReasoning({\n                                questionNumber: q.question_number,\n                                reasoning: q.chapters[0].llm_reasoning,\n                                chapterTitle: q.chapters[0].chapter_title,\n                                confidence: q.chapters[0].similarity_score,\n                                pageRange: `${q.chapters[0].page_start}-${q.chapters[0].page_end}`\n                              })}\n                              title=\"View AI chapter matching reasoning\"\n                            >\n                              🧠 Why This Chapter?\n                            </button>\n                          );\n                        }\n                        \n                        // Fallback: show parsed data if available\n                        let parsedData = q.parsed_data;\n                        if (typeof parsedData === 'string') {\n                          try {\n                            parsedData = JSON.parse(parsedData);\n                          } catch (e) {\n                            parsedData = {};\n                          }\n                        }\n                        return parsedData && Object.keys(parsedData).length > 0 && (\n                          <button \n                            className=\"reasoning-btn\"\n                            onClick={() => setSelectedReasoning({\n                              questionNumber: q.question_number,\n                              reasoning: 'No chapter matching reasoning available',\n                              llmResponse: JSON.stringify(parsedData, null, 2)\n                            })}\n                            title=\"View AI parsed data\"\n                          >\n                            🧠 AI Data\n                          </button>\n                        );\n                      })()}\n                    </div>\n                    <div className=\"question-text\">\n                      {q.question_text}\n                    </div>\n                    {(() => {\n                      // Parse sub_parts if it's a string\n                      let subParts = q.sub_parts;\n                      if (typeof subParts === 'string') {\n                        try {\n                          subParts = JSON.parse(subParts);\n                        } catch (e) {\n                          subParts = [];\n                        }\n                      }\n                      return subParts && Array.isArray(subParts) && subParts.length > 0 && (\n                        <div className=\"sub-parts\">\n                          <strong>Sub-parts:</strong> {subParts.join(', ')}\n                        </div>\n                      );\n                    })()}\n                  </div>\n                  );\n                })}\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n\n      {/* Textbook Page Modal */}\n      {showTextbookModal && textbookPageToShow && (\n        <div className=\"textbook-modal-overlay\" onClick={handleCloseModal}>\n          <div className=\"textbook-modal-content\" onClick={(e) => e.stopPropagation()}>\n            <div className=\"textbook-modal-header\">\n              <div className=\"modal-title-section\">\n                <h2>📖 {textbookPageToShow.textbook.name}</h2>\n                <p className=\"modal-subtitle\">\n                  Chapter: {textbookPageToShow.chapter} | Pages: {textbookPageToShow.pageRange}\n                </p>\n              </div>\n              <button \n                className=\"modal-close-btn\"\n                onClick={handleCloseModal}\n              >\n                ✕\n              </button>\n            </div>\n            \n            <div className=\"textbook-modal-body\">\n              <div className=\"textbook-viewer\">\n                <div className=\"page-info\">\n                  <span className=\"current-page-indicator\">\n                    📄 Page {currentPage} of {textbookPageToShow.pageRange}\n                  </span>\n                </div>\n                \n                {/* PDF Viewer - Using uploaded textbook */}\n                {textbookPageToShow.textbook.uploadedFile ? (\n                  <div className=\"pdf-embed-container\">\n                    {pdfLoading && (\n                      <div className=\"pdf-loading-overlay\">\n                        <div className=\"spinner\"></div>\n                        <p>Loading page {currentPage}...</p>\n                      </div>\n                    )}\n                    <iframe\n                      key={`pdf-${currentPage}`}\n                      src={`http://localhost:5000/api/textbook-pdf/${textbookPageToShow.textbook.uploadedId}#page=${currentPage}&zoom=page-fit`}\n                      title={`Textbook Page ${currentPage}`}\n                      className=\"textbook-pdf-iframe\"\n                      frameBorder=\"0\"\n                      allow=\"fullscreen\"\n                      onLoad={() => setPdfLoading(false)}\n                    />\n                  </div>\n                ) : (\n                  <div className=\"no-textbook-message\">\n                    <div className=\"external-icon\">📚</div>\n                    <h3>No Textbook Uploaded</h3>\n                    <p className=\"viewer-description\">\n                      Please upload a textbook file for {textbookPageToShow.textbook.name} to view pages.\n                    </p>\n                    <div className=\"link-info\">\n                      <p><strong>Textbook:</strong> {textbookPageToShow.textbook.name}</p>\n                      <p><strong>Chapter:</strong> {textbookPageToShow.chapter}</p>\n                      <p><strong>Pages:</strong> {textbookPageToShow.pageRange}</p>\n                      <p className=\"upload-hint\">Go to \"Upload Papers\" menu to upload textbook PDFs</p>\n                    </div>\n                  </div>\n                )}\n\n                {/* Page Navigation */}\n                <div className=\"page-navigation\">\n                  <button \n                    className=\"nav-btn\"\n                    onClick={handlePrevPage}\n                    disabled={currentPage <= textbookPageToShow.startPage}\n                  >\n                    ← Previous\n                  </button>\n                  <span className=\"page-display\">\n                    Page {currentPage}\n                  </span>\n                  <button \n                    className=\"nav-btn\"\n                    onClick={handleNextPage}\n                    disabled={currentPage >= textbookPageToShow.endPage}\n                  >\n                    Next →\n                  </button>\n                </div>\n              </div>\n            </div>\n            \n            <div className=\"textbook-modal-footer\">\n              <div className=\"footer-info\">\n                <span className=\"page-count\">\n                  {textbookPageToShow.endPage - textbookPageToShow.startPage + 1} pages in range\n                </span>\n              </div>\n              <button \n                className=\"close-modal-btn\"\n                onClick={handleCloseModal}\n              >\n                Close\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Reasoning Modal */}\n      {selectedReasoning && (\n        <div className=\"reasoning-modal\" onClick={() => setSelectedReasoning(null)}>\n          <div className=\"reasoning-modal-content\" onClick={(e) => e.stopPropagation()}>\n            <div className=\"reasoning-modal-header\">\n              <h3>🧠 Chapter Matching Analysis - Q{selectedReasoning.questionNumber}</h3>\n              <button className=\"close-reasoning-btn\" onClick={() => setSelectedReasoning(null)}>✕</button>\n            </div>\n            \n            <div className=\"reasoning-modal-body\">\n              {selectedReasoning.chapterTitle && (\n                <div className=\"chapter-match-info\">\n                  <div className=\"match-detail\">\n                    <span className=\"match-label\">📚 Matched Chapter:</span>\n                    <span className=\"match-value\">{selectedReasoning.chapterTitle}</span>\n                  </div>\n                  <div className=\"match-detail\">\n                    <span className=\"match-label\">📄 Pages:</span>\n                    <span className=\"match-value\">{selectedReasoning.pageRange}</span>\n                  </div>\n                  {selectedReasoning.confidence && (\n                    <div className=\"match-detail\">\n                      <span className=\"match-label\">🎯 Confidence:</span>\n                      <span className=\"match-value\">{selectedReasoning.confidence}%</span>\n                    </div>\n                  )}\n                </div>\n              )}\n              \n              <div className=\"reasoning-section\">\n                <h4>💭 AI Reasoning:</h4>\n                <div className=\"reasoning-content\">\n                  {selectedReasoning.reasoning}\n                </div>\n              </div>\n              \n              {selectedReasoning.llmResponse && (\n                <div className=\"llm-response-section\">\n                  <h4>🤖 Technical Details (JSON):</h4>\n                  <div className=\"llm-response-content\">\n                    <pre>{selectedReasoning.llmResponse}</pre>\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ChapterQuestions;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}