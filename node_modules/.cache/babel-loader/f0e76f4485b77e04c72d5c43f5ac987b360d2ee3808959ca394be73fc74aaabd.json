{"ast":null,"code":"var _jsxFileName = \"D:\\\\AI\\\\_Programs\\\\CBSE\\\\aqnamic\\\\frontend\\\\src\\\\components\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Sidebar from './Sidebar';\nimport SampleQuestions from './SampleQuestions';\nimport UploadPapers from './UploadPapers';\nimport ChapterQuestions from './ChapterQuestions';\nimport SingleQuestionUpload from './SingleQuestionUpload';\nimport './Dashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = ({\n  user,\n  onLogout\n}) => {\n  _s();\n  const [activeMenu, setActiveMenu] = useState('sample-questions');\n  const [showSingleQuestionUpload, setShowSingleQuestionUpload] = useState(false);\n  const renderContent = () => {\n    switch (activeMenu) {\n      case 'sample-questions':\n        return /*#__PURE__*/_jsxDEV(SampleQuestions, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 16\n        }, this);\n      case 'upload-papers':\n        return /*#__PURE__*/_jsxDEV(UploadPapers, {\n          user: user\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 16\n        }, this);\n      case 'chapter-questions':\n        return /*#__PURE__*/_jsxDEV(ChapterQuestions, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 16\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(SampleQuestions, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 16\n        }, this);\n    }\n  };\n  const handleQuestionParsed = question => {\n    console.log('Question parsed:', question);\n    // You can add logic here to save or display the parsed question\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      activeMenu: activeMenu,\n      setActiveMenu: setActiveMenu,\n      user: user,\n      onLogout: onLogout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Welcome, \", user.full_name, \"!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"user-info\",\n          children: [\"Logged in as: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: user.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 50\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content-area\",\n        children: renderContent()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"tmuQW8YXxEczMEHOTLyq/azY8cg=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","Sidebar","SampleQuestions","UploadPapers","ChapterQuestions","SingleQuestionUpload","jsxDEV","_jsxDEV","Dashboard","user","onLogout","_s","activeMenu","setActiveMenu","showSingleQuestionUpload","setShowSingleQuestionUpload","renderContent","fileName","_jsxFileName","lineNumber","columnNumber","handleQuestionParsed","question","console","log","className","children","full_name","username","_c","$RefreshReg$"],"sources":["D:/AI/_Programs/CBSE/aqnamic/frontend/src/components/Dashboard.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Sidebar from './Sidebar';\nimport SampleQuestions from './SampleQuestions';\nimport UploadPapers from './UploadPapers';\nimport ChapterQuestions from './ChapterQuestions';\nimport SingleQuestionUpload from './SingleQuestionUpload';\nimport './Dashboard.css';\n\nconst Dashboard = ({ user, onLogout }) => {\n  const [activeMenu, setActiveMenu] = useState('sample-questions');\n  const [showSingleQuestionUpload, setShowSingleQuestionUpload] = useState(false);\n\n  const renderContent = () => {\n    switch (activeMenu) {\n      case 'sample-questions':\n        return <SampleQuestions />;\n      case 'upload-papers':\n        return <UploadPapers user={user} />;\n      case 'chapter-questions':\n        return <ChapterQuestions />;\n      default:\n        return <SampleQuestions />;\n    }\n  };\n\n  const handleQuestionParsed = (question) => {\n    console.log('Question parsed:', question);\n    // You can add logic here to save or display the parsed question\n  };\n\n  return (\n    <div className=\"dashboard\">\n      <Sidebar \n        activeMenu={activeMenu} \n        setActiveMenu={setActiveMenu}\n        user={user}\n        onLogout={onLogout}\n      />\n      <div className=\"dashboard-content\">\n        <div className=\"dashboard-header\">\n          <h1>Welcome, {user.full_name}!</h1>\n          <p className=\"user-info\">Logged in as: <strong>{user.username}</strong></p>\n        </div>\n        <div className=\"content-area\">\n          {renderContent()}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,gBAAgB,MAAM,oBAAoB;AACjD,OAAOC,oBAAoB,MAAM,wBAAwB;AACzD,OAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,SAAS,GAAGA,CAAC;EAAEC,IAAI;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACxC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,kBAAkB,CAAC;EAChE,MAAM,CAACc,wBAAwB,EAAEC,2BAA2B,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EAE/E,MAAMgB,aAAa,GAAGA,CAAA,KAAM;IAC1B,QAAQJ,UAAU;MAChB,KAAK,kBAAkB;QACrB,oBAAOL,OAAA,CAACL,eAAe;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAC5B,KAAK,eAAe;QAClB,oBAAOb,OAAA,CAACJ,YAAY;UAACM,IAAI,EAAEA;QAAK;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MACrC,KAAK,mBAAmB;QACtB,oBAAOb,OAAA,CAACH,gBAAgB;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAC7B;QACE,oBAAOb,OAAA,CAACL,eAAe;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;IAC9B;EACF,CAAC;EAED,MAAMC,oBAAoB,GAAIC,QAAQ,IAAK;IACzCC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEF,QAAQ,CAAC;IACzC;EACF,CAAC;EAED,oBACEf,OAAA;IAAKkB,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBnB,OAAA,CAACN,OAAO;MACNW,UAAU,EAAEA,UAAW;MACvBC,aAAa,EAAEA,aAAc;MAC7BJ,IAAI,EAAEA,IAAK;MACXC,QAAQ,EAAEA;IAAS;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB,CAAC,eACFb,OAAA;MAAKkB,SAAS,EAAC,mBAAmB;MAAAC,QAAA,gBAChCnB,OAAA;QAAKkB,SAAS,EAAC,kBAAkB;QAAAC,QAAA,gBAC/BnB,OAAA;UAAAmB,QAAA,GAAI,WAAS,EAACjB,IAAI,CAACkB,SAAS,EAAC,GAAC;QAAA;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACnCb,OAAA;UAAGkB,SAAS,EAAC,WAAW;UAAAC,QAAA,GAAC,gBAAc,eAAAnB,OAAA;YAAAmB,QAAA,EAASjB,IAAI,CAACmB;UAAQ;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAS,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxE,CAAC,eACNb,OAAA;QAAKkB,SAAS,EAAC,cAAc;QAAAC,QAAA,EAC1BV,aAAa,CAAC;MAAC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACb,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACT,EAAA,CAzCIH,SAAS;AAAAqB,EAAA,GAATrB,SAAS;AA2Cf,eAAeA,SAAS;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}