{"ast":null,"code":"var _jsxFileName = \"D:\\\\AI\\\\_Programs\\\\CBSE\\\\aqnamic\\\\frontend\\\\src\\\\components\\\\UploadPapers.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './UploadPapers.css';\nimport ParsedQuestionsView from './ParsedQuestionsView';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadPapers = ({\n  user\n}) => {\n  _s();\n  // Question Papers State\n  const [title, setTitle] = useState('');\n  const [subject, setSubject] = useState('');\n  const [file, setFile] = useState(null);\n  const [uploadedPapers, setUploadedPapers] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState({\n    type: '',\n    text: ''\n  });\n\n  // Textbooks State\n  const [textbookTitle, setTextbookTitle] = useState('');\n  const [textbookSubject, setTextbookSubject] = useState('');\n  const [textbookAuthor, setTextbookAuthor] = useState('');\n  const [textbookFile, setTextbookFile] = useState(null);\n  const [uploadedTextbooks, setUploadedTextbooks] = useState([]);\n  const [textbookLoading, setTextbookLoading] = useState(false);\n  const [textbookMessage, setTextbookMessage] = useState({\n    type: '',\n    text: ''\n  });\n\n  // Question Parsing State\n  const [parsingPaper, setParsingPaper] = useState(null);\n  const [parsedQuestions, setParsedQuestions] = useState([]);\n  const [showParsedQuestions, setShowParsedQuestions] = useState(false);\n  const [parsingLoading, setParsingLoading] = useState(false);\n  const [parsingMessage, setParsingMessage] = useState({\n    type: '',\n    text: ''\n  });\n  useEffect(() => {\n    fetchUploadedPapers();\n    fetchUploadedTextbooks();\n    fetchParsedQuestions();\n  }, []);\n  const fetchUploadedPapers = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/uploaded-papers');\n      setUploadedPapers(response.data);\n    } catch (err) {\n      console.error('Error fetching papers:', err);\n    }\n  };\n  const fetchUploadedTextbooks = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/textbooks');\n      setUploadedTextbooks(response.data);\n    } catch (err) {\n      console.error('Error fetching textbooks:', err);\n    }\n  };\n  const fetchParsedQuestions = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/parsed-questions');\n      setParsedQuestions(response.data);\n    } catch (err) {\n      console.error('Error fetching parsed questions:', err);\n    }\n  };\n  const handleParseQuestions = async paperId => {\n    setParsingLoading(true);\n    setParsingMessage({\n      type: '',\n      text: ''\n    });\n    setParsingPaper(paperId);\n    try {\n      const response = await axios.post(`http://localhost:5000/api/parse-questions/${paperId}`);\n      if (response.data.success) {\n        setParsingMessage({\n          type: 'success',\n          text: `Successfully parsed ${response.data.total_questions} questions!`\n        });\n        fetchParsedQuestions();\n        setTimeout(() => setShowParsedQuestions(true), 1000);\n      }\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setParsingMessage({\n        type: 'error',\n        text: ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || 'Parsing failed. Please try again.'\n      });\n    } finally {\n      setParsingLoading(false);\n      setParsingPaper(null);\n    }\n  };\n  const handleFileChange = e => {\n    const selectedFile = e.target.files[0];\n    if (selectedFile) {\n      setFile(selectedFile);\n    }\n  };\n  const handleTextbookFileChange = e => {\n    const selectedFile = e.target.files[0];\n    if (selectedFile) {\n      setTextbookFile(selectedFile);\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!title || !subject || !file) {\n      setMessage({\n        type: 'error',\n        text: 'Please fill all fields and select a file'\n      });\n      return;\n    }\n    setLoading(true);\n    setMessage({\n      type: '',\n      text: ''\n    });\n    const formData = new FormData();\n    formData.append('file', file);\n    formData.append('title', title);\n    formData.append('subject', subject);\n    formData.append('user_id', user.id);\n    try {\n      const response = await axios.post('http://localhost:5000/api/upload-paper', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      if (response.data.success) {\n        setMessage({\n          type: 'success',\n          text: 'Paper uploaded successfully!'\n        });\n        setTitle('');\n        setSubject('');\n        setFile(null);\n        document.getElementById('file-input').value = '';\n        fetchUploadedPapers();\n      }\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      setMessage({\n        type: 'error',\n        text: ((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.error) || 'Upload failed. Please try again.'\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleTextbookSubmit = async e => {\n    e.preventDefault();\n    if (!textbookTitle || !textbookSubject || !textbookFile) {\n      setTextbookMessage({\n        type: 'error',\n        text: 'Please fill all required fields and select a file'\n      });\n      return;\n    }\n    setTextbookLoading(true);\n    setTextbookMessage({\n      type: '',\n      text: ''\n    });\n    const formData = new FormData();\n    formData.append('file', textbookFile);\n    formData.append('title', textbookTitle);\n    formData.append('subject', textbookSubject);\n    formData.append('author', textbookAuthor);\n    formData.append('user_id', user.id);\n    try {\n      const response = await axios.post('http://localhost:5000/api/upload-textbook', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      if (response.data.success) {\n        setTextbookMessage({\n          type: 'success',\n          text: 'Textbook uploaded successfully!'\n        });\n        setTextbookTitle('');\n        setTextbookSubject('');\n        setTextbookAuthor('');\n        setTextbookFile(null);\n        document.getElementById('textbook-file-input').value = '';\n        fetchUploadedTextbooks();\n      }\n    } catch (err) {\n      var _err$response3, _err$response3$data;\n      setTextbookMessage({\n        type: 'error',\n        text: ((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : (_err$response3$data = _err$response3.data) === null || _err$response3$data === void 0 ? void 0 : _err$response3$data.error) || 'Upload failed. Please try again.'\n      });\n    } finally {\n      setTextbookLoading(false);\n    }\n  };\n  const formatDate = dateString => {\n    const date = new Date(dateString);\n    return date.toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"upload-papers\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uD83D\\uDCE4 Upload Materials\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Share textbooks, study materials, and past papers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"section-title\",\n        children: \"\\uD83D\\uDCDA Upload Textbooks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upload-form-container\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleTextbookSubmit,\n          className: \"upload-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"textbook-title\",\n                children: \"Textbook Title *\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"textbook-title\",\n                value: textbookTitle,\n                onChange: e => setTextbookTitle(e.target.value),\n                placeholder: \"e.g., NCERT Physics Class 12\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"textbook-subject\",\n                children: \"Subject *\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                id: \"textbook-subject\",\n                value: textbookSubject,\n                onChange: e => setTextbookSubject(e.target.value),\n                required: true,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select Subject\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 235,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Mathematics\",\n                  children: \"Mathematics\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 236,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Physics\",\n                  children: \"Physics\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 237,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Chemistry\",\n                  children: \"Chemistry\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 238,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Biology\",\n                  children: \"Biology\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 239,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"English\",\n                  children: \"English\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 240,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Computer Science\",\n                  children: \"Computer Science\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 241,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Social Science\",\n                  children: \"Social Science\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 242,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"textbook-author\",\n              children: \"Author (Optional)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"textbook-author\",\n              value: textbookAuthor,\n              onChange: e => setTextbookAuthor(e.target.value),\n              placeholder: \"e.g., NCERT\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"textbook-file-input\",\n              children: \"Upload File * (PDF, DOC, DOCX, TXT)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"file-input-wrapper\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                id: \"textbook-file-input\",\n                onChange: handleTextbookFileChange,\n                accept: \".pdf,.doc,.docx,.txt\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 17\n              }, this), textbookFile && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"file-selected\",\n                children: [\"\\uD83D\\uDCC4 \", textbookFile.name, \" (\", (textbookFile.size / 1024).toFixed(2), \" KB)\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 13\n          }, this), textbookMessage.text && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `message ${textbookMessage.type}`,\n            children: textbookMessage.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"upload-btn\",\n            disabled: textbookLoading,\n            children: textbookLoading ? 'Uploading...' : '📚 Upload Textbook'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this), uploadedTextbooks.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"uploaded-list-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Recently Uploaded Textbooks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"papers-grid\",\n          children: uploadedTextbooks.slice(0, 3).map(textbook => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"paper-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"paper-icon\",\n              children: \"\\uD83D\\uDCDA\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"paper-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: textbook.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"paper-subject\",\n                children: textbook.subject\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 21\n              }, this), textbook.author && /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"paper-meta\",\n                children: [\"Author: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: textbook.author\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 298,\n                  columnNumber: 75\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"paper-meta\",\n                children: [\"Uploaded by: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: textbook.uploaded_by_name || 'Unknown'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 299,\n                  columnNumber: 60\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"paper-date\",\n                children: formatDate(textbook.uploaded_at)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 300,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 19\n            }, this)]\n          }, textbook.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"section-title\",\n        children: \"\\uD83D\\uDCDD Upload Question Papers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upload-form-container\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          className: \"upload-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"title\",\n                children: \"Paper Title *\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 317,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"title\",\n                value: title,\n                onChange: e => setTitle(e.target.value),\n                placeholder: \"e.g., Mathematics Mid-Term 2024\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 318,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"subject\",\n                children: \"Subject *\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 329,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                id: \"subject\",\n                value: subject,\n                onChange: e => setSubject(e.target.value),\n                required: true,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select Subject\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 336,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Mathematics\",\n                  children: \"Mathematics\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 337,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Physics\",\n                  children: \"Physics\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 338,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Chemistry\",\n                  children: \"Chemistry\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 339,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Biology\",\n                  children: \"Biology\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 340,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"English\",\n                  children: \"English\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 341,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Computer Science\",\n                  children: \"Computer Science\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 342,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Social Science\",\n                  children: \"Social Science\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 343,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"file-input\",\n              children: \"Upload File * (PDF, DOC, DOCX, TXT)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 349,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"file-input-wrapper\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                id: \"file-input\",\n                onChange: handleFileChange,\n                accept: \".pdf,.doc,.docx,.txt\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 351,\n                columnNumber: 15\n              }, this), file && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"file-selected\",\n                children: [\"\\uD83D\\uDCC4 \", file.name, \" (\", (file.size / 1024).toFixed(2), \" KB)\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 359,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 11\n          }, this), message.text && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `message ${message.type}`,\n            children: message.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"upload-btn\",\n            disabled: loading,\n            children: loading ? 'Uploading...' : '📤 Upload Paper'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 7\n      }, this), uploadedPapers.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"uploaded-list-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Recently Uploaded Papers\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"papers-grid\",\n          children: uploadedPapers.slice(0, 3).map(paper => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"paper-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"paper-icon\",\n              children: \"\\uD83D\\uDCC4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 384,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"paper-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: paper.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 386,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"paper-subject\",\n                children: paper.subject\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 387,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"paper-meta\",\n                children: [\"Uploaded by: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: paper.uploaded_by_name || 'Unknown'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 389,\n                  columnNumber: 36\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 388,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"paper-date\",\n                children: formatDate(paper.uploaded_at)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 391,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"paper-actions\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"parse-btn\",\n                  onClick: () => handleParseQuestions(paper.id),\n                  disabled: parsingPaper === paper.id,\n                  children: parsingPaper === paper.id ? '⏳ Parsing...' : '🔍 Parse Questions'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 394,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"view-parsed-btn\",\n                  onClick: () => setShowParsedQuestions(true),\n                  children: \"\\uD83D\\uDCCB View Parsed\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 401,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 393,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 385,\n              columnNumber: 19\n            }, this)]\n          }, paper.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 383,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 13\n        }, this), parsingMessage.text && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${parsingMessage.type}`,\n          children: parsingMessage.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 7\n    }, this), showParsedQuestions && /*#__PURE__*/_jsxDEV(ParsedQuestionsView, {\n      onClose: () => setShowParsedQuestions(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 203,\n    columnNumber: 5\n  }, this);\n};\n_s(UploadPapers, \"NolNIieT4HvhqhnOtn3FWe43ul8=\");\n_c = UploadPapers;\nexport default UploadPapers;\nvar _c;\n$RefreshReg$(_c, \"UploadPapers\");","map":{"version":3,"names":["React","useState","useEffect","axios","ParsedQuestionsView","jsxDEV","_jsxDEV","UploadPapers","user","_s","title","setTitle","subject","setSubject","file","setFile","uploadedPapers","setUploadedPapers","loading","setLoading","message","setMessage","type","text","textbookTitle","setTextbookTitle","textbookSubject","setTextbookSubject","textbookAuthor","setTextbookAuthor","textbookFile","setTextbookFile","uploadedTextbooks","setUploadedTextbooks","textbookLoading","setTextbookLoading","textbookMessage","setTextbookMessage","parsingPaper","setParsingPaper","parsedQuestions","setParsedQuestions","showParsedQuestions","setShowParsedQuestions","parsingLoading","setParsingLoading","parsingMessage","setParsingMessage","fetchUploadedPapers","fetchUploadedTextbooks","fetchParsedQuestions","response","get","data","err","console","error","handleParseQuestions","paperId","post","success","total_questions","setTimeout","_err$response","_err$response$data","handleFileChange","e","selectedFile","target","files","handleTextbookFileChange","handleSubmit","preventDefault","formData","FormData","append","id","headers","document","getElementById","value","_err$response2","_err$response2$data","handleTextbookSubmit","_err$response3","_err$response3$data","formatDate","dateString","date","Date","toLocaleDateString","year","month","day","hour","minute","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","onChange","placeholder","required","accept","name","size","toFixed","disabled","length","slice","map","textbook","author","uploaded_by_name","uploaded_at","paper","onClick","onClose","_c","$RefreshReg$"],"sources":["D:/AI/_Programs/CBSE/aqnamic/frontend/src/components/UploadPapers.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './UploadPapers.css';\nimport ParsedQuestionsView from './ParsedQuestionsView';\n\nconst UploadPapers = ({ user }) => {\n  // Question Papers State\n  const [title, setTitle] = useState('');\n  const [subject, setSubject] = useState('');\n  const [file, setFile] = useState(null);\n  const [uploadedPapers, setUploadedPapers] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState({ type: '', text: '' });\n\n  // Textbooks State\n  const [textbookTitle, setTextbookTitle] = useState('');\n  const [textbookSubject, setTextbookSubject] = useState('');\n  const [textbookAuthor, setTextbookAuthor] = useState('');\n  const [textbookFile, setTextbookFile] = useState(null);\n  const [uploadedTextbooks, setUploadedTextbooks] = useState([]);\n  const [textbookLoading, setTextbookLoading] = useState(false);\n  const [textbookMessage, setTextbookMessage] = useState({ type: '', text: '' });\n\n  // Question Parsing State\n  const [parsingPaper, setParsingPaper] = useState(null);\n  const [parsedQuestions, setParsedQuestions] = useState([]);\n  const [showParsedQuestions, setShowParsedQuestions] = useState(false);\n  const [parsingLoading, setParsingLoading] = useState(false);\n  const [parsingMessage, setParsingMessage] = useState({ type: '', text: '' });\n\n  useEffect(() => {\n    fetchUploadedPapers();\n    fetchUploadedTextbooks();\n    fetchParsedQuestions();\n  }, []);\n\n  const fetchUploadedPapers = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/uploaded-papers');\n      setUploadedPapers(response.data);\n    } catch (err) {\n      console.error('Error fetching papers:', err);\n    }\n  };\n\n  const fetchUploadedTextbooks = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/textbooks');\n      setUploadedTextbooks(response.data);\n    } catch (err) {\n      console.error('Error fetching textbooks:', err);\n    }\n  };\n\n  const fetchParsedQuestions = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/parsed-questions');\n      setParsedQuestions(response.data);\n    } catch (err) {\n      console.error('Error fetching parsed questions:', err);\n    }\n  };\n\n  const handleParseQuestions = async (paperId) => {\n    setParsingLoading(true);\n    setParsingMessage({ type: '', text: '' });\n    setParsingPaper(paperId);\n\n    try {\n      const response = await axios.post(`http://localhost:5000/api/parse-questions/${paperId}`);\n      \n      if (response.data.success) {\n        setParsingMessage({ \n          type: 'success', \n          text: `Successfully parsed ${response.data.total_questions} questions!` \n        });\n        fetchParsedQuestions();\n        setTimeout(() => setShowParsedQuestions(true), 1000);\n      }\n    } catch (err) {\n      setParsingMessage({ \n        type: 'error', \n        text: err.response?.data?.error || 'Parsing failed. Please try again.' \n      });\n    } finally {\n      setParsingLoading(false);\n      setParsingPaper(null);\n    }\n  };\n\n  const handleFileChange = (e) => {\n    const selectedFile = e.target.files[0];\n    if (selectedFile) {\n      setFile(selectedFile);\n    }\n  };\n\n  const handleTextbookFileChange = (e) => {\n    const selectedFile = e.target.files[0];\n    if (selectedFile) {\n      setTextbookFile(selectedFile);\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    if (!title || !subject || !file) {\n      setMessage({ type: 'error', text: 'Please fill all fields and select a file' });\n      return;\n    }\n\n    setLoading(true);\n    setMessage({ type: '', text: '' });\n\n    const formData = new FormData();\n    formData.append('file', file);\n    formData.append('title', title);\n    formData.append('subject', subject);\n    formData.append('user_id', user.id);\n\n    try {\n      const response = await axios.post('http://localhost:5000/api/upload-paper', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n\n      if (response.data.success) {\n        setMessage({ type: 'success', text: 'Paper uploaded successfully!' });\n        setTitle('');\n        setSubject('');\n        setFile(null);\n        document.getElementById('file-input').value = '';\n        fetchUploadedPapers();\n      }\n    } catch (err) {\n      setMessage({ \n        type: 'error', \n        text: err.response?.data?.error || 'Upload failed. Please try again.' \n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleTextbookSubmit = async (e) => {\n    e.preventDefault();\n    \n    if (!textbookTitle || !textbookSubject || !textbookFile) {\n      setTextbookMessage({ type: 'error', text: 'Please fill all required fields and select a file' });\n      return;\n    }\n\n    setTextbookLoading(true);\n    setTextbookMessage({ type: '', text: '' });\n\n    const formData = new FormData();\n    formData.append('file', textbookFile);\n    formData.append('title', textbookTitle);\n    formData.append('subject', textbookSubject);\n    formData.append('author', textbookAuthor);\n    formData.append('user_id', user.id);\n\n    try {\n      const response = await axios.post('http://localhost:5000/api/upload-textbook', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n\n      if (response.data.success) {\n        setTextbookMessage({ type: 'success', text: 'Textbook uploaded successfully!' });\n        setTextbookTitle('');\n        setTextbookSubject('');\n        setTextbookAuthor('');\n        setTextbookFile(null);\n        document.getElementById('textbook-file-input').value = '';\n        fetchUploadedTextbooks();\n      }\n    } catch (err) {\n      setTextbookMessage({ \n        type: 'error', \n        text: err.response?.data?.error || 'Upload failed. Please try again.' \n      });\n    } finally {\n      setTextbookLoading(false);\n    }\n  };\n\n  const formatDate = (dateString) => {\n    const date = new Date(dateString);\n    return date.toLocaleDateString('en-US', { \n      year: 'numeric', \n      month: 'short', \n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n\n  return (\n    <div className=\"upload-papers\">\n      <div className=\"upload-header\">\n        <h2>📤 Upload Materials</h2>\n        <p>Share textbooks, study materials, and past papers</p>\n      </div>\n\n      {/* Textbook Upload Section */}\n      <div className=\"upload-section\">\n        <h3 className=\"section-title\">📚 Upload Textbooks</h3>\n        <div className=\"upload-form-container\">\n          <form onSubmit={handleTextbookSubmit} className=\"upload-form\">\n            <div className=\"form-row\">\n              <div className=\"form-group\">\n                <label htmlFor=\"textbook-title\">Textbook Title *</label>\n                <input\n                  type=\"text\"\n                  id=\"textbook-title\"\n                  value={textbookTitle}\n                  onChange={(e) => setTextbookTitle(e.target.value)}\n                  placeholder=\"e.g., NCERT Physics Class 12\"\n                  required\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"textbook-subject\">Subject *</label>\n                <select\n                  id=\"textbook-subject\"\n                  value={textbookSubject}\n                  onChange={(e) => setTextbookSubject(e.target.value)}\n                  required\n                >\n                  <option value=\"\">Select Subject</option>\n                  <option value=\"Mathematics\">Mathematics</option>\n                  <option value=\"Physics\">Physics</option>\n                  <option value=\"Chemistry\">Chemistry</option>\n                  <option value=\"Biology\">Biology</option>\n                  <option value=\"English\">English</option>\n                  <option value=\"Computer Science\">Computer Science</option>\n                  <option value=\"Social Science\">Social Science</option>\n                </select>\n              </div>\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"textbook-author\">Author (Optional)</label>\n              <input\n                type=\"text\"\n                id=\"textbook-author\"\n                value={textbookAuthor}\n                onChange={(e) => setTextbookAuthor(e.target.value)}\n                placeholder=\"e.g., NCERT\"\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"textbook-file-input\">Upload File * (PDF, DOC, DOCX, TXT)</label>\n              <div className=\"file-input-wrapper\">\n                <input\n                  type=\"file\"\n                  id=\"textbook-file-input\"\n                  onChange={handleTextbookFileChange}\n                  accept=\".pdf,.doc,.docx,.txt\"\n                  required\n                />\n                {textbookFile && (\n                  <div className=\"file-selected\">\n                    📄 {textbookFile.name} ({(textbookFile.size / 1024).toFixed(2)} KB)\n                  </div>\n                )}\n              </div>\n            </div>\n\n            {textbookMessage.text && (\n              <div className={`message ${textbookMessage.type}`}>\n                {textbookMessage.text}\n              </div>\n            )}\n\n            <button type=\"submit\" className=\"upload-btn\" disabled={textbookLoading}>\n              {textbookLoading ? 'Uploading...' : '📚 Upload Textbook'}\n            </button>\n          </form>\n        </div>\n\n        {uploadedTextbooks.length > 0 && (\n          <div className=\"uploaded-list-section\">\n            <h4>Recently Uploaded Textbooks</h4>\n            <div className=\"papers-grid\">\n              {uploadedTextbooks.slice(0, 3).map((textbook) => (\n                <div key={textbook.id} className=\"paper-card\">\n                  <div className=\"paper-icon\">📚</div>\n                  <div className=\"paper-info\">\n                    <h4>{textbook.title}</h4>\n                    <p className=\"paper-subject\">{textbook.subject}</p>\n                    {textbook.author && <p className=\"paper-meta\">Author: <strong>{textbook.author}</strong></p>}\n                    <p className=\"paper-meta\">Uploaded by: <strong>{textbook.uploaded_by_name || 'Unknown'}</strong></p>\n                    <p className=\"paper-date\">{formatDate(textbook.uploaded_at)}</p>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Question Papers Upload Section */}\n      <div className=\"upload-section\">\n        <h3 className=\"section-title\">📝 Upload Question Papers</h3>\n\n      <div className=\"upload-form-container\">\n        <form onSubmit={handleSubmit} className=\"upload-form\">\n          <div className=\"form-row\">\n            <div className=\"form-group\">\n              <label htmlFor=\"title\">Paper Title *</label>\n              <input\n                type=\"text\"\n                id=\"title\"\n                value={title}\n                onChange={(e) => setTitle(e.target.value)}\n                placeholder=\"e.g., Mathematics Mid-Term 2024\"\n                required\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"subject\">Subject *</label>\n              <select\n                id=\"subject\"\n                value={subject}\n                onChange={(e) => setSubject(e.target.value)}\n                required\n              >\n                <option value=\"\">Select Subject</option>\n                <option value=\"Mathematics\">Mathematics</option>\n                <option value=\"Physics\">Physics</option>\n                <option value=\"Chemistry\">Chemistry</option>\n                <option value=\"Biology\">Biology</option>\n                <option value=\"English\">English</option>\n                <option value=\"Computer Science\">Computer Science</option>\n                <option value=\"Social Science\">Social Science</option>\n              </select>\n            </div>\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"file-input\">Upload File * (PDF, DOC, DOCX, TXT)</label>\n            <div className=\"file-input-wrapper\">\n              <input\n                type=\"file\"\n                id=\"file-input\"\n                onChange={handleFileChange}\n                accept=\".pdf,.doc,.docx,.txt\"\n                required\n              />\n              {file && (\n                <div className=\"file-selected\">\n                  📄 {file.name} ({(file.size / 1024).toFixed(2)} KB)\n                </div>\n              )}\n            </div>\n          </div>\n\n          {message.text && (\n            <div className={`message ${message.type}`}>\n              {message.text}\n            </div>\n          )}\n\n          <button type=\"submit\" className=\"upload-btn\" disabled={loading}>\n            {loading ? 'Uploading...' : '📤 Upload Paper'}\n          </button>\n        </form>\n      </div>\n\n        {uploadedPapers.length > 0 && (\n          <div className=\"uploaded-list-section\">\n            <h4>Recently Uploaded Papers</h4>\n            <div className=\"papers-grid\">\n              {uploadedPapers.slice(0, 3).map((paper) => (\n                <div key={paper.id} className=\"paper-card\">\n                  <div className=\"paper-icon\">📄</div>\n                  <div className=\"paper-info\">\n                    <h4>{paper.title}</h4>\n                    <p className=\"paper-subject\">{paper.subject}</p>\n                    <p className=\"paper-meta\">\n                      Uploaded by: <strong>{paper.uploaded_by_name || 'Unknown'}</strong>\n                    </p>\n                    <p className=\"paper-date\">{formatDate(paper.uploaded_at)}</p>\n                    \n                    <div className=\"paper-actions\">\n                      <button \n                        className=\"parse-btn\"\n                        onClick={() => handleParseQuestions(paper.id)}\n                        disabled={parsingPaper === paper.id}\n                      >\n                        {parsingPaper === paper.id ? '⏳ Parsing...' : '🔍 Parse Questions'}\n                      </button>\n                      <button \n                        className=\"view-parsed-btn\"\n                        onClick={() => setShowParsedQuestions(true)}\n                      >\n                        📋 View Parsed\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n            \n            {parsingMessage.text && (\n              <div className={`message ${parsingMessage.type}`}>\n                {parsingMessage.text}\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n\n      {/* Parsed Questions Modal */}\n      {showParsedQuestions && (\n        <ParsedQuestionsView \n          onClose={() => setShowParsedQuestions(false)}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default UploadPapers;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}