{"ast":null,"code":"var _jsxFileName = \"D:\\\\AI\\\\_Programs\\\\CBSE\\\\aqnamic\\\\frontend\\\\src\\\\components\\\\ChapterQuestions.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './ChapterQuestions.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChapterQuestions = () => {\n  _s();\n  const [papers, setPapers] = useState([]);\n  const [textbooks, setTextbooks] = useState([]);\n  const [selectedPaper, setSelectedPaper] = useState(null);\n  const [selectedTextbook, setSelectedTextbook] = useState(null);\n  const [chapters, setChapters] = useState([]);\n  const [chapterStats, setChapterStats] = useState([]);\n  const [selectedChapter, setSelectedChapter] = useState(null);\n  const [questions, setQuestions] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState({\n    type: '',\n    text: ''\n  });\n\n  // Predefined textbooks with chapters and page numbers\n  const defaultTextbooks = {\n    'Physics': [{\n      name: 'NCERT Physics Class 10',\n      chapters: [{\n        name: 'Electricity',\n        pages: '1-20'\n      }, {\n        name: 'Magnetic Effects of Current',\n        pages: '21-40'\n      }, {\n        name: 'Light - Reflection and Refraction',\n        pages: '41-65'\n      }, {\n        name: 'Human Eye and Colourful World',\n        pages: '66-85'\n      }, {\n        name: 'Sources of Energy',\n        pages: '86-105'\n      }]\n    }],\n    'Chemistry': [{\n      name: 'NCERT Chemistry Class 10',\n      chapters: [{\n        name: 'Chemical Reactions and Equations',\n        pages: '1-18'\n      }, {\n        name: 'Acids, Bases and Salts',\n        pages: '19-35'\n      }, {\n        name: 'Metals and Non-metals',\n        pages: '36-55'\n      }, {\n        name: 'Carbon and its Compounds',\n        pages: '56-80'\n      }, {\n        name: 'Periodic Classification of Elements',\n        pages: '81-95'\n      }]\n    }],\n    'Biology': [{\n      name: 'NCERT Biology Class 10',\n      chapters: [{\n        name: 'Life Processes',\n        pages: '1-25'\n      }, {\n        name: 'Control and Coordination',\n        pages: '26-45'\n      }, {\n        name: 'How do Organisms Reproduce',\n        pages: '46-70'\n      }, {\n        name: 'Heredity and Evolution',\n        pages: '71-90'\n      }, {\n        name: 'Our Environment',\n        pages: '91-110'\n      }]\n    }],\n    'Mathematics': [{\n      name: 'NCERT Mathematics Class 10',\n      chapters: [{\n        name: 'Real Numbers',\n        pages: '1-15'\n      }, {\n        name: 'Polynomials',\n        pages: '16-30'\n      }, {\n        name: 'Pair of Linear Equations in Two Variables',\n        pages: '31-50'\n      }, {\n        name: 'Quadratic Equations',\n        pages: '51-70'\n      }, {\n        name: 'Arithmetic Progressions',\n        pages: '71-85'\n      }, {\n        name: 'Triangles',\n        pages: '86-110'\n      }, {\n        name: 'Coordinate Geometry',\n        pages: '111-130'\n      }, {\n        name: 'Introduction to Trigonometry',\n        pages: '131-150'\n      }, {\n        name: 'Some Applications of Trigonometry',\n        pages: '151-165'\n      }, {\n        name: 'Circles',\n        pages: '166-185'\n      }, {\n        name: 'Areas Related to Circles',\n        pages: '186-200'\n      }, {\n        name: 'Surface Areas and Volumes',\n        pages: '201-225'\n      }, {\n        name: 'Statistics',\n        pages: '226-245'\n      }, {\n        name: 'Probability',\n        pages: '246-260'\n      }]\n    }]\n  };\n  useEffect(() => {\n    fetchPapers();\n  }, []);\n  useEffect(() => {\n    if (selectedPaper && selectedTextbook) {\n      calculateChapterStats();\n    }\n  }, [selectedPaper, selectedTextbook]);\n  const fetchPapers = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/uploaded-papers');\n      setPapers(response.data);\n    } catch (err) {\n      console.error('Error fetching papers:', err);\n      setMessage({\n        type: 'error',\n        text: 'Failed to load papers'\n      });\n    }\n  };\n  const handlePaperSelect = async paper => {\n    setSelectedPaper(paper);\n    setSelectedTextbook(null);\n    setSelectedChapter(null);\n    setQuestions([]);\n    setChapters([]);\n    setChapterStats([]);\n\n    // Set available textbooks based on subject\n    const availableTextbooks = defaultTextbooks[paper.subject] || [];\n    setTextbooks(availableTextbooks);\n    if (availableTextbooks.length === 1) {\n      // Auto-select if only one textbook\n      handleTextbookSelect(availableTextbooks[0]);\n    }\n    setMessage({\n      type: 'info',\n      text: `Selected: ${paper.title}`\n    });\n  };\n  const handleTextbookSelect = textbook => {\n    setSelectedTextbook(textbook);\n    setSelectedChapter(null);\n    setQuestions([]);\n    setChapters(textbook.chapters);\n    setMessage({\n      type: 'info',\n      text: `Selected: ${textbook.name}`\n    });\n  };\n  const calculateChapterStats = async () => {\n    if (!selectedPaper || !selectedTextbook) return;\n    try {\n      // Fetch all questions from the selected paper\n      const response = await axios.get(`http://localhost:5000/api/parsed-questions?paper_id=${selectedPaper.id}`);\n      const allQuestions = response.data;\n\n      // Calculate question count for each chapter\n      const stats = selectedTextbook.chapters.map(chapter => {\n        const chapterQuestions = filterQuestionsByChapter(allQuestions, chapter.name);\n        return {\n          ...chapter,\n          questionCount: chapterQuestions.length\n        };\n      });\n      setChapterStats(stats);\n    } catch (err) {\n      console.error('Error calculating chapter stats:', err);\n    }\n  };\n  const handleChapterSelect = async chapterData => {\n    setSelectedChapter(chapterData);\n    setLoading(true);\n    setMessage({\n      type: '',\n      text: ''\n    });\n    try {\n      // Fetch all questions from the selected paper\n      const response = await axios.get(`http://localhost:5000/api/parsed-questions?paper_id=${selectedPaper.id}`);\n      const allQuestions = response.data;\n\n      // Filter questions by chapter using AI/keyword matching\n      const filteredQuestions = filterQuestionsByChapter(allQuestions, chapterData.name);\n      setQuestions(filteredQuestions);\n      if (filteredQuestions.length === 0) {\n        setMessage({\n          type: 'warning',\n          text: `No questions found for chapter: ${chapterData.name}`\n        });\n      } else {\n        setMessage({\n          type: 'success',\n          text: `Found ${filteredQuestions.length} questions for: ${chapterData.name}`\n        });\n      }\n    } catch (err) {\n      console.error('Error fetching questions:', err);\n      setMessage({\n        type: 'error',\n        text: 'Failed to load questions'\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n  const filterQuestionsByChapter = (questions, chapter) => {\n    // Enhanced keyword matching with scoring system for more focused results\n    const chapterKeywords = {\n      'Electricity': {\n        primary: ['current', 'voltage', 'resistance', 'ohm', 'circuit', 'electric power', 'electrical energy'],\n        secondary: ['joule', 'watt', 'ampere', 'volt', 'resistor', 'conductor', 'insulator']\n      },\n      'Magnetic Effects of Current': {\n        primary: ['magnetic field', 'electromagnet', 'solenoid', 'motor', 'generator', 'fleming'],\n        secondary: ['magnet', 'electromagnetic induction', 'armature', 'commutator']\n      },\n      'Light - Reflection and Refraction': {\n        primary: ['reflection', 'refraction', 'mirror', 'lens', 'focal length', 'image formation'],\n        secondary: ['concave', 'convex', 'ray diagram', 'optical', 'refractive index']\n      },\n      'Human Eye and Colourful World': {\n        primary: ['eye', 'retina', 'cornea', 'spectrum', 'dispersion', 'rainbow', 'prism'],\n        secondary: ['vision', 'myopia', 'hypermetropia', 'presbyopia', 'cataract']\n      },\n      'Sources of Energy': {\n        primary: ['renewable energy', 'solar energy', 'wind energy', 'fossil fuel', 'nuclear energy'],\n        secondary: ['biogas', 'hydroelectric', 'geothermal', 'tidal energy']\n      },\n      'Chemical Reactions and Equations': {\n        primary: ['chemical reaction', 'chemical equation', 'reactant', 'product', 'balanced equation'],\n        secondary: ['oxidation', 'reduction', 'decomposition', 'combination', 'displacement']\n      },\n      'Acids, Bases and Salts': {\n        primary: ['acid', 'base', 'salt', 'ph scale', 'neutralization'],\n        secondary: ['alkali', 'indicator', 'litmus', 'acidic', 'basic']\n      },\n      'Metals and Non-metals': {\n        primary: ['metal', 'non-metal', 'metalloid', 'reactivity series', 'corrosion'],\n        secondary: ['alloy', 'ore', 'extraction', 'metallic', 'ionic bond']\n      },\n      'Carbon and its Compounds': {\n        primary: ['carbon compound', 'organic compound', 'hydrocarbon', 'functional group'],\n        secondary: ['alkane', 'alkene', 'alkyne', 'alcohol', 'carboxylic acid', 'ester']\n      },\n      'Life Processes': {\n        primary: ['nutrition', 'respiration', 'transportation', 'excretion', 'photosynthesis'],\n        secondary: ['digestion', 'cellular respiration', 'transpiration', 'kidney']\n      },\n      'Control and Coordination': {\n        primary: ['nervous system', 'hormone', 'endocrine', 'reflex action', 'neuron'],\n        secondary: ['brain', 'spinal cord', 'synapse', 'receptor', 'effector']\n      },\n      'How do Organisms Reproduce': {\n        primary: ['reproduction', 'sexual reproduction', 'asexual reproduction', 'fertilization'],\n        secondary: ['gamete', 'zygote', 'fission', 'budding', 'vegetative propagation']\n      },\n      'Heredity and Evolution': {\n        primary: ['heredity', 'inheritance', 'gene', 'chromosome', 'evolution', 'natural selection'],\n        secondary: ['dna', 'darwin', 'variation', 'speciation', 'fossil']\n      },\n      'Our Environment': {\n        primary: ['ecosystem', 'food chain', 'food web', 'biodegradable', 'ozone layer'],\n        secondary: ['environment', 'pollution', 'greenhouse effect', 'decomposer']\n      },\n      'Real Numbers': {\n        primary: ['real number', 'rational number', 'irrational number', 'euclid', 'hcf', 'lcm'],\n        secondary: ['prime', 'composite', 'fundamental theorem']\n      },\n      'Polynomials': {\n        primary: ['polynomial', 'degree of polynomial', 'zero of polynomial', 'coefficient'],\n        secondary: ['quadratic polynomial', 'cubic polynomial', 'factorization']\n      },\n      'Pair of Linear Equations in Two Variables': {\n        primary: ['linear equation', 'simultaneous equation', 'substitution method', 'elimination method'],\n        secondary: ['cross multiplication', 'graphical method', 'consistent', 'inconsistent']\n      },\n      'Quadratic Equations': {\n        primary: ['quadratic equation', 'discriminant', 'roots of equation', 'quadratic formula'],\n        secondary: ['x²', 'x^2', 'factorization', 'completing square']\n      },\n      'Arithmetic Progressions': {\n        primary: ['arithmetic progression', 'common difference', 'nth term', 'sum of ap'],\n        secondary: ['ap', 'arithmetic sequence', 'series']\n      },\n      'Triangles': {\n        primary: ['similar triangle', 'congruent triangle', 'pythagoras theorem', 'triangle theorem'],\n        secondary: ['area of triangle', 'perimeter', 'altitude', 'median']\n      },\n      'Coordinate Geometry': {\n        primary: ['coordinate', 'distance formula', 'section formula', 'midpoint formula'],\n        secondary: ['slope', 'x-axis', 'y-axis', 'cartesian plane']\n      },\n      'Introduction to Trigonometry': {\n        primary: ['trigonometry', 'trigonometric ratio', 'sine', 'cosine', 'tangent'],\n        secondary: ['sin', 'cos', 'tan', 'angle', 'θ', 'theta']\n      },\n      'Some Applications of Trigonometry': {\n        primary: ['height and distance', 'angle of elevation', 'angle of depression', 'line of sight'],\n        secondary: ['trigonometric application', 'tower', 'building height']\n      },\n      'Circles': {\n        primary: ['circle', 'tangent to circle', 'chord', 'secant', 'circle theorem'],\n        secondary: ['radius', 'diameter', 'arc', 'segment']\n      },\n      'Areas Related to Circles': {\n        primary: ['area of circle', 'sector', 'segment of circle', 'circumference'],\n        secondary: ['π', 'pi', 'circular region', 'annulus']\n      },\n      'Surface Areas and Volumes': {\n        primary: ['surface area', 'volume', 'total surface area', 'curved surface area'],\n        secondary: ['cube', 'cuboid', 'cylinder', 'cone', 'sphere', 'hemisphere']\n      },\n      'Statistics': {\n        primary: ['mean', 'median', 'mode', 'frequency distribution', 'cumulative frequency'],\n        secondary: ['data', 'class interval', 'grouped data', 'ogive']\n      },\n      'Probability': {\n        primary: ['probability', 'theoretical probability', 'experimental probability', 'random experiment'],\n        secondary: ['event', 'outcome', 'sample space', 'certain', 'impossible']\n      }\n    };\n    const chapterData = chapterKeywords[chapter];\n    if (!chapterData) {\n      // Fallback to simple keyword matching\n      const keywords = chapter.toLowerCase().split(' ');\n      return questions.filter(q => {\n        const questionText = q.question_text.toLowerCase();\n        return keywords.some(keyword => questionText.includes(keyword));\n      });\n    }\n\n    // Score-based filtering for more focused results\n    return questions.filter(q => {\n      const questionText = q.question_text.toLowerCase();\n      let score = 0;\n\n      // Primary keywords are worth 3 points\n      chapterData.primary.forEach(keyword => {\n        if (questionText.includes(keyword.toLowerCase())) {\n          score += 3;\n        }\n      });\n\n      // Secondary keywords are worth 1 point\n      chapterData.secondary.forEach(keyword => {\n        if (questionText.includes(keyword.toLowerCase())) {\n          score += 1;\n        }\n      });\n\n      // Require minimum score of 2 for more focused results\n      return score >= 2;\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chapter-questions\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chapter-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uD83D\\uDCD6 Questions by Chapter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Select a question paper, textbook, and chapter to view related questions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 7\n    }, this), message.text && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `message ${message.type}`,\n      children: message.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chapter-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"paper-selection\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\uD83D\\uDCC4 Select Question Paper\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"papers-list\",\n          children: papers.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"no-data\",\n            children: \"No question papers uploaded yet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 15\n          }, this) : papers.map(paper => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `paper-card ${(selectedPaper === null || selectedPaper === void 0 ? void 0 : selectedPaper.id) === paper.id ? 'selected' : ''}`,\n            onClick: () => handlePaperSelect(paper),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"paper-icon\",\n              children: \"\\uD83D\\uDCDD\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"paper-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: paper.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 369,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"paper-subject\",\n                children: paper.subject\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 370,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"paper-date\",\n                children: new Date(paper.uploaded_at).toLocaleDateString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 371,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 368,\n              columnNumber: 19\n            }, this), (selectedPaper === null || selectedPaper === void 0 ? void 0 : selectedPaper.id) === paper.id && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"selected-badge\",\n              children: \"\\u2713\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 21\n            }, this)]\n          }, paper.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 9\n      }, this), selectedPaper && textbooks.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"textbook-selection\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\uD83D\\uDCDA Select Textbook\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"textbooks-list\",\n          children: textbooks.map((textbook, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `textbook-card ${(selectedTextbook === null || selectedTextbook === void 0 ? void 0 : selectedTextbook.name) === textbook.name ? 'selected' : ''}`,\n            onClick: () => handleTextbookSelect(textbook),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"textbook-icon\",\n              children: \"\\uD83D\\uDCD5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 395,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"textbook-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: textbook.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 397,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [textbook.chapters.length, \" Chapters\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 398,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 396,\n              columnNumber: 19\n            }, this), (selectedTextbook === null || selectedTextbook === void 0 ? void 0 : selectedTextbook.name) === textbook.name && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"selected-badge\",\n              children: \"\\u2713\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 401,\n              columnNumber: 21\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 11\n      }, this), selectedTextbook && chapterStats.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chapter-table-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"\\uD83D\\uDCCB Chapters from \", selectedTextbook.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chapter-table-container\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"chapter-table\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"#\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 417,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Chapter Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 418,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Pages\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 419,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Questions\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 420,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Action\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 421,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 416,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 415,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: chapterStats.map((chapter, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                className: (selectedChapter === null || selectedChapter === void 0 ? void 0 : selectedChapter.name) === chapter.name ? 'selected-row' : '',\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"chapter-num\",\n                  children: index + 1\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 430,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"chapter-name-cell\",\n                  children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: chapter.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 432,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 431,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"pages-cell\",\n                  children: chapter.pages\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 434,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"count-cell\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: `question-count ${chapter.questionCount > 0 ? 'has-questions' : 'no-questions'}`,\n                    children: chapter.questionCount\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 436,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 435,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"action-cell\",\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"view-btn\",\n                    onClick: () => handleChapterSelect(chapter),\n                    disabled: chapter.questionCount === 0,\n                    children: chapter.questionCount > 0 ? 'View Questions' : 'No Questions'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 441,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 440,\n                  columnNumber: 23\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 426,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 424,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 414,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"table-summary\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Total Chapters:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 456,\n              columnNumber: 17\n            }, this), \" \", chapterStats.length, \" |\", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \" Total Questions:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 457,\n              columnNumber: 17\n            }, this), \" \", chapterStats.reduce((sum, ch) => sum + ch.questionCount, 0)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 455,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 11\n      }, this), selectedChapter && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"questions-display\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"questions-header-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"\\u2753 Questions from: \", selectedChapter.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 467,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chapter-meta\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"meta-item\",\n              children: [\"\\uD83D\\uDCD6 \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Textbook:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 469,\n                columnNumber: 48\n              }, this), \" \", selectedTextbook.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 469,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"meta-item\",\n              children: [\"\\uD83D\\uDCC4 \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Pages:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 470,\n                columnNumber: 48\n              }, this), \" \", selectedChapter.pages]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 470,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"meta-item\",\n              children: [\"\\uD83D\\uDCDD \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Paper:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 471,\n                columnNumber: 48\n              }, this), \" \", selectedPaper.title]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 471,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 468,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 466,\n          columnNumber: 13\n        }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"spinner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 477,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Loading questions...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 478,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 15\n        }, this) : questions.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-questions\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No questions found for this chapter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 482,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"hint\",\n            children: \"Try selecting a different chapter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 483,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"questions-list\",\n          children: questions.map((q, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"question-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"question-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"question-number\",\n                children: [\"Q\", q.question_number]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 490,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"chapter-page-badge\",\n                children: [\"\\uD83D\\uDCD6 Pages: \", selectedChapter.pages]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 491,\n                columnNumber: 23\n              }, this), q.question_type && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: `question-type ${q.question_type}`,\n                children: q.question_type.toUpperCase()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 495,\n                columnNumber: 25\n              }, this), q.marks && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"question-marks\",\n                children: [q.marks, \" marks\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 500,\n                columnNumber: 25\n              }, this), q.has_math && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"math-badge\",\n                children: \"\\uD83D\\uDCD0 Math\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 503,\n                columnNumber: 25\n              }, this), q.has_diagram && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"diagram-badge\",\n                children: \"\\uD83D\\uDCCA Diagram\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 506,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 489,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"question-text\",\n              children: q.question_text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 509,\n              columnNumber: 21\n            }, this), (() => {\n              // Parse sub_parts if it's a string\n              let subParts = q.sub_parts;\n              if (typeof subParts === 'string') {\n                try {\n                  subParts = JSON.parse(subParts);\n                } catch (e) {\n                  subParts = [];\n                }\n              }\n              return subParts && Array.isArray(subParts) && subParts.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"sub-parts\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Sub-parts:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 524,\n                  columnNumber: 27\n                }, this), \" \", subParts.join(', ')]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 523,\n                columnNumber: 25\n              }, this);\n            })()]\n          }, q.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 488,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 486,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 341,\n    columnNumber: 5\n  }, this);\n};\n_s(ChapterQuestions, \"uM+YsqPu078WhSd2uo3C3Btxq2s=\");\n_c = ChapterQuestions;\nexport default ChapterQuestions;\nvar _c;\n$RefreshReg$(_c, \"ChapterQuestions\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","ChapterQuestions","_s","papers","setPapers","textbooks","setTextbooks","selectedPaper","setSelectedPaper","selectedTextbook","setSelectedTextbook","chapters","setChapters","chapterStats","setChapterStats","selectedChapter","setSelectedChapter","questions","setQuestions","loading","setLoading","message","setMessage","type","text","defaultTextbooks","name","pages","fetchPapers","calculateChapterStats","response","get","data","err","console","error","handlePaperSelect","paper","availableTextbooks","subject","length","handleTextbookSelect","title","textbook","id","allQuestions","stats","map","chapter","chapterQuestions","filterQuestionsByChapter","questionCount","handleChapterSelect","chapterData","filteredQuestions","chapterKeywords","primary","secondary","keywords","toLowerCase","split","filter","q","questionText","question_text","some","keyword","includes","score","forEach","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","Date","uploaded_at","toLocaleDateString","index","disabled","reduce","sum","ch","question_number","question_type","toUpperCase","marks","has_math","has_diagram","subParts","sub_parts","JSON","parse","e","Array","isArray","join","_c","$RefreshReg$"],"sources":["D:/AI/_Programs/CBSE/aqnamic/frontend/src/components/ChapterQuestions.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './ChapterQuestions.css';\n\nconst ChapterQuestions = () => {\n  const [papers, setPapers] = useState([]);\n  const [textbooks, setTextbooks] = useState([]);\n  const [selectedPaper, setSelectedPaper] = useState(null);\n  const [selectedTextbook, setSelectedTextbook] = useState(null);\n  const [chapters, setChapters] = useState([]);\n  const [chapterStats, setChapterStats] = useState([]);\n  const [selectedChapter, setSelectedChapter] = useState(null);\n  const [questions, setQuestions] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState({ type: '', text: '' });\n\n  // Predefined textbooks with chapters and page numbers\n  const defaultTextbooks = {\n    'Physics': [\n      {\n        name: 'NCERT Physics Class 10',\n        chapters: [\n          { name: 'Electricity', pages: '1-20' },\n          { name: 'Magnetic Effects of Current', pages: '21-40' },\n          { name: 'Light - Reflection and Refraction', pages: '41-65' },\n          { name: 'Human Eye and Colourful World', pages: '66-85' },\n          { name: 'Sources of Energy', pages: '86-105' }\n        ]\n      }\n    ],\n    'Chemistry': [\n      {\n        name: 'NCERT Chemistry Class 10',\n        chapters: [\n          { name: 'Chemical Reactions and Equations', pages: '1-18' },\n          { name: 'Acids, Bases and Salts', pages: '19-35' },\n          { name: 'Metals and Non-metals', pages: '36-55' },\n          { name: 'Carbon and its Compounds', pages: '56-80' },\n          { name: 'Periodic Classification of Elements', pages: '81-95' }\n        ]\n      }\n    ],\n    'Biology': [\n      {\n        name: 'NCERT Biology Class 10',\n        chapters: [\n          { name: 'Life Processes', pages: '1-25' },\n          { name: 'Control and Coordination', pages: '26-45' },\n          { name: 'How do Organisms Reproduce', pages: '46-70' },\n          { name: 'Heredity and Evolution', pages: '71-90' },\n          { name: 'Our Environment', pages: '91-110' }\n        ]\n      }\n    ],\n    'Mathematics': [\n      {\n        name: 'NCERT Mathematics Class 10',\n        chapters: [\n          { name: 'Real Numbers', pages: '1-15' },\n          { name: 'Polynomials', pages: '16-30' },\n          { name: 'Pair of Linear Equations in Two Variables', pages: '31-50' },\n          { name: 'Quadratic Equations', pages: '51-70' },\n          { name: 'Arithmetic Progressions', pages: '71-85' },\n          { name: 'Triangles', pages: '86-110' },\n          { name: 'Coordinate Geometry', pages: '111-130' },\n          { name: 'Introduction to Trigonometry', pages: '131-150' },\n          { name: 'Some Applications of Trigonometry', pages: '151-165' },\n          { name: 'Circles', pages: '166-185' },\n          { name: 'Areas Related to Circles', pages: '186-200' },\n          { name: 'Surface Areas and Volumes', pages: '201-225' },\n          { name: 'Statistics', pages: '226-245' },\n          { name: 'Probability', pages: '246-260' }\n        ]\n      }\n    ]\n  };\n\n  useEffect(() => {\n    fetchPapers();\n  }, []);\n\n  useEffect(() => {\n    if (selectedPaper && selectedTextbook) {\n      calculateChapterStats();\n    }\n  }, [selectedPaper, selectedTextbook]);\n\n  const fetchPapers = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/uploaded-papers');\n      setPapers(response.data);\n    } catch (err) {\n      console.error('Error fetching papers:', err);\n      setMessage({ type: 'error', text: 'Failed to load papers' });\n    }\n  };\n\n  const handlePaperSelect = async (paper) => {\n    setSelectedPaper(paper);\n    setSelectedTextbook(null);\n    setSelectedChapter(null);\n    setQuestions([]);\n    setChapters([]);\n    setChapterStats([]);\n    \n    // Set available textbooks based on subject\n    const availableTextbooks = defaultTextbooks[paper.subject] || [];\n    setTextbooks(availableTextbooks);\n    \n    if (availableTextbooks.length === 1) {\n      // Auto-select if only one textbook\n      handleTextbookSelect(availableTextbooks[0]);\n    }\n    \n    setMessage({ type: 'info', text: `Selected: ${paper.title}` });\n  };\n\n  const handleTextbookSelect = (textbook) => {\n    setSelectedTextbook(textbook);\n    setSelectedChapter(null);\n    setQuestions([]);\n    setChapters(textbook.chapters);\n    setMessage({ type: 'info', text: `Selected: ${textbook.name}` });\n  };\n\n  const calculateChapterStats = async () => {\n    if (!selectedPaper || !selectedTextbook) return;\n\n    try {\n      // Fetch all questions from the selected paper\n      const response = await axios.get(\n        `http://localhost:5000/api/parsed-questions?paper_id=${selectedPaper.id}`\n      );\n      \n      const allQuestions = response.data;\n      \n      // Calculate question count for each chapter\n      const stats = selectedTextbook.chapters.map(chapter => {\n        const chapterQuestions = filterQuestionsByChapter(allQuestions, chapter.name);\n        return {\n          ...chapter,\n          questionCount: chapterQuestions.length\n        };\n      });\n      \n      setChapterStats(stats);\n    } catch (err) {\n      console.error('Error calculating chapter stats:', err);\n    }\n  };\n\n  const handleChapterSelect = async (chapterData) => {\n    setSelectedChapter(chapterData);\n    setLoading(true);\n    setMessage({ type: '', text: '' });\n\n    try {\n      // Fetch all questions from the selected paper\n      const response = await axios.get(\n        `http://localhost:5000/api/parsed-questions?paper_id=${selectedPaper.id}`\n      );\n      \n      const allQuestions = response.data;\n      \n      // Filter questions by chapter using AI/keyword matching\n      const filteredQuestions = filterQuestionsByChapter(allQuestions, chapterData.name);\n      \n      setQuestions(filteredQuestions);\n      \n      if (filteredQuestions.length === 0) {\n        setMessage({ \n          type: 'warning', \n          text: `No questions found for chapter: ${chapterData.name}` \n        });\n      } else {\n        setMessage({ \n          type: 'success', \n          text: `Found ${filteredQuestions.length} questions for: ${chapterData.name}` \n        });\n      }\n    } catch (err) {\n      console.error('Error fetching questions:', err);\n      setMessage({ type: 'error', text: 'Failed to load questions' });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const filterQuestionsByChapter = (questions, chapter) => {\n    // Enhanced keyword matching with scoring system for more focused results\n    const chapterKeywords = {\n      'Electricity': {\n        primary: ['current', 'voltage', 'resistance', 'ohm', 'circuit', 'electric power', 'electrical energy'],\n        secondary: ['joule', 'watt', 'ampere', 'volt', 'resistor', 'conductor', 'insulator']\n      },\n      'Magnetic Effects of Current': {\n        primary: ['magnetic field', 'electromagnet', 'solenoid', 'motor', 'generator', 'fleming'],\n        secondary: ['magnet', 'electromagnetic induction', 'armature', 'commutator']\n      },\n      'Light - Reflection and Refraction': {\n        primary: ['reflection', 'refraction', 'mirror', 'lens', 'focal length', 'image formation'],\n        secondary: ['concave', 'convex', 'ray diagram', 'optical', 'refractive index']\n      },\n      'Human Eye and Colourful World': {\n        primary: ['eye', 'retina', 'cornea', 'spectrum', 'dispersion', 'rainbow', 'prism'],\n        secondary: ['vision', 'myopia', 'hypermetropia', 'presbyopia', 'cataract']\n      },\n      'Sources of Energy': {\n        primary: ['renewable energy', 'solar energy', 'wind energy', 'fossil fuel', 'nuclear energy'],\n        secondary: ['biogas', 'hydroelectric', 'geothermal', 'tidal energy']\n      },\n      'Chemical Reactions and Equations': {\n        primary: ['chemical reaction', 'chemical equation', 'reactant', 'product', 'balanced equation'],\n        secondary: ['oxidation', 'reduction', 'decomposition', 'combination', 'displacement']\n      },\n      'Acids, Bases and Salts': {\n        primary: ['acid', 'base', 'salt', 'ph scale', 'neutralization'],\n        secondary: ['alkali', 'indicator', 'litmus', 'acidic', 'basic']\n      },\n      'Metals and Non-metals': {\n        primary: ['metal', 'non-metal', 'metalloid', 'reactivity series', 'corrosion'],\n        secondary: ['alloy', 'ore', 'extraction', 'metallic', 'ionic bond']\n      },\n      'Carbon and its Compounds': {\n        primary: ['carbon compound', 'organic compound', 'hydrocarbon', 'functional group'],\n        secondary: ['alkane', 'alkene', 'alkyne', 'alcohol', 'carboxylic acid', 'ester']\n      },\n      'Life Processes': {\n        primary: ['nutrition', 'respiration', 'transportation', 'excretion', 'photosynthesis'],\n        secondary: ['digestion', 'cellular respiration', 'transpiration', 'kidney']\n      },\n      'Control and Coordination': {\n        primary: ['nervous system', 'hormone', 'endocrine', 'reflex action', 'neuron'],\n        secondary: ['brain', 'spinal cord', 'synapse', 'receptor', 'effector']\n      },\n      'How do Organisms Reproduce': {\n        primary: ['reproduction', 'sexual reproduction', 'asexual reproduction', 'fertilization'],\n        secondary: ['gamete', 'zygote', 'fission', 'budding', 'vegetative propagation']\n      },\n      'Heredity and Evolution': {\n        primary: ['heredity', 'inheritance', 'gene', 'chromosome', 'evolution', 'natural selection'],\n        secondary: ['dna', 'darwin', 'variation', 'speciation', 'fossil']\n      },\n      'Our Environment': {\n        primary: ['ecosystem', 'food chain', 'food web', 'biodegradable', 'ozone layer'],\n        secondary: ['environment', 'pollution', 'greenhouse effect', 'decomposer']\n      },\n      'Real Numbers': {\n        primary: ['real number', 'rational number', 'irrational number', 'euclid', 'hcf', 'lcm'],\n        secondary: ['prime', 'composite', 'fundamental theorem']\n      },\n      'Polynomials': {\n        primary: ['polynomial', 'degree of polynomial', 'zero of polynomial', 'coefficient'],\n        secondary: ['quadratic polynomial', 'cubic polynomial', 'factorization']\n      },\n      'Pair of Linear Equations in Two Variables': {\n        primary: ['linear equation', 'simultaneous equation', 'substitution method', 'elimination method'],\n        secondary: ['cross multiplication', 'graphical method', 'consistent', 'inconsistent']\n      },\n      'Quadratic Equations': {\n        primary: ['quadratic equation', 'discriminant', 'roots of equation', 'quadratic formula'],\n        secondary: ['x²', 'x^2', 'factorization', 'completing square']\n      },\n      'Arithmetic Progressions': {\n        primary: ['arithmetic progression', 'common difference', 'nth term', 'sum of ap'],\n        secondary: ['ap', 'arithmetic sequence', 'series']\n      },\n      'Triangles': {\n        primary: ['similar triangle', 'congruent triangle', 'pythagoras theorem', 'triangle theorem'],\n        secondary: ['area of triangle', 'perimeter', 'altitude', 'median']\n      },\n      'Coordinate Geometry': {\n        primary: ['coordinate', 'distance formula', 'section formula', 'midpoint formula'],\n        secondary: ['slope', 'x-axis', 'y-axis', 'cartesian plane']\n      },\n      'Introduction to Trigonometry': {\n        primary: ['trigonometry', 'trigonometric ratio', 'sine', 'cosine', 'tangent'],\n        secondary: ['sin', 'cos', 'tan', 'angle', 'θ', 'theta']\n      },\n      'Some Applications of Trigonometry': {\n        primary: ['height and distance', 'angle of elevation', 'angle of depression', 'line of sight'],\n        secondary: ['trigonometric application', 'tower', 'building height']\n      },\n      'Circles': {\n        primary: ['circle', 'tangent to circle', 'chord', 'secant', 'circle theorem'],\n        secondary: ['radius', 'diameter', 'arc', 'segment']\n      },\n      'Areas Related to Circles': {\n        primary: ['area of circle', 'sector', 'segment of circle', 'circumference'],\n        secondary: ['π', 'pi', 'circular region', 'annulus']\n      },\n      'Surface Areas and Volumes': {\n        primary: ['surface area', 'volume', 'total surface area', 'curved surface area'],\n        secondary: ['cube', 'cuboid', 'cylinder', 'cone', 'sphere', 'hemisphere']\n      },\n      'Statistics': {\n        primary: ['mean', 'median', 'mode', 'frequency distribution', 'cumulative frequency'],\n        secondary: ['data', 'class interval', 'grouped data', 'ogive']\n      },\n      'Probability': {\n        primary: ['probability', 'theoretical probability', 'experimental probability', 'random experiment'],\n        secondary: ['event', 'outcome', 'sample space', 'certain', 'impossible']\n      }\n    };\n\n    const chapterData = chapterKeywords[chapter];\n    if (!chapterData) {\n      // Fallback to simple keyword matching\n      const keywords = chapter.toLowerCase().split(' ');\n      return questions.filter(q => {\n        const questionText = q.question_text.toLowerCase();\n        return keywords.some(keyword => questionText.includes(keyword));\n      });\n    }\n\n    // Score-based filtering for more focused results\n    return questions.filter(q => {\n      const questionText = q.question_text.toLowerCase();\n      let score = 0;\n\n      // Primary keywords are worth 3 points\n      chapterData.primary.forEach(keyword => {\n        if (questionText.includes(keyword.toLowerCase())) {\n          score += 3;\n        }\n      });\n\n      // Secondary keywords are worth 1 point\n      chapterData.secondary.forEach(keyword => {\n        if (questionText.includes(keyword.toLowerCase())) {\n          score += 1;\n        }\n      });\n\n      // Require minimum score of 2 for more focused results\n      return score >= 2;\n    });\n  };\n\n  return (\n    <div className=\"chapter-questions\">\n      <div className=\"chapter-header\">\n        <h2>📖 Questions by Chapter</h2>\n        <p>Select a question paper, textbook, and chapter to view related questions</p>\n      </div>\n\n      {message.text && (\n        <div className={`message ${message.type}`}>\n          {message.text}\n        </div>\n      )}\n\n      <div className=\"chapter-content\">\n        {/* Paper Selection */}\n        <div className=\"paper-selection\">\n          <h3>📄 Select Question Paper</h3>\n          <div className=\"papers-list\">\n            {papers.length === 0 ? (\n              <p className=\"no-data\">No question papers uploaded yet</p>\n            ) : (\n              papers.map(paper => (\n                <div\n                  key={paper.id}\n                  className={`paper-card ${selectedPaper?.id === paper.id ? 'selected' : ''}`}\n                  onClick={() => handlePaperSelect(paper)}\n                >\n                  <div className=\"paper-icon\">📝</div>\n                  <div className=\"paper-info\">\n                    <h4>{paper.title}</h4>\n                    <p className=\"paper-subject\">{paper.subject}</p>\n                    <p className=\"paper-date\">\n                      {new Date(paper.uploaded_at).toLocaleDateString()}\n                    </p>\n                  </div>\n                  {selectedPaper?.id === paper.id && (\n                    <div className=\"selected-badge\">✓</div>\n                  )}\n                </div>\n              ))\n            )}\n          </div>\n        </div>\n\n        {/* Textbook Selection */}\n        {selectedPaper && textbooks.length > 0 && (\n          <div className=\"textbook-selection\">\n            <h3>📚 Select Textbook</h3>\n            <div className=\"textbooks-list\">\n              {textbooks.map((textbook, index) => (\n                <div\n                  key={index}\n                  className={`textbook-card ${selectedTextbook?.name === textbook.name ? 'selected' : ''}`}\n                  onClick={() => handleTextbookSelect(textbook)}\n                >\n                  <div className=\"textbook-icon\">📕</div>\n                  <div className=\"textbook-info\">\n                    <h4>{textbook.name}</h4>\n                    <p>{textbook.chapters.length} Chapters</p>\n                  </div>\n                  {selectedTextbook?.name === textbook.name && (\n                    <div className=\"selected-badge\">✓</div>\n                  )}\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n\n        {/* Chapter Table */}\n        {selectedTextbook && chapterStats.length > 0 && (\n          <div className=\"chapter-table-section\">\n            <h3>📋 Chapters from {selectedTextbook.name}</h3>\n            <div className=\"chapter-table-container\">\n              <table className=\"chapter-table\">\n                <thead>\n                  <tr>\n                    <th>#</th>\n                    <th>Chapter Name</th>\n                    <th>Pages</th>\n                    <th>Questions</th>\n                    <th>Action</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {chapterStats.map((chapter, index) => (\n                    <tr \n                      key={index}\n                      className={selectedChapter?.name === chapter.name ? 'selected-row' : ''}\n                    >\n                      <td className=\"chapter-num\">{index + 1}</td>\n                      <td className=\"chapter-name-cell\">\n                        <strong>{chapter.name}</strong>\n                      </td>\n                      <td className=\"pages-cell\">{chapter.pages}</td>\n                      <td className=\"count-cell\">\n                        <span className={`question-count ${chapter.questionCount > 0 ? 'has-questions' : 'no-questions'}`}>\n                          {chapter.questionCount}\n                        </span>\n                      </td>\n                      <td className=\"action-cell\">\n                        <button\n                          className=\"view-btn\"\n                          onClick={() => handleChapterSelect(chapter)}\n                          disabled={chapter.questionCount === 0}\n                        >\n                          {chapter.questionCount > 0 ? 'View Questions' : 'No Questions'}\n                        </button>\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n            <div className=\"table-summary\">\n              <p>\n                <strong>Total Chapters:</strong> {chapterStats.length} | \n                <strong> Total Questions:</strong> {chapterStats.reduce((sum, ch) => sum + ch.questionCount, 0)}\n              </p>\n            </div>\n          </div>\n        )}\n\n        {/* Questions Display */}\n        {selectedChapter && (\n          <div className=\"questions-display\">\n            <div className=\"questions-header-info\">\n              <h3>❓ Questions from: {selectedChapter.name}</h3>\n              <div className=\"chapter-meta\">\n                <span className=\"meta-item\">📖 <strong>Textbook:</strong> {selectedTextbook.name}</span>\n                <span className=\"meta-item\">📄 <strong>Pages:</strong> {selectedChapter.pages}</span>\n                <span className=\"meta-item\">📝 <strong>Paper:</strong> {selectedPaper.title}</span>\n              </div>\n            </div>\n            \n            {loading ? (\n              <div className=\"loading\">\n                <div className=\"spinner\"></div>\n                <p>Loading questions...</p>\n              </div>\n            ) : questions.length === 0 ? (\n              <div className=\"no-questions\">\n                <p>No questions found for this chapter</p>\n                <p className=\"hint\">Try selecting a different chapter</p>\n              </div>\n            ) : (\n              <div className=\"questions-list\">\n                {questions.map((q, index) => (\n                  <div key={q.id} className=\"question-item\">\n                    <div className=\"question-header\">\n                      <span className=\"question-number\">Q{q.question_number}</span>\n                      <span className=\"chapter-page-badge\">\n                        📖 Pages: {selectedChapter.pages}\n                      </span>\n                      {q.question_type && (\n                        <span className={`question-type ${q.question_type}`}>\n                          {q.question_type.toUpperCase()}\n                        </span>\n                      )}\n                      {q.marks && (\n                        <span className=\"question-marks\">{q.marks} marks</span>\n                      )}\n                      {q.has_math && (\n                        <span className=\"math-badge\">📐 Math</span>\n                      )}\n                      {q.has_diagram && (\n                        <span className=\"diagram-badge\">📊 Diagram</span>\n                      )}\n                    </div>\n                    <div className=\"question-text\">\n                      {q.question_text}\n                    </div>\n                    {(() => {\n                      // Parse sub_parts if it's a string\n                      let subParts = q.sub_parts;\n                      if (typeof subParts === 'string') {\n                        try {\n                          subParts = JSON.parse(subParts);\n                        } catch (e) {\n                          subParts = [];\n                        }\n                      }\n                      return subParts && Array.isArray(subParts) && subParts.length > 0 && (\n                        <div className=\"sub-parts\">\n                          <strong>Sub-parts:</strong> {subParts.join(', ')}\n                        </div>\n                      );\n                    })()}\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ChapterQuestions;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}